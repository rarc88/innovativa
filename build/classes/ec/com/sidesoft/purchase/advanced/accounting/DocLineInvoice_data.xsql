<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP & CRM  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SLU
 * Contributions are Copyright (C) 2001-2012 Openbravo S.L.U.
 ******************************************************************************
-->





<SqlClass name="DocLineInvoiceData" package="ec.com.sidesoft.purchase.advanced.accounting">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_INVOICELINE.C_INVOICELINE_ID, C_INVOICELINE.AD_CLIENT_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.AD_ORG_ID,C_INVOICELINE.AD_ORG_ID) AS AD_ORG_ID,
          C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID, C_INVOICELINE.C_ORDERLINE_ID, C_INVOICELINE.M_INOUTLINE_ID,
        C_INVOICELINE.LINE, C_INVOICELINE.DESCRIPTION, C_INVOICELINE.M_PRODUCT_ID, C_INVOICELINE.ACCOUNT_ID AS M_C_GLITEM_ID, C_INVOICELINE.QTYINVOICED,
        C_INVOICELINE.PRICELIST, C_INVOICELINE.PRICEACTUAL, C_INVOICELINE.PRICELIMIT,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.AMT, C_INVOICELINE.LINENETAMT) AS LINENETAMT,
        C_INVOICELINE.C_CHARGE_ID, C_INVOICELINE.CHARGEAMT, C_INVOICELINE.C_UOM_ID, '' as C_TAX_ID,
        C_INVOICELINE.S_RESOURCEASSIGNMENT_ID, C_INVOICELINE.TAXAMT, C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,
        C_INVOICELINE.ISDESCRIPTION, C_INVOICELINE.QUANTITYORDER, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.C_PROJECT_ID, C_INVOICELINE.C_PROJECT_ID) AS C_PROJECT_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER1_ID,C_INVOICELINE.USER1_ID) AS user1Id,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER2_ID,C_INVOICELINE.USER2_ID) AS user2Id,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_COSTCENTER_ID,C_INVOICELINE.C_COSTCENTER_ID) AS C_COSTCENTER_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.A_ASSET_ID,C_INVOICELINE.A_ASSET_ID) AS A_ASSET_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_BPARTNER_ID,C_INVOICELINE.C_BPARTNER_ID) AS C_BPARTNER_ID, C_INVOICELINE_ACCTDIMENSION.C_ACTIVITY_ID,
        C_INVOICELINE.ISDEFERRED, C_INVOICELINE.DEFPLANTYPE, C_INVOICELINE.PERIODNUMBER, C_INVOICELINE.C_PERIOD_ID,
        '' AS GLITEM_CREDIT_ACCT, '' AS GLITEM_DEBIT_ACCT, '' AS ACCOUNT_ID, '' AS ACCOUNT_NCPROVEDOR, '' AS NOTCONFIG, '' AS IL_TAXAMT
        FROM C_INVOICELINE left join C_INVOICELINE_ACCTDIMENSION on C_INVOICELINE.C_INVOICELINE_ID = C_INVOICELINE_ACCTDIMENSION.C_INVOICELINE_ID
        WHERE C_INVOICE_ID = ?
        ORDER BY LINE
     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
  <SqlMethod name="selectTotal" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT MAX(C_INVOICELINE.C_INVOICELINE_ID) AS C_INVOICELINE_ID, C_INVOICELINE.AD_CLIENT_ID,
        C_INVOICELINE.AD_ORG_ID, C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID,
        MAX(C_INVOICELINE.C_ORDERLINE_ID) AS C_ORDERLINE_ID, MAX(C_INVOICELINE.M_INOUTLINE_ID) AS M_INOUTLINE_ID,
        MAX(C_INVOICELINE.LINE) AS LINE, MAX(C_INVOICELINE.DESCRIPTION) AS DESCRIPTION, C_INVOICELINE.M_PRODUCT_ID,
        C_INVOICELINE.ACCOUNT_ID AS M_C_GLITEM_ID, SUM(C_INVOICELINE.QTYINVOICED) AS QTYINVOICED, C_INVOICELINE.PRICELIST,
        C_INVOICELINE.PRICEACTUAL, C_INVOICELINE.PRICELIMIT, SUM(COALESCE(C_INVOICELINE_ACCTDIMENSION.AMT, C_INVOICELINE.LINENETAMT))
        AS LINENETAMT, MAX(C_INVOICELINE.C_CHARGE_ID) AS C_CHARGE_ID, SUM(C_INVOICELINE.CHARGEAMT) AS CHARGEAMT,
        C_INVOICELINE.C_UOM_ID, '' as C_TAX_ID, C_INVOICELINE.S_RESOURCEASSIGNMENT_ID, SUM(C_INVOICELINE.TAXAMT) AS TAXAMT,
        C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,
        C_INVOICELINE.ISDESCRIPTION, SUM(C_INVOICELINE.QUANTITYORDER) AS QUANTITYORDER, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.C_PROJECT_ID, C_INVOICELINE.C_PROJECT_ID) AS C_PROJECT_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER1_ID,C_INVOICELINE.USER1_ID) AS user1Id,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER2_ID,C_INVOICELINE.USER2_ID) AS user2Id,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_COSTCENTER_ID,C_INVOICELINE.C_COSTCENTER_ID) AS C_COSTCENTER_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.A_ASSET_ID,C_INVOICELINE.A_ASSET_ID) AS A_ASSET_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_BPARTNER_ID,C_INVOICELINE.C_BPARTNER_ID) AS C_BPARTNER_ID, C_INVOICELINE_ACCTDIMENSION.C_ACTIVITY_ID,
        C_INVOICELINE.ISDEFERRED, C_INVOICELINE.DEFPLANTYPE, C_INVOICELINE.PERIODNUMBER, C_INVOICELINE.C_PERIOD_ID
        FROM C_INVOICELINE left join C_INVOICELINE_ACCTDIMENSION on C_INVOICELINE.C_INVOICELINE_ID = C_INVOICELINE_ACCTDIMENSION.C_INVOICELINE_ID
        WHERE  C_INVOICELINE.C_INVOICE_ID = ?
        GROUP BY C_INVOICELINE.AD_CLIENT_ID, C_INVOICELINE.AD_ORG_ID, C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID,
        C_INVOICELINE.M_PRODUCT_ID, C_INVOICELINE.ACCOUNT_ID, C_INVOICELINE.PRICELIST, C_INVOICELINE.PRICEACTUAL,
        C_INVOICELINE.PRICELIMIT, C_INVOICELINE.C_UOM_ID, C_INVOICELINE.C_TAX_ID, C_INVOICELINE.S_RESOURCEASSIGNMENT_ID,
        C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,C_INVOICELINE.ISDESCRIPTION, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.C_PROJECT_ID, C_INVOICELINE.C_PROJECT_ID),
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER1_ID,C_INVOICELINE.USER1_ID),
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER2_ID,C_INVOICELINE.USER2_ID),
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_COSTCENTER_ID,C_INVOICELINE.C_COSTCENTER_ID),
        COALESCE(C_INVOICELINE_ACCTDIMENSION.A_ASSET_ID,C_INVOICELINE.A_ASSET_ID),
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_BPARTNER_ID,C_INVOICELINE.C_BPARTNER_ID), C_INVOICELINE_ACCTDIMENSION.C_ACTIVITY_ID,
        C_INVOICELINE.ISDEFERRED, C_INVOICELINE.DEFPLANTYPE, C_INVOICELINE.PERIODNUMBER, C_INVOICELINE.C_PERIOD_ID
        ORDER BY LINE
     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
   <SqlMethod name="selectGlitem" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
    SELECT GLITEM_DEBIT_ACCT, GLITEM_CREDIT_ACCT
    FROM C_GLITEM_ACCT 
    WHERE C_GLITEM_id = ?
    AND C_ACCTSCHEMA_id = ?
     ]]>
     </Sql>
     <Parameter name="C_Glitem_ID"/>
     <Parameter name="C_AcctSchema_ID"/>
   </SqlMethod>
   <SqlMethod name="selectUndeductable" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_INVOICELINE.C_INVOICELINE_ID, C_INVOICELINE.AD_CLIENT_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.AD_ORG_ID,C_INVOICELINE.AD_ORG_ID) AS AD_ORG_ID,
        C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID, C_INVOICELINE.C_ORDERLINE_ID, C_INVOICELINE.M_INOUTLINE_ID,
        C_INVOICELINE.LINE, C_INVOICELINE.DESCRIPTION, C_INVOICELINE.M_PRODUCT_ID, C_INVOICELINE.ACCOUNT_ID AS M_C_GLITEM_ID, C_INVOICELINE.QTYINVOICED,
        C_INVOICELINE.PRICELIST, C_INVOICELINE.PRICEACTUAL, C_INVOICELINE.PRICELIMIT,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.AMT, C_INVOICELINE.LINENETAMT) AS LINENETAMT,
        C_INVOICELINE.C_CHARGE_ID, C_INVOICELINE.CHARGEAMT, C_INVOICELINE.C_UOM_ID,  c_invoicelinetax.C_TAX_ID,
        C_INVOICELINE.S_RESOURCEASSIGNMENT_ID, C_INVOICELINE.TAXAMT, C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,
        C_INVOICELINE.ISDESCRIPTION, C_INVOICELINE.QUANTITYORDER, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.C_PROJECT_ID, C_INVOICELINE.C_PROJECT_ID) AS C_PROJECT_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER1_ID,C_INVOICELINE.USER1_ID) AS user1Id,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.USER2_ID,C_INVOICELINE.USER2_ID) AS user2Id,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_COSTCENTER_ID,C_INVOICELINE.C_COSTCENTER_ID) AS C_COSTCENTER_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.A_ASSET_ID,C_INVOICELINE.A_ASSET_ID) AS A_ASSET_ID,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.C_BPARTNER_ID,C_INVOICELINE.C_BPARTNER_ID) AS C_BPARTNER_ID, C_INVOICELINE_ACCTDIMENSION.C_ACTIVITY_ID,
        C_INVOICELINE.ISDEFERRED, C_INVOICELINE.DEFPLANTYPE, C_INVOICELINE.PERIODNUMBER, C_INVOICELINE.C_PERIOD_ID,
        '' AS GLITEM_CREDIT_ACCT, '' AS GLITEM_DEBIT_ACCT
        FROM C_INVOICELINE 
        left join C_INVOICELINE_ACCTDIMENSION on C_INVOICELINE.C_INVOICELINE_ID = C_INVOICELINE_ACCTDIMENSION.C_INVOICELINE_ID
        left join c_invoicelinetax on c_invoicelinetax.C_INVOICELINE_ID=C_INVOICELINE.C_INVOICELINE_ID 
        left join c_tax on c_tax.c_tax_id=c_invoicelinetax.c_tax_id
        WHERE C_INVOICELINE.C_INVOICE_ID = ?
        and c_tax.istaxundeductable='Y'
        ORDER BY LINE

     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
   <SqlMethod name="selectAccountBParnet" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT (COALESCE (max(bpa.v_liability_acct), 
		                 (SELECT max(bpa01.v_liability_acct) 
		                  FROM c_bp_vendor_acct bpa01 
						  WHERE bpa01.c_acctschema_id = ? AND bpa01.c_bpartner_id = ? AND  bpa01.EM_Spaa_Default = 'Y' ))) AS ACCOUNT_ID
        FROM c_bp_vendor_acct bpa 
		WHERE bpa.c_acctschema_id = ? AND bpa.c_bpartner_id = ?
        AND EXISTS (SELECT 1 FROM C_INVOICELINE il INNER JOIN sfb_budget_cert_line cl ON il.em_sfb_budget_cert_line_id = cl.sfb_budget_cert_line_id
                    WHERE cl.sfb_budget_item_id = bpa.em_spaa_budget_item AND  il.c_invoiceline_id = ? )
     ]]>
     </Sql>
	 <Parameter name="acctschemaId"/>
	 <Parameter name="bpartnerId"/>
	 <Parameter name="acctschemaId"/>
	 <Parameter name="bpartnerId"/>	 
     <Parameter name="invoiceline"/>
  </SqlMethod>
  <SqlMethod name="selectAccountNCProveedor" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT (COALESCE (COALESCE(max(bpa.em_spaa_ncproveedor), max(bpa.v_liability_acct)), 
		                 (SELECT max(bpa01.v_liability_acct)
		                  FROM c_bp_vendor_acct bpa01 
						  WHERE bpa01.c_acctschema_id = ? AND bpa01.c_bpartner_id = ? AND  bpa01.EM_Spaa_Default = 'Y' ))) AS ACCOUNT_NCPROVEDOR
        FROM c_bp_vendor_acct bpa 
		WHERE bpa.c_acctschema_id = ? AND bpa.c_bpartner_id = ?
        AND EXISTS (SELECT 1 FROM C_INVOICELINE il INNER JOIN sfb_budget_cert_line cl ON il.em_sfb_budget_cert_line_id = cl.sfb_budget_cert_line_id
                    WHERE cl.sfb_budget_item_id = bpa.em_spaa_budget_item AND  il.c_invoiceline_id = ? )
     ]]>
     </Sql>
	 <Parameter name="acctschemaId"/>
	 <Parameter name="bpartnerId"/>
	 <Parameter name="acctschemaId"/>
	 <Parameter name="bpartnerId"/>	 
     <Parameter name="invoiceline"/>
  </SqlMethod>
  <SqlMethod name="existInvoiceLineNotConfig" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT 'N' AS NOTCONFIG FROM C_INVOICELINE il INNER JOIN sfb_budget_cert_line cl ON il.em_sfb_budget_cert_line_id = cl.sfb_budget_cert_line_id
        WHERE il.C_INVOICE_ID = ? 
        AND NOT EXISTS (SELECT 1 FROM c_bp_vendor_acct bpa WHERE bpa.c_acctschema_id = ? AND bpa.c_bpartner_id = ? and cl.sfb_budget_item_id = bpa.em_spaa_budget_item ); 
     ]]>
     </Sql>
	 <Parameter name="C_INVOICE_ID"/>
	 <Parameter name="c_acctschema_id"/>
	 <Parameter name="c_bpartner_id"/>
	</SqlMethod>
	<SqlMethod name="selectTaxTotalForInvoiceLine" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT sum(ilt.Taxamt) as IL_TAXAMT
		FROM C_InvoiceLineTax ilt
        WHERE ilt.C_Invoiceline_ID = ?; 		  
     ]]>
     </Sql>
	 <Parameter name="C_Invoiceline_ID"/>
	</SqlMethod>
  </SqlClass>
