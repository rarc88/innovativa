<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SLU 
 * All portions are Copyright (C) 2001-2010 Openbravo SLU 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="RptFinPaymentBudgetData" package="com.sidesoft.flopec.budget.reportrequestpayment">
   <SqlClassComment></SqlClassComment>
   <SqlMethod name="select" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
      <![CDATA[
select payment.fin_payment_id,
partner.taxid as partner_ruc,
coalesce(to_char(user_.name),'') || ' / ' || coalesce(to_char(sba.name),'') as writting_by,
coalesce(to_char(payment.documentno),'') as documentoinvoice ,
extract(year from payment.paymentdate) as anio,
coalesce(to_char(payment.description),'') as invoicedescription,
coalesce(to_char(partnerlocation.name),'')  as localizacion_user,
coalesce(to_char(partner.name),'') as name1,
coalesce(to_char(partner.name2),'') as NameFiscal,
coalesce(to_char(partner.name),'') as NNF,
coalesce(to_char(user_.title || ' - ' || payment.documentno || ' - ' ||  extract(year from payment.paymentdate)),'')  AS TitleDocumYear,
coalesce(to_char(user_.title),'') as title,
coalesce(to_char(user_.name),'') as usser,
currency.iso_code as valuecurrency,
payment.amount as priceactual ,
'USD' as currencyconvert,
coalesce(to_char((ssfl_convert_numbertoletters( (payment.amount)) || '          ' || currency.description)),'') as priceinletters,
TO_CHAR(payment.created,'dd-MM-yyyy') AS dateinvoiced,
TO_CHAR(payment.paymentdate,'dd-MM-yyyy') AS dateacct,
USER_.name as createdby_name,
sba.name as area,
coalesce(to_number((case when payment.c_currency_id <> '100'  then cnvr.multiplyrate end)),0) as factorconversion,
case when payment.c_currency_id ='100'then payment.amount else payment.amount * (coalesce(to_number((case when payment.c_currency_id <> '100'  then cnvr.multiplyrate end)),0))end as GrandTotalConvert,
case when payment.c_currency_id ='100'then payment.amount else payment.amount * (coalesce(to_number((case when payment.c_currency_id <> '100'  then cnvr.multiplyrate end)),0))end as valor    
 from fin_payment payment  
 left join fin_payment_detail paymentdetail on paymentdetail.fin_payment_id = payment.fin_payment_id
 left join c_bpartner partner on partner.c_bpartner_id =  payment.c_bpartner_id 
 left join c_bpartner_location partnerlocation on partnerlocation.c_bpartner_id = payment.c_bpartner_id and partnerlocation.isbillto='Y'
 left join ad_user user_ on user_.ad_user_id = payment.createdby
 left join c_currency currency on currency.c_currency_id = payment.c_currency_id 
 left join c_bpartner bpc on bpc.c_bpartner_id = payment.createdby
 left join sfb_budget_area sba on sba.sfb_budget_area_id = payment.em_sfb_budget_area_id 
 left join c_conversion_rate cnvr on cnvr.c_currency_id = payment.c_currency_id and (payment.paymentdate between cnvr.validfrom and cnvr.validto )
 WHERE payment.FIN_PAYMENT_ID = ?
        ]]>
        </Sql>
        <Parameter name="invoice"/>
   </SqlMethod>
   <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
  </SqlMethod>
</SqlClass>
