<?xml version="1.0"?>
  <database name="FUNCTION SFPR_UNPROCESSED_SDETAIL">
    <function name="SFPR_UNPROCESSED_SDETAIL" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
  Cur_RveDetailConcept            RECORD;
  Cur_Parameter                   RECORD;
  
  v_client_id                     VARCHAR2(32);
  v_user_id                       VARCHAR2(32);
  
  v_ResultStr                     VARCHAR2(2000) := '';
  v_count                         INTEGER;
  v_BpartnerID			VARCHAR2(32);      
  v_CPeriodID			VARCHAR2(32);      
  v_surrogate_detail_id		VARCHAR2(32);      
  v_surrogateID			VARCHAR2(32);      
  v_n_insertions 	 NUMBER;	--OBTG:NUMBER--
  v_Message 			VARCHAR2(2000):='';
    
BEGIN
  --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY

	-- Get Parameters
	v_ResultStr := 'ReadingParameters';
	v_n_insertions := 0; 

   FOR Cur_Parameter IN
      (SELECT i.Record_ID,
              i.AD_User_ID, 
              i.AD_Client_ID,
              i.AD_Org_ID                    
       FROM AD_PInstance i      
       WHERE i.AD_PInstance_ID = PInstance_ID)
    LOOP
    
      v_surrogate_detail_id := Cur_Parameter.record_id;	  
      v_client_id := Cur_Parameter.ad_client_id;
      v_user_id := Cur_Parameter.ad_user_id;     
      
    END LOOP; -- Get Parameter

    SELECT coalesce(to_number((SELECT count(*) FROM sspr_concept_amount WHERE em_sfpr_surrogate_detail_id = v_surrogate_detail_id)),0)
    INTO v_count
    FROM DUAL  ;

    IF v_count>0 THEN
    
	RAISE_APPLICATION_ERROR(-20000, '@Sfpr_ValidSurrogate@');

    ELSIF v_count = 0 THEN
	
	SELECT c_bpartner_id,c_period_id,sfpr_employee_surrogate_id
	INTO v_BpartnerID,v_CPeriodID,v_surrogateID
	FROM sfpr_surrogate_detail 
	WHERE sfpr_surrogate_detail_id = v_surrogate_detail_id; 

	UPDATE sfpr_employee_surrogate set processed = 'N'
	WHERE c_bpartner_id = v_BpartnerID 
	AND sfpr_employee_surrogate_id = v_surrogateID;
        
	DELETE FROM sfpr_surrogate_detail 
	where sfpr_surrogate_detail_id = v_surrogate_detail_id;

	v_n_insertions:= 1;
	
    END IF;
    v_Message := '@RowsDeleted@: ' || v_n_insertions || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  
  END; --END BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;
    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SFPR_UNPROCESSED_SDETAIL
]]></body>
    </function>
  </database>
