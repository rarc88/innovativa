<?xml version="1.0"?>
  <database name="TRIGGER SFPR_VALIDATE_MOVEMENT_TRG">
    <trigger name="SFPR_VALIDATE_MOVEMENT_TRG" table="SFPR_MOVEMENT_TYPE" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[
   V_MOVEMENT_ID VARCHAR(32); 	--OBTG:VARCHAR2--
   V_COUNT NUMBER;		--OBTG:NUMBER--
   V_DATEMOVEMENT DATE;	
   V_PERIOD_ID VARCHAR(32); 	--OBTG:VARCHAR2--
   V_COUNT2 NUMBER;		--OBTG:NUMBER--
   V_COUNT3 NUMBER;		--OBTG:NUMBER--
   V_COUNT4 NUMBER;		--OBTG:NUMBER--
   
BEGIN
    
    
 IF AD_isTriggerEnabled()='N' THEN RETURN;
  END IF; 
  
  IF (INSERTING OR UPDATING) THEN
  
	V_DATEMOVEMENT:= :new.transaction_date;
  
  SELECT
	(SELECT C_PERIOD_ID
	FROM C_PERIOD
	WHERE (V_DATEMOVEMENT BETWEEN  STARTDATE AND ENDDATE) AND OPENCLOSE='C')
  INTO V_PERIOD_ID
  from Dual ;
  
	IF V_PERIOD_ID IS NULL  THEN
		RAISE_APPLICATION_ERROR(-20000, '@Sfpr_InvalidDate@');
	END IF;
  END IF;

	IF (DELETING) THEN
			
		V_MOVEMENT_ID:= :OLD.sfpr_movement_type_id;

		SELECT COALESCE((SELECT COUNT(*)
		FROM SFPR_RVE_DETAIL
		WHERE SFPR_MOVEMENT_TYPE_ID = V_MOVEMENT_ID),0)
		INTO V_COUNT2
		FROM DUAL;
		
		IF V_COUNT2 > 0 THEN
		
			RAISE_APPLICATION_ERROR(-20000, '@sfpr_movement_process@');

		END IF;
		
		SELECT COALESCE((SELECT COUNT(*)
		FROM SFPR_MOVEMENT_TYPE MT
		LEFT JOIN SFPR_EMPLOYEE_RVE RV ON RV.SFPR_MOVEMENT_TYPE_ID = MT.SFPR_MOVEMENT_TYPE_ID
		WHERE RV.SFPR_MOVEMENT_TYPE_ID = V_MOVEMENT_ID),0)
		INTO V_COUNT
		FROM DUAL;

		IF V_COUNT > 0 THEN
		
			RAISE_APPLICATION_ERROR(-20000, '@Sfpr_ValidMovement@');

		END IF;

	END IF;
		
  END SFPR_VALIDATE_MOVEMENT_TRG
]]></body>
    </trigger>
  </database>
