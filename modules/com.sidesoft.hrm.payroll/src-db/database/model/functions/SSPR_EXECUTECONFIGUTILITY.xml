<?xml version="1.0"?>
  <database name="FUNCTION SSPR_EXECUTECONFIGUTILITY">
    <function name="SSPR_EXECUTECONFIGUTILITY" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_Parameter RECORD;  
  Cur_Employee RECORD;
  CUR_READMISSION RECORD;
  CUR_READMISSIONS RECORD;
  CUR_FAMILY RECORD;
  Cur_EmployeeS RECORD;
  CUR_CONTRACT RECORD;
  CUR_CONTRACT1 RECORD;
  
  v_Client_ID VARCHAR(32); 			--OBTG:VARCHAR2--
  v_Org_ID VARCHAR(32); 			--OBTG:VARCHAR2--
  v_User_ID VARCHAR(32); 			--OBTG:VARCHAR2--
  
  v_ResultStr VARCHAR(2000) := ''; 		--OBTG:VARCHAR2--
  v_Payroll_ID VARCHAR(32); 			--OBTG:VARCHAR2--
  v_Processed VARCHAR(60); 			--OBTG:VARCHAR2--
  v_Ticket_ID VARCHAR(32);  			--OBTG:VARCHAR2--
  v_Period_ID VARCHAR(32);    			--OBTG:VARCHAR2--
  v_Concept_ID VARCHAR(32); 			--OBTG:VARCHAR2--
  
  v_n_insertions NUMBER;			--OBTG:NUMBER--
  v_Message VARCHAR(2000):=''; 			--OBTG:VARCHAR2--

--  --valornull_exception  Exception;
  V_AMOUNT NUMBER;				--OBTG:NUMBER--
  V_AMOUNT_CONCEP NUMBER;			--OBTG:NUMBER--
  
  v_value NUMBER;				--OBTG:NUMBER--

  V_STARTYEAR DATE;
  V_ENDYEAR DATE;
  V_PART_EMPL NUMBER;				--OBTG:NUMBER--
  V_PERC_UTI_EMP NUMBER;			--OBTG:NUMBER--
  V_PERC_UTI_LOADS NUMBER;			--OBTG:NUMBER--
  V_PERC_EMP NUMBER;				--OBTG:NUMBER--
  V_LIMIT_AGE NUMBER;				--OBTG:NUMBER--
  V_UTI_EMP NUMBER;				--OBTG:NUMBER--
  V_UTI_LOADS NUMBER;				--OBTG:NUMBER--
  V_PER_PARTICIPATION NUMBER;			--OBTG:NUMBER--
  v_StartPeriod_ID CHARACTER VARYING(32);	--OBTG:VARCHAR2--
  V_VALIND_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_READMISSION_ID CHARACTER VARYING(32);	--OBTG:VARCHAR2--
  V_BPARTNER_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_BPARTNERS_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_SDATE DATE;
  V_EDATE DATE;
  V_NOMONTHS NUMBER;				--OBTG:NUMBER--
  V_NOMONTHS2 NUMBER;				--OBTG:NUMBER--
  V_DATEACTUAL DATE;
  V_STARTDATE_EMP DATE;
  V_ENDDATE_EMP DATE;
  V_AUXC NUMBER;				--OBTG:NUMBER--
  V_NODAYSWORKED NUMBER;			--OBTG:NUMBER--
  V_TSDATE CHARACTER VARYING(10);		--OBTG:VARCHAR2--
  V_TEDATE CHARACTER VARYING(10);		--OBTG:VARCHAR2--
  V_COUNTLOADS NUMBER;				--OBTG:NUMBER--
  V_AGELIMIT  NUMBER;				--OBTG:NUMBER--
  V_NODAYS_LOADS NUMBER;			--OBTG:NUMBER--
  V_INDEX_EMPLOYEE NUMBER ;			--OBTG:NUMBER--
  V_INDEX_LOADS NUMBER;			--OBTG:NUMBER--
  V_UTILITY_EMPLOYEE NUMBER;			--OBTG:NUMBER--
  V_UTILITY_LOADS NUMBER;			--OBTG:NUMBER--
  V_FAMILYT CHARACTER VARYING(2);		--OBTG:VARCHAR2--
  V_ISDISABLED CHARACTER VARYING(1);		--OBTG:VARCHAR2--
  V_COUNTLOADS2 NUMBER;			--OBTG:NUMBER-- 
  V_NODAYS_LOADS2 NUMBER;			--OBTG:NUMBER-- 
  V_ACUMDAYS	  NUMBER;			--OBTG:NUMBER-- 
  V_STARTDATECONTRACT DATE;
  V_ENDDATECONTRACT DATE;
  V_ENDDATE_R DATE;
  V_CONTRACT_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_F NUMBER;					--OBTG:NUMBER--
  V_COUNT_C NUMBER;				--OBTG:NUMBER--
  V_F1 CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_F2 CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_F3 CHARACTER VARYING(32);		--OBTG:VARCHAR2--
  V_EMPDAYS NUMBER;				--OBTG:NUMBER--
  V_LOADSDAYS NUMBER;				--OBTG:NUMBER--

BEGIN
  --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY

    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;

	FOR Cur_Parameter IN
	(	SELECT i.Record_ID,
		p.ParameterName,
		p.P_String,
		p.P_Number,
		p.P_Date,
		p.AD_Client_ID,
		p.AD_Org_ID,
		p.CreatedBy        
		FROM AD_PInstance i
		LEFT JOIN AD_PInstance_Para p
		   ON i.AD_PInstance_ID = p.AD_PInstance_ID
		WHERE i.AD_PInstance_ID = PInstance_ID
		ORDER BY p.SeqNo
	)
	LOOP      	  
	
		IF (Cur_Parameter.ParameterName = 'StartPeriod') THEN

			v_StartPeriod_ID := Cur_Parameter.P_String;      
			v_Client_ID := Cur_Parameter.AD_Client_ID;
			v_Org_ID := Cur_Parameter.AD_Org_ID;
			v_User_ID := Cur_Parameter.CreatedBy;

		ELSIF (Cur_Parameter.ParameterName = 'Utility_Value') THEN

			V_AMOUNT := Cur_Parameter.P_Number; 

		ELSE  
		
			DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
			
		END IF;     
      
	END LOOP; -- Get Parameter

	SELECT STARTDATE
	INTO V_STARTYEAR
	FROM C_PERIOD
	WHERE PERIODNO = '1' AND C_YEAR_ID = v_StartPeriod_ID;

	SELECT ENDDATE
	INTO V_ENDYEAR
	FROM C_PERIOD
	WHERE PERIODNO = '12' AND C_YEAR_ID = v_StartPeriod_ID;

	V_LIMIT_AGE:=0;
	
	SELECT  PERC_EARNINGS_EMPLOYEE, PERC_UTILITY_LOADS, AGE_LIMIT_CHILD , PERC_PARTICIPATION_EMPLOYEE
	INTO    V_PERC_UTI_EMP        , V_PERC_UTI_LOADS  , V_LIMIT_AGE     , V_PERC_EMP
	FROM SSPR_CONFIGURATIONUTILITY
	WHERE C_YEAR_ID = v_StartPeriod_ID;

	DELETE FROM sspr_utility_detail WHERE C_YEAR_ID =v_StartPeriod_ID ;
	DELETE FROM SSPR_VALUESINDICESPERIOD WHERE C_YEAR_ID =v_StartPeriod_ID ;

	V_PART_EMPL:= ROUND((V_AMOUNT * V_PERC_EMP),2);

	V_UTI_EMP:= ROUND(((V_AMOUNT * V_PERC_UTI_EMP )),2); -- VALUE FOR  THE CALCULATE - UTILITY EMPLOYEE

	V_UTI_LOADS:= ROUND(((V_AMOUNT * V_PERC_UTI_LOADS)),2); -- VALUE FOR CALCULATE - UTILITY OF LOADS FOR WITCH EMPLOYEE

	V_VALIND_ID:= GET_UUID();

	V_NOMONTHS2:=0;
	V_COUNTLOADS2:=0;
	V_NODAYS_LOADS2:=0;
	
	INSERT INTO SSPR_VALUESINDICESPERIOD(AD_ORG_ID, AD_CLIENT_ID, CREATED, CREATEDBY, UPDATED, UPDATEDBY
	, ISACTIVE, SSPR_VALUESINDICESPERIOD_ID, C_YEAR_ID, UTILITIES_YEARS, EMPLOYEE_PARTICIPATION, UTILITY_EMPLOYEE
	, UTILITY_LOADS, INDEX_EMPLOYEE, INDEX_LOADS)
	VALUES(v_Org_ID, v_Client_ID, now(), v_User_ID, now(), v_User_ID
	, 'Y', V_VALIND_ID, v_StartPeriod_ID, V_AMOUNT, V_PART_EMPL, V_UTI_EMP
	, V_UTI_LOADS, 0, 0);

	-- Begin Calculate of totals - days worked and (child * days worked)
	
	FOR Cur_Employee IN
	(
		SELECT CBP.C_BPARTNER_ID
		FROM C_BPARTNER CBP
		WHERE CBP.ISEMPLOYEE='Y'		
	)
	LOOP

		V_BPARTNER_ID:= Cur_Employee.C_BPARTNER_ID;
		V_NOMONTHS:=0;
		V_AUXC:=0;
		V_ENDDATE_EMP:=NULL;
		V_COUNTLOADS:=0;
		V_ACUMDAYS:=0;

			FOR CUR_CONTRACT IN
			(
				SELECT SSPR_CONTRACT_ID,STARTDATE,ENDDATE 
				FROM SSPR_CONTRACT
				WHERE C_BPARTNER_ID = V_BPARTNER_ID
				AND ((TO_CHAR(STARTDATE,'yyyy') = TO_CHAR(V_STARTYEAR,'yyyy') OR  TO_CHAR(ENDDATE,'yyyy')= TO_CHAR(V_STARTYEAR,'yyyy')) OR (ENDDATE IS NULL AND STARTDATE <= V_ENDYEAR))
				ORDER BY STARTDATE ASC				

			)
			LOOP

				IF V_AUXC = 0 THEN

					V_TSDATE:= TO_CHAR(CUR_CONTRACT.STARTDATE,'dd-MM-yyyy');
					V_SDATE:= TO_DATE(V_TSDATE);
					V_STARTDATE_EMP:=V_SDATE; 
					V_AUXC:=1;
				END IF;			

				V_TSDATE:= TO_CHAR(CUR_CONTRACT.STARTDATE,'dd-MM-yyyy');
				V_TEDATE:= TO_CHAR(CUR_CONTRACT.ENDDATE,'dd-MM-yyyy');

				V_SDATE:= TO_DATE(V_TSDATE);
				V_EDATE:= TO_DATE(V_TEDATE);

				V_ENDDATE_R:= CUR_CONTRACT.ENDDATE;

					IF  (V_SDATE < V_STARTYEAR AND V_EDATE >= V_STARTYEAR) THEN

						V_ACUMDAYS:= V_ACUMDAYS + (TO_NUMBER(V_EDATE - V_STARTYEAR));

					ELSIF (V_SDATE >= V_STARTYEAR AND  V_EDATE > V_ENDYEAR)  THEN

						V_ACUMDAYS:= V_ACUMDAYS + (TO_NUMBER(V_SDATE - V_ENDYEAR));

					ELSIF (V_SDATE >= V_STARTYEAR AND  V_EDATE <= V_ENDYEAR) THEN				

						V_ACUMDAYS:= V_ACUMDAYS + (TO_NUMBER(V_EDATE - V_SDATE));
						
					ELSIF (V_ENDDATE_R IS NULL) THEN

						IF V_EDATE IS NULL THEN
						
							V_TEDATE:= TO_CHAR(V_ENDYEAR,'dd-MM-yyyy');
							V_EDATE:= TO_DATE(V_TEDATE);
							V_ENDDATE_EMP:= V_EDATE;

						END IF;


						V_F:= (TO_NUMBER(V_EDATE - V_SDATE));

						IF (V_SDATE < V_STARTYEAR AND  V_ENDDATE_R IS NULL) AND V_F>365 THEN
								V_ACUMDAYS:=360;														

						ELSE

						V_ACUMDAYS:= V_ACUMDAYS + (TO_NUMBER(V_EDATE - V_SDATE));

						END IF;

					END IF;

						
				

				V_NOMONTHS:= V_NOMONTHS + V_ACUMDAYS;
				V_ACUMDAYS:=0;
				
			END LOOP;

			V_ACUMDAYS:=0;

		FOR CUR_FAMILY IN -- Process for review if exist spoon or spouse by employee
		(
			SELECT FAMILYTIES,BIRTHDAY, ISDISABLED
			FROM SSPR_FAMILY
			WHERE C_BPARTNER_ID = V_BPARTNER_ID
		)
		LOOP
			V_FAMILYT:=CUR_FAMILY.FAMILYTIES;
			V_ISDISABLED:= CUR_FAMILY.ISDISABLED; 
			V_TSDATE:= TO_CHAR(CUR_FAMILY.BIRTHDAY,'dd-MM-yyyy');
			V_TEDATE:= TO_CHAR(V_ENDYEAR,'dd-MM-yyyy');
		
			V_SDATE:= TO_DATE(V_TSDATE);
			V_EDATE:= TO_DATE(V_TEDATE);

			IF (V_FAMILYT = '01' OR V_FAMILYT = '02' OR V_FAMILYT = '04')  THEN

				IF (V_FAMILYT = '02' OR V_FAMILYT = '04') THEN

					V_COUNTLOADS:= V_COUNTLOADS +1;
					
				END IF;
				
				IF (V_FAMILYT = '01') THEN

					V_AGELIMIT:= TRUNC((TO_NUMBER(V_EDATE - V_SDATE)/365),0);


					IF (V_AGELIMIT <= V_LIMIT_AGE AND V_ISDISABLED = 'N') THEN

						V_COUNTLOADS:= V_COUNTLOADS +1;
						
					ELSIF (V_ISDISABLED = 'Y') THEN

						V_COUNTLOADS:= V_COUNTLOADS +1;
						
					END IF;
					
				END IF;
				
			END IF;

			
		END LOOP;

		IF V_NOMONTHS>=364 THEN
		
			V_NOMONTHS:=360;
			
		END IF;

		V_NODAYS_LOADS:= V_NOMONTHS *  V_COUNTLOADS;

		-- Set of value : starting date of the contract of employee

		SELECT
		(SELECT MIN(STARTDATE)
		FROM SSPR_CONTRACT WHERE C_BPARTNER_ID = V_BPARTNER_ID)  
		INTO V_STARTDATECONTRACT
		FROM DUAL;

		-- Set of value : endding date of the contract of employee

		SELECT
		(SELECT ENDDATE FROM SSPR_CONTRACT WHERE STARTDATE = (SELECT MAX(STARTDATE)
		FROM SSPR_CONTRACT WHERE C_BPARTNER_ID = V_BPARTNER_ID)
		AND C_BPARTNER_ID = V_BPARTNER_ID
		)   
		INTO V_ENDDATECONTRACT
		FROM DUAL;

		IF V_ENDDATECONTRACT IS NULL THEN
			V_ENDDATECONTRACT:= V_ENDYEAR;
		END IF;
	
		IF TO_CHAR(V_ENDDATECONTRACT,'yyyy') = TO_CHAR(V_STARTYEAR,'yyyy') THEN

			INSERT INTO SSPR_UTILITY_DETAIL(AD_ORG_ID, AD_CLIENT_ID, CREATED, CREATEDBY, UPDATED, UPDATEDBY
			, ISACTIVE, SSPR_UTILITY_DETAIL_ID, C_YEAR_ID, C_BPARTNER_ID, STARTDATE, ENDDATE, DAYS_WORKED
			, DAYS_LOADS, UTILITY_EMPLOYEE, UTILITY_LOADS, NOLOADS)
			VALUES(v_Org_ID, v_Client_ID, now(), v_User_ID, now(), v_User_ID
			, 'Y', GET_UUID(), v_StartPeriod_ID, V_BPARTNER_ID, COALESCE(V_STARTDATECONTRACT,V_STARTYEAR), COALESCE(V_ENDDATECONTRACT,V_ENDYEAR), V_NOMONTHS
			, V_NODAYS_LOADS, 0, 0,ROUND(V_COUNTLOADS,2)) ;

			--END INSERT NEW LINE

			v_n_insertions:=v_n_insertions+1;
		END IF;
		
	END LOOP;

	V_EMPDAYS:= 0;
	V_LOADSDAYS:= 0;
	

	FOR Cur_Employee IN
	(
		SELECT DAYS_WORKED, DAYS_LOADS
		FROM SSPR_UTILITY_DETAIL
	)
	LOOP
		V_EMPDAYS:= V_EMPDAYS + Cur_Employee.DAYS_WORKED;
		V_LOADSDAYS:= V_LOADSDAYS + Cur_Employee.DAYS_LOADS;

	END LOOP;

   		-- UPDATE INDEX IN THE TABLE SSPR_VALUESINDICESPERIOD

		V_INDEX_EMPLOYEE:= ROUND((V_UTI_EMP / V_EMPDAYS),5) ;

		-- VALIDATED IF EMPLOYEE HAVE LOADS, AND CALCULATE INDEX EMPLOYEE AND LOADS
		IF (V_LOADSDAYS <> 0) THEN 
			V_INDEX_LOADS:= ROUND((V_UTI_LOADS / V_LOADSDAYS),5) ;
		ELSE 
			V_INDEX_LOADS:=0;
			V_INDEX_EMPLOYEE:= V_INDEX_EMPLOYEE + ROUND((V_UTI_LOADS / V_EMPDAYS),5) ;
		END IF;

		UPDATE SSPR_VALUESINDICESPERIOD SET INDEX_EMPLOYEE= V_INDEX_EMPLOYEE, INDEX_LOADS = V_INDEX_LOADS
		WHERE SSPR_VALUESINDICESPERIOD_ID = V_VALIND_ID;

	FOR Cur_Employee IN
	(
		SELECT DAYS_LOADS, DAYS_WORKED, C_YEAR_ID,C_BPARTNER_ID
		FROM SSPR_UTILITY_DETAIL
	)
	LOOP

		V_UTILITY_EMPLOYEE:= ROUND((Cur_Employee.DAYS_WORKED *  V_INDEX_EMPLOYEE),5);
		V_UTILITY_LOADS:= ROUND(( Cur_Employee.DAYS_LOADS *  V_INDEX_LOADS),5);

		UPDATE SSPR_UTILITY_DETAIL SET UTILITY_EMPLOYEE=V_UTILITY_EMPLOYEE , UTILITY_LOADS = V_UTILITY_LOADS
		WHERE C_BPARTNER_ID = Cur_Employee.C_BPARTNER_ID;

	END LOOP;
		

	v_Message := '@RowsInserted@: ' || v_n_insertions || '.';
	DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
 AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
	RETURN;
    
END; --BODY
EXCEPTION
WHEN OTHERS THEN
v_ResultStr:= '@ERROR=' || SQLERRM;

    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SSPR_EXECUTECONFIGUTILITY
]]></body>
    </function>
  </database>
