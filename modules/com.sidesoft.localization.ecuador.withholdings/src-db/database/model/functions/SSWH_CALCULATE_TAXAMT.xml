<?xml version="1.0"?>
  <database name="FUNCTION SSWH_CALCULATE_TAXAMT">
    <function name="SSWH_CALCULATE_TAXAMT" type="VARCHAR">
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_invoice_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_invoiceline_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_user_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_originaltax_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_tax_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_linenetamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_alternatetaxbaseamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_stdprecision" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_linetaxamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_IsSummary C_TAX.ISSUMMARY%TYPE;
  v_Cascade C_TAX.CASCADE%TYPE;
  v_TaxBaseAmount NUMBER;
  v_BaseAmount C_TAX.BASEAMOUNT%TYPE;
  v_AlreadyExists NUMBER;
  v_C_TaxBase_ID C_TAX.C_TAXBASE_ID%TYPE;
  v_LineNet NUMBER;
  v_AlternateTaxBaseAmt NUMBER;
  v_LineNo C_INVOICETAX.LINE%TYPE;
  v_Rate C_TAX.RATE%TYPE;
  v_Client_ID VARCHAR2(32);
  v_TaxAmt NUMBER;
  TYPE RECORD IS REF CURSOR;
    Cur_Taxes RECORD;
    FINISH_PROCESS BOOLEAN:=false;
  BEGIN --BODY
    v_TaxBaseAmount:=0;
    v_TaxAmt := 0;
    SELECT ISSUMMARY, CASCADE, RATE, BASEAMOUNT, AD_CLIENT_ID, C_TAXBASE_ID
    INTO v_IsSummary, v_Cascade, v_Rate, v_BaseAmount, v_Client_ID, v_C_TaxBase_ID
    FROM C_TAX
    WHERE C_TAX_ID = p_tax_id;
    IF(v_BaseAmount='LNA' OR v_BaseAmount='LNATAX') THEN
      v_TaxBaseAmount:=p_LineNetAmt;
    ELSIF (v_BaseAmount='TBA' OR v_BaseAmount='TBATAX') THEN
      v_TaxBaseAmount:=p_AlternateTaxBaseAmt;
    END IF;
    IF (v_TaxBaseAmount IS NULL) THEN
      v_TaxBaseAmount:=0;
    END IF;
    IF (v_BaseAmount='TAX' OR v_BaseAmount='LNATAX' OR v_BaseAmount='TBATAX') THEN
      SELECT COALESCE(SUM(TAXAMT),0) + v_TaxBaseAmount
      INTO v_TaxBaseAmount
      FROM C_INVOICELINETAX, C_TAX
      WHERE C_INVOICELINETAX.C_TAX_ID = C_TAX.C_TAX_ID
      AND C_TAX_ISMEMBER(v_C_TaxBase_ID,C_TAX.C_TAX_ID) = 1
      AND C_INVOICELINE_ID = p_invoiceline_id
      AND C_TAX.ISSUMMARY='N';
    END IF;
    IF (v_BaseAmount='SSWH_LTA') THEN
      v_TaxBaseAmount:=p_linetaxamt;     
    END IF;      
    IF(v_Cascade='Y') THEN
      SELECT COALESCE(SUM(TAXAMT), 0) + v_TaxBaseAmount
      INTO v_TaxBaseAmount
      FROM C_INVOICELINETAX
      WHERE C_INVOICELINE_ID = p_invoiceline_id;
    END IF;
    IF(v_IsSummary='N') THEN
      SELECT COALESCE(MAX(LINE),0) + 10
      INTO v_LineNo
      FROM C_INVOICETAX
      WHERE C_INVOICE_ID = p_invoice_id;
      IF(p_invoice_id IS NULL OR p_invoiceline_id IS NULL) THEN
         RAISE_APPLICATION_ERROR(-20200, 'Null ORDER OR LINE ID');
      END IF;
      
      v_TaxAmt := ROUND(v_TaxBaseAmount*v_Rate / 100, p_StdPrecision);
      
    ELSE
      FOR Cur_Taxes IN
        (SELECT C_Tax_ID, RATE
         FROM C_TAX
        WHERE Parent_Tax_ID=p_tax_id
        ORDER BY Line)
      LOOP
        EXECUTE IMMEDIATE SSWH_INVOICETAX_INSERT(p_org_id, p_invoice_id, p_invoiceline_id, p_user_id, p_originaltax_id, Cur_Taxes.C_Tax_ID, p_LineNetAmt, p_AlternateTaxBaseAmt, p_StdPrecision,p_linetaxamt);
      END LOOP;
    END IF;
    RETURN v_TaxAmt;
    --<<FINISH_PROCESS>>
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  RAISE;
END SSWH_CALCULATE_TAXAMT
]]></body>
    </function>
  </database>
