<?xml version="1.0"?>
  <database name="FUNCTION SSWH_PROCESSED_CHECK">
    <function name="SSWH_PROCESSED_CHECK" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_Client_ID  VARCHAR2(32); 
  v_Org_ID   VARCHAR2(32); 
  v_resultado VARCHAR2(2000) := '';
  v_indicador CHAR(1) := 'N';
  v_cbankstatementid VARCHAR2(32) := '';
  TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  -- Parameter Variables
    v_M_Locator_ID VARCHAR2(32);
    --
    v_DocStatus VARCHAR2(60) ;
    v_InOut_ID VARCHAR2(32);
    FINISH_PROCESS BOOLEAN:=false;
    

  
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
       i.ad_client_id, 
          i.ad_org_id,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_Client_ID := Cur_Parameter.ad_client_id;
      v_Org_ID    := Cur_Parameter.ad_org_id;
    END LOOP; -- Get Parameter
    
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    -- Read Information from Record
    v_ResultStr:='Reading Record';
    
    SELECT DocStatus
    INTO v_DocStatus
    FROM sswh_checkbook
    WHERE sswh_checkbook_id=v_Record_ID;
    


   if (v_DocStatus='CO') then
    
   FOR  Cur_Parameter IN (SELECT sswh_checkbookline.c_bankstatementline_id
   FROM sswh_checkbookline WHERE sswh_checkbook_ID=v_record_ID)loop
   
	   v_cbankstatementid:=Cur_Parameter.c_bankstatementline_id;
       
       if (v_cbankstatementid is not null) then
       		v_indicador:='Y';
            
            exit;
            
       end if;
        
  end loop;  
  
  if v_indicador='Y' then
    FINISH_PROCESS:=true;
    RAISE NO_DATA_FOUND;
  else
    update sswh_checkbookline       
		set doc_line_status='A'
		where sswh_checkbook_id=v_record_ID;
    
    	update sswh_checkbook        
		set docstatus='VO'
		where sswh_checkbook_id=v_record_ID;
  end if;   
       
  
  end if;
    



    
    IF(NOT FINISH_PROCESS) THEN

      v_ResultStr:='Create Shipment';  
      v_resultado :='Chequera Anulada' ;

if (v_resultado is not null or v_resultado <> '')then
     -- v_Message := v_Message || 'Datos = ' || v_resultado;
      v_Message := v_Message || v_resultado;
      end if;

    END IF; --FINISH_PROCESS
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END SSWH_PROCESSED_CHECK
]]></body>
    </function>
  </database>
