<?xml version="1.0"?>
  <database name="TRIGGER SSWH_CHECKBOOK_TR">
    <trigger name="SSWH_CHECKBOOK_TR" table="SSWH_CHECKBOOK" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[

/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
v_Count NUMBER;
v_DateNull DATE := TO_DATE('01-01-1900', 'DD-MM-YYYY');
v_checkbook_id varchar(32);
v_nrocheck varchar(32);
v_from varchar(32);
v_to varchar(32);
v_to_check varchar(32);
v_currency_id varchar(32);
v_bankaccount_id varchar(32);
v_processed char(1);
        
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

	 IF INSERTING THEN
      v_checkbook_id:=:NEW.sswh_CHECKBOOK_ID;
      
     ELSE 
      v_checkbook_id:=:OLD.sswh_CHECKBOOK_ID;
     END IF;
     
     SELECT nrocheck,nrofrom,nroto,c_currency_id,c_bankaccount_id,generateto
     into v_nrocheck,v_from ,v_to,v_currency_id,v_bankaccount_id,v_processed
     from sswh_CHECKBOOK where sswh_CHECKBOOK_ID=v_checkbook_id;
	
    IF UPDATING THEN
     IF (v_processed='Y'
        AND ((COALESCE(:old.C_BANKACCOUNT_ID, '0') <> COALESCE(:new.C_BANKACCOUNT_ID, '0'))
        OR(COALESCE(:old.AD_ORG_ID, '0') <> COALESCE(:new.AD_ORG_ID, '0'))
        OR(COALESCE(:old.AD_CLIENT_ID, '0') <> COALESCE(:new.AD_CLIENT_ID, '0'))
        OR(COALESCE(:old.TYPECHECK, '0') <> COALESCE(:new.TYPECHECK, '0'))
        OR(COALESCE(:old.NROCHECK, '0') <> COALESCE(:new.NROCHECK, '0'))
        OR(COALESCE(:old.NROFROM, '0') <> COALESCE(:new.NROFROM, '0'))
        OR(COALESCE(:old.NROTO, '0') <> COALESCE(:new.NROTO, '0'))
        ))
      THEN
      RAISE_APPLICATION_ERROR( -20501, 'Document processed/posted');
     END IF;
	END IF;
   
   IF(DELETING) THEN
     IF(v_processed='Y') THEN
       RAISE_APPLICATION_ERROR(-20501, 'Document processed/posted') ;
     END IF;
   END IF;
   IF(INSERTING) THEN
   
   	SELECT max(CAST(nroto as NUMBER)) into v_to_check
    FROM sswh_checkbook
    WHERE c_bankaccount_id=v_bankaccount_id AND c_currency_id=v_currency_id AND 
    nrocheck=v_nrocheck and generateto='Y';
    
    IF (CAST(v_from as NUMBER)<= CAST(v_to_check as NUMBER)) then
    	   RAISE_APPLICATION_ERROR(-20501, 'Nro Cheque ya existe para esta chequera') ;
    END IF;
    
    
   END IF;
   
END SSWH_CHECKBOOK_TR
]]></body>
    </trigger>
  </database>
