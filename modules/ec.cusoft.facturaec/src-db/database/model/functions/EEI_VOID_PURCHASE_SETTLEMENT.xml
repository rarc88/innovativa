<?xml version="1.0"?>
  <database name="FUNCTION EEI_VOID_PURCHASE_SETTLEMENT">
    <function name="EEI_VOID_PURCHASE_SETTLEMENT" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_Result NUMBER:=0; -- OBTG:NUMBER
  v_AD_User_ID VARCHAR2(32);
  v_AD_Org_ID VARCHAR2(32);
  v_AD_Client_ID VARCHAR2(32);
  v_EvolutionSalaryID  VARCHAR2(32);

TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  
   v_Line NUMBER:=0; -- OBTG:NUMBER

   v_doctype VARCHAR(60); -- OBTG:VARCHAR2
   v_C_BpartnerID VARCHAR(32); -- OBTG:VARCHAR2
   v_MSG VARCHAR(60); -- OBTG:VARCHAR2
   v_DateContract DATE;
   v_DateEvolutionSalary DATE;
   v_EvolutionSalaryImport NUMBER(12,5):=0; -- OBTG:NUMBER
   v_Count NUMBER:=0; -- OBTG:NUMBER
   
   v_codigo VARCHAR(60); -- OBTG:VARCHAR2
   v_documentno VARCHAR(20); -- OBTG:VARCHAR2
   
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
   BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_USER_ID,
        i.AD_ORG_ID,
        i.AD_CLIENT_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;
      v_AD_Org_ID:=Cur_Parameter.AD_Org_ID;
      v_AD_Client_ID:=Cur_Parameter.AD_Client_ID;
     END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    v_ResultStr:='CheckRestriction';

    SELECT ci.em_eei_codigo_2,ci.documentno,dt.em_eei_edoc_type
    INTO v_codigo,v_documentno,v_doctype
    FROM c_invoice ci
    LEFT JOIN c_doctype dt ON ci.c_doctype_id = dt.c_doctype_id
    WHERE c_invoice_id = v_Record_ID;
   
     --ACTUALIZAR FACTURA
    update c_invoice set EM_EEI_CODIGO_2 = null,
    EM_EEI_NUMAUTO_2 = null, 
    -- EM_EEI_FECHAAUTO_2 = null,
    EM_EEI_FECHAAUTOTEXT_2 = null,
    EM_EEI_URLXML_2 = null, 
    EM_EEI_URLRIDE_2 = null, 
    EM_EEI_STATUS_2 = null,
    EM_EEI_TEMPORALSEND='N' WHERE  c_invoice_id = v_Record_ID;

    --ELIMINAR LOGS DE FACTURA
    DELETE FROM eei_invoicelog WHERE c_invoice_id = v_Record_ID AND edoc_type=v_doctype;

    SELECT COALESCE(max(line),0)+10 INTO v_Line FROM eei_invoicelog  WHERE c_invoice_id = v_Record_ID;

    INSERT INTO eei_invoicelog(
            eei_invoicelog_id, ad_client_id, ad_org_id, isactive, created, 
            createdby, updated, updatedby, line, c_invoice_id, logtype, description,edoc_type)
    VALUES (get_uuid(), v_AD_Client_ID, v_AD_Org_ID, 'Y', now(), 
            v_AD_User_ID, now(), v_AD_User_ID, v_Line, v_Record_ID , 'S', 'ANULACIÓN DE DOCUMENTO ELECTRÓNICO LIQUIDACIÓN DE COMPRA: -NÚMERO: '|| COALESCE(v_documentno,' ')|| ' -CLAVE DE ACCESO: '|| COALESCE(v_codigo,' '),v_doctype);
   
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    v_Message:='@Eei_Void_SRI@'||' -NÚMERO: '|| COALESCE(v_documentno,' ')|| ' -CLAVE DE ACCESO: '|| COALESCE(v_codigo,' ');
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 2, v_Message) ;
    RETURN;
    
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
   ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END EEI_VOID_PURCHASE_SETTLEMENT
]]></body>
    </function>
  </database>
