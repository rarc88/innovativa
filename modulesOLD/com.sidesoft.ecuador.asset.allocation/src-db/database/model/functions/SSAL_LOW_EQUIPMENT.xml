<?xml version="1.0"?>
  <database name="FUNCTION SSAL_LOW_EQUIPMENT">
    <function name="SSAL_LOW_EQUIPMENT" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_Parameter RECORD;  
  CUR_ACTIVE RECORD;
  Cur_Concept RECORD;
  Cur_Validar0 RECORD;
  CUR_PROCESSPAYROOLL RECORD;

  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32) ;
  
  v_ResultStr VARCHAR2(2000) := '';
  V_ASSET_ID VARCHAR2(32);
  V_MAXDATE DATE;
  V_LOWDATE DATE;
  V_AMORTIZATIONSTARTDATE DATE;
  V_ISFULLYDEPRECIATED VARCHAR2(1);


  v_n_insertions NUMBER;
  v_Message VARCHAR2(2000):='';

BEGIN
 --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY

    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;
    
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID, 
        i.AD_Client_ID,
        i.AD_Org_ID                    
      FROM AD_PInstance i      
      WHERE i.AD_PInstance_ID = PInstance_ID      
      )
    LOOP

      V_ASSET_ID := Cur_Parameter.Record_ID;	  
     /* v_Client_ID := Cur_Parameter.AD_Client_ID;
      v_Org_ID := Cur_Parameter.AD_Org_ID;
      v_User_ID := Cur_Parameter.AD_User_ID;  */   
      
    END LOOP; -- Get Parameter

    --OBTENGO DATOS GENERALES 
    select coalesce(TO_DATE((SELECT MAX(STARTDATE)
    FROM SSAL_APPL_ACTIVE 
    WHERE A_ASSET_ID =V_ASSET_ID AND IS_RETURN='Y' 
    GROUP BY A_ASSET_ID)),null) INTO V_MAXDATE from dual; 

    IF (V_MAXDATE IS NULL) THEN     
    
	RAISE_APPLICATION_ERROR(-20000, '@ERROR=EL ACTIVO NO SE HA RETORNADO@'||'.');

    ELSE
    
    --OBTENGO DATOS DEL ACTIVO

    select coalesce(TO_CHAR((  SELECT A.ISFULLYDEPRECIATED
    FROM A_ASSET A
    LEFT JOIN SSAL_APPL_ACTIVE B ON A.A_ASSET_ID = B.A_ASSET_ID
    WHERE B.IS_RETURN='Y' AND TO_DATE(B.STARTDATE) = TO_DATE(V_MAXDATE) AND A.A_ASSET_ID =V_ASSET_ID 
)),'N') INTO V_ISFULLYDEPRECIATED from dual;  

  IF (V_ISFULLYDEPRECIATED = 'N') THEN 

	RAISE_APPLICATION_ERROR(-20000, '@ERROR=EL ACTIVO NO SE HA DEPRECIADO COMPLETAMENTE@'||'.');
  END IF;
  
    select coalesce(TO_DATE((  SELECT A.EM_SSAL_LOWDATE
    FROM A_ASSET A
    LEFT JOIN SSAL_APPL_ACTIVE B ON A.A_ASSET_ID = B.A_ASSET_ID
    WHERE A.ISFULLYDEPRECIATED = 'Y' AND B.IS_RETURN='Y' AND TO_DATE(B.STARTDATE) = TO_DATE(V_MAXDATE) AND A.A_ASSET_ID =V_ASSET_ID
)),null) INTO V_LOWDATE from dual;     


select coalesce(TO_DATE((  SELECT A.AMORTIZATIONSTARTDATE
    FROM A_ASSET A
    LEFT JOIN SSAL_APPL_ACTIVE B ON A.A_ASSET_ID = B.A_ASSET_ID
    WHERE A.ISFULLYDEPRECIATED = 'Y' AND B.IS_RETURN='Y' AND TO_DATE(B.STARTDATE) = TO_DATE(V_MAXDATE) AND A.A_ASSET_ID =V_ASSET_ID 
)),null) INTO V_AMORTIZATIONSTARTDATE from dual;  




    --VALIDO FECHA DE AMORTIZACION
    IF (V_AMORTIZATIONSTARTDATE is null) THEN 

	RAISE_APPLICATION_ERROR(-20000, '@ERROR=CAMPO FECHA DE INICIO AMORTIZACION ES OBLIGATORIO@');
    END IF;

    --VALIDACION FECHA DE BAJA
    IF (V_LOWDATE IS NULL) THEN 

	RAISE_APPLICATION_ERROR(-20000, '@ERROR=CAMPO FECHA DE BAJA ES OBLIGATORIO@');
    ELSE
	IF (V_LOWDATE > V_AMORTIZATIONSTARTDATE) THEN 

		--CADUCO LOS ACTIVO PARA LA TRANFERENCIA
		UPDATE A_ASSET SET EM_SSAL_LOWSTATUS = 'LW'
		WHERE A_ASSET_ID =V_ASSET_ID; 
	ELSE 
		RAISE_APPLICATION_ERROR(-20000, '@ERROR=FECHA DE BAJA DEBE SER MAYOR A LA FECHA DE DEPRECIACION@'||'.');

	END IF;

	
    END IF;
    END IF;
    v_Message := '@RowsInserted@: ' || v_n_insertions || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
    
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;

    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SSAL_LOW_EQUIPMENT
]]></body>
    </function>
  </database>
