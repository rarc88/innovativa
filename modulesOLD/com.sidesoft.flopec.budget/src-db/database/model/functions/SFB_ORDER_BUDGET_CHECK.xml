<?xml version="1.0"?>
  <database name="FUNCTION SFB_ORDER_BUDGET_CHECK">
    <function name="SFB_ORDER_BUDGET_CHECK" type="NULL">
      <parameter name="p_ep_instance" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[p_message         VARCHAR2(2000);    
p_record_id       VARCHAR2(60);      
p_docaction       VARCHAR2(60);      
p_user            VARCHAR2(60);      
p_result          NUMBER;

v_ResultStr       VARCHAR2(2000):='';
v_currency_id     VARCHAR2(32);      
v_hashcode        VARCHAR2(32);      
v_converted       NUMBER;
v_amt NUMBER:= -1;      -- Revenue (-)
v_count           INTEGER;
v_count_doctype   INTEGER;
v_budgeted        CHAR(1);
v_baccount_lines  VARCHAR2(2000):='';
v_nbaccount_lines VARCHAR2(2000):='';
v_bamount_lines   VARCHAR2(2000):='';

TYPE RECORD IS REF CURSOR;
cur_params        RECORD;
cur_lines         RECORD;

BEGIN

  FOR Cur_Params IN (
    SELECT *
    FROM ad_ep_instance_para
    WHERE ad_ep_instance_id = p_ep_instance
    ) LOOP
    IF (cur_params.parametername LIKE 'DocAction') THEN
      p_docaction := Cur_Params.p_string;
    ELSIF (cur_params.parametername LIKE 'Record_ID') THEN
      p_record_id := cur_params.p_string;
    ELSIF (cur_params.parametername LIKE 'User') THEN
      p_user := cur_params.p_string;
    ELSIF (cur_params.parametername LIKE 'Message') THEN
      p_message := cur_params.p_text;
    ELSIF (cur_params.parametername LIKE 'Result') THEN
      p_result := cur_params.p_number;
    END IF;
  END LOOP;

  IF (p_docaction = 'CO') THEN

    -- Is a Document Type that has been enabled for the budget.
    SELECT count(*) INTO v_count_doctype
    FROM C_ORDER co, SFB_BUDGET_DOCTYPE bdt
    WHERE AD_ISORGINCLUDED(co.ad_org_id, bdt.ad_org_id, co.ad_client_id) <> -1  
          AND bdt.c_doctype_id = co.c_doctypetarget_id 
          AND bdt.isactive = 'Y'
          AND co.c_order_id = p_record_id;

    IF (v_count_doctype > 0) THEN

      v_resultstr := 'Update budget (committed certificate value).';

      FOR cur_lines IN (
        SELECT (CASE WHEN extract(year from TO_DATE(co.dateordered)) = extract(year from TO_DATE(bc.date_issue)) THEN 1 ELSE 0 END) AS sameyear,
               (CASE WHEN co.c_currency_id = bc.c_currency_id THEN 1 ELSE 0 END) AS samecurrency,
               (CASE WHEN coalesce(col.em_sfb_hashcode, co.em_sfb_hashcode) = bc.hash_code THEN 1 ELSE 0 END) AS samehashcode,
               (CASE WHEN col.ad_org_id = bcl.ad_org_id THEN 1 ELSE 0 END) AS sameorg,
               (CASE WHEN ((bcl.available_balance >= (col.linenetamt + (SELECT sum(taxamt) 
                                                                        FROM c_orderlinetax 
                                                                        WHERE c_orderline_id = col.c_orderline_id))) AND
                          (bcl.available_balance >= (SELECT sum((linenetamt + (SELECT sum(taxamt) 
                                                                               FROM c_orderlinetax 
                                                                               WHERE c_orderline_id = col2.c_orderline_id)))
                        
                                                     FROM C_ORDERLINE col2
                                                     WHERE em_sfb_budget_cert_line_id = col.em_sfb_budget_cert_line_id AND c_order_id = co.c_order_id)))
               THEN 1 ELSE 0 END) AS enoughamount,
               co.ad_client_id, co.ad_org_id, co.dateordered, co.c_currency_id, co.em_sfb_isnotbudgetable AS header_isnotbudgetable,
               col.line, (col.linenetamt + (select sum(taxamt) from c_orderlinetax where c_orderline_id = col.c_orderline_id)) AS linetotalamt, col.em_sfb_budget_cert_line_id AS linecertificate,
               col.em_sfb_isnotbudgetable AS lines_isnotbudgetable, col.m_product_id,
               bcl.c_costcenter_id, bcl.user1_id, bcl.sfb_budget_cert_line_id, bcl.sfb_budget_item_id,
               bc.type_of_budget, bc.c_year_id
        FROM c_order co 
             LEFT JOIN c_orderline col ON co.c_order_id = col.c_order_id
             LEFT JOIN sfb_budget_cert_line bcl ON col.em_sfb_budget_cert_line_id = bcl.sfb_budget_cert_line_id
             LEFT JOIN sfb_budget_certificate bc ON bcl.sfb_budget_certificate_id = bc.sfb_budget_certificate_id
        WHERE co.c_order_id = p_record_id AND co.issotrx = 'N'
        ORDER BY col.line
      )
      LOOP

        IF (cur_lines.lines_isnotbudgetable = 'N' AND cur_lines.header_isnotbudgetable = 'N') THEN

          IF (cur_lines.linetotalamt <> 0) THEN

            IF (cur_lines.linecertificate IS NULL) THEN

              RAISE_APPLICATION_ERROR(-20000, '@SFB_NoCertificateLine@');
      
            ELSIF (cur_lines.sameorg = 0) THEN

              RAISE_APPLICATION_ERROR(-20000, '@SFB_NoCertificateOrganization@');

            ELSIF(cur_lines.samecurrency = 0) THEN

              RAISE_APPLICATION_ERROR(-20000, '@SFB_NoCertificateCurrency@');

            ELSIF(cur_lines.samehashcode = 0) THEN

              RAISE_APPLICATION_ERROR(-20000, '@SFB_NoCertificateHashcode@');

            ELSIF(cur_lines.sameyear = 0) THEN

              RAISE_APPLICATION_ERROR(-20000, '@SFB_NoDateWithinYear@');

            ELSIF(cur_lines.enoughamount = 0) THEN

              IF (COALESCE(v_bamount_lines, '0') <> COALESCE('', '0')) THEN

                v_bamount_lines := v_bamount_lines || ', ';

              END IF;

              v_bamount_lines := v_bamount_lines || cur_lines.line;

              -- IF there are some amount errors then save error lines only 
              IF (COALESCE(v_bamount_lines, '0') <> COALESCE('', '0')) THEN

                CONTINUE;

              END IF;

            ELSE

              -- Get Account

              SELECT count(*) INTO v_count
              FROM SFB_BUDGET_ITEM_ACCOUNT
              WHERE sfb_budget_item_id = cur_lines.sfb_budget_item_id AND account_id IN (
            
                SELECT cvc.account_id AS account_id
                FROM M_PRODUCT_ACCT mpa LEFT JOIN C_VALIDCOMBINATION cvc ON mpa.p_expense_acct = cvc.c_validcombination_id
                WHERE mpa.m_product_id = cur_lines.m_product_id AND mpa.c_acctschema_id IN (
        
                  SELECT DISTINCT ad_org_acctschema.c_acctschema_id
                  FROM ad_org_acctschema, c_acctschema
                  WHERE ad_org_acctschema.c_acctschema_id = c_acctschema.c_acctschema_id
                    AND ad_org_acctschema.ad_client_id = cur_lines.ad_client_id
                    AND (ad_isorgincluded(cur_lines.ad_org_id, ad_org_acctschema.ad_org_id, ad_org_acctschema.ad_client_id) <> -1 OR cur_lines.ad_org_id = '0')
                    AND c_acctschema.isactive = 'Y'
      	            AND ad_org_acctschema.isactive = 'Y')
      	      );

              -- Account checks

              IF (v_count = 0) THEN

                IF (COALESCE(v_baccount_lines, '0') <> COALESCE('', '0')) THEN

                  v_baccount_lines := v_baccount_lines || ', ';

                END IF;

                v_baccount_lines := v_baccount_lines || cur_lines.line;

              END IF;

              -- IF there are some nature of account errors then save error lines only 
              IF (COALESCE(v_baccount_lines, '0') <> COALESCE('', '0')) THEN

                CONTINUE;

              END IF;

              -- Get budget currency
              SELECT b.c_currency_id INTO v_currency_id
              FROM SFB_BUDGET_LINE bl 
                   LEFT JOIN sfb_budget_version bv ON bl.sfb_budget_version_id = bv.sfb_budget_version_id 
                   LEFT JOIN sfb_budget b ON bv.sfb_budget_id = b.sfb_budget_id 
              WHERE bl.ad_client_id = cur_lines.ad_client_id AND bl.ad_org_id = cur_lines.ad_org_id 
              AND bl.c_costcenter_id = cur_lines.c_costcenter_id AND bl.user1_id = cur_lines.user1_id AND bl.sfb_budget_item_id = cur_lines.sfb_budget_item_id
              AND bv.version_status = 'AP' AND b.type_of_budget = cur_lines.type_of_budget AND b.c_year_id = cur_lines.c_year_id;

              IF (cur_lines.c_currency_id = v_currency_id) THEN

                v_converted := cur_lines.linetotalamt;

              ELSE

                v_converted := C_Currency_Round(C_Currency_Convert(cur_lines.linetotalamt, cur_lines.c_currency_id, v_currency_id, cur_lines.dateordered, null, cur_lines.ad_client_id, cur_lines.ad_org_id), v_currency_id, null);

              END IF;

              IF (v_converted IS NULL) THEN

                RAISE_APPLICATION_ERROR(-20000, '@NoConversionRateHeader@');

              END IF;

              v_resultstr := 'Add amount to committed value';
              UPDATE SFB_BUDGET_CERT_LINE 
              SET committed_value = committed_value + cur_lines.linetotalamt, budget_committed_value = budget_committed_value + v_converted
              WHERE sfb_budget_cert_line_id = cur_lines.sfb_budget_cert_line_id;  

            END IF;

          END IF;

        ELSE -- Check Budget Item account must be budgetable

          -- Get Account

          SELECT count(*) INTO v_count
          FROM SFB_BUDGET_ITEM_ACCOUNT bia LEFT JOIN SFB_BUDGET_ITEM bi ON bia.sfb_budget_item_id = bi.sfb_budget_item_id
                                           LEFT JOIN SFB_BUDGET_LINE bl ON bl.sfb_budget_item_id = bi.sfb_budget_item_id 
                                           LEFT JOIN SFB_BUDGET_VERSION bv ON bl.sfb_budget_version_id = bv.sfb_budget_version_id 
                                           LEFT JOIN SFB_BUDGET b ON bv.sfb_budget_id = b.sfb_budget_id
                                           LEFT JOIN C_YEAR cy ON b.c_year_id = cy.c_year_id
          WHERE bv.version_status = 'AP' AND cast(cy.year as double precision) = extract(year from TO_DATE(cur_lines.dateordered)) AND bia.account_id IN (
            
            SELECT cvc.account_id AS account_id
            FROM M_PRODUCT_ACCT mpa LEFT JOIN C_VALIDCOMBINATION cvc ON mpa.p_expense_acct = cvc.c_validcombination_id
            WHERE mpa.m_product_id = cur_lines.m_product_id AND mpa.c_acctschema_id IN (
        
              SELECT DISTINCT ad_org_acctschema.c_acctschema_id
              FROM ad_org_acctschema, c_acctschema
              WHERE ad_org_acctschema.c_acctschema_id = c_acctschema.c_acctschema_id
                AND ad_org_acctschema.ad_client_id = cur_lines.ad_client_id
                AND (ad_isorgincluded(cur_lines.ad_org_id, ad_org_acctschema.ad_org_id, ad_org_acctschema.ad_client_id) <> -1 OR cur_lines.ad_org_id = '0')
                AND c_acctschema.isactive = 'Y'
      	        AND ad_org_acctschema.isactive = 'Y')
      	  );

          -- Account checks

          IF (v_count > 0) THEN

            IF (COALESCE(v_nbaccount_lines, '0') <> COALESCE('', '0')) THEN

              v_nbaccount_lines := v_nbaccount_lines || ', ';

            END IF;

            v_nbaccount_lines := v_nbaccount_lines || cur_lines.line;

          END IF;

        END IF;

      END LOOP;

      IF (COALESCE(v_baccount_lines, '0') <> COALESCE('', '0')) THEN

        RAISE_APPLICATION_ERROR(-20000, '@SFB_NoBudgetableAccountLines@' || ' (' || v_baccount_lines || ')');

      ELSIF (COALESCE(v_nbaccount_lines, '0') <> COALESCE('', '0')) THEN

        RAISE_APPLICATION_ERROR(-20000, '@SFB_NoNotBudgetAccountLines@' || ' (' || v_nbaccount_lines || ')');

      ELSIF (COALESCE(v_bamount_lines, '0') <> COALESCE('', '0')) THEN

        RAISE_APPLICATION_ERROR(-20000, '@SFB_NoEnoughAmount@' || ' (' || v_bamount_lines || ')');

      END IF;

      UPDATE C_ORDER SET em_sfb_isbudgeted = 'Y' WHERE c_order_id = p_record_id;

    END IF;
    
  ELSIF (p_docaction = 'RE') THEN

    SELECT em_sfb_isbudgeted INTO v_budgeted
    FROM C_ORDER
    WHERE c_order_id = p_record_id;

    IF (v_budgeted = 'Y') THEN

      v_resultstr := 'Update budget (committed certificate value).';
    
      FOR cur_lines IN (
        SELECT co.ad_client_id, co.ad_org_id, co.dateordered, co.c_currency_id, co.em_sfb_isnotbudgetable AS header_isnotbudgetable,
               (col.linenetamt + (select sum(taxamt) from c_orderlinetax where c_orderline_id = col.c_orderline_id)) AS linetotalamt, col.em_sfb_isnotbudgetable AS lines_isnotbudgetable, 
               bcl.c_costcenter_id, bcl.user1_id, bcl.sfb_budget_cert_line_id, bcl.sfb_budget_item_id,
               bc.type_of_budget, bc.c_year_id
        FROM c_order co 
             LEFT JOIN c_orderline col ON co.c_order_id = col.c_order_id
             LEFT JOIN sfb_budget_cert_line bcl ON col.em_sfb_budget_cert_line_id = bcl.sfb_budget_cert_line_id
             LEFT JOIN sfb_budget_certificate bc ON bcl.sfb_budget_certificate_id = bc.sfb_budget_certificate_id
        WHERE co.c_order_id = p_record_id AND co.issotrx = 'N'
      )
      LOOP

        IF (cur_lines.lines_isnotbudgetable = 'N' AND cur_lines.header_isnotbudgetable = 'N' AND cur_lines.linetotalamt <> 0) THEN

          -- Get budget currency
          SELECT b.c_currency_id INTO v_currency_id
          FROM SFB_BUDGET_LINE bl 
               LEFT JOIN sfb_budget_version bv ON bl.sfb_budget_version_id = bv.sfb_budget_version_id 
               LEFT JOIN sfb_budget b ON bv.sfb_budget_id = b.sfb_budget_id 
          WHERE bl.ad_client_id = cur_lines.ad_client_id AND bl.ad_org_id = cur_lines.ad_org_id 
          AND bl.c_costcenter_id = cur_lines.c_costcenter_id AND bl.user1_id = cur_lines.user1_id AND bl.sfb_budget_item_id = cur_lines.sfb_budget_item_id
          AND bv.version_status = 'AP' AND b.type_of_budget = cur_lines.type_of_budget AND b.c_year_id = cur_lines.c_year_id;

          IF (cur_lines.c_currency_id = v_currency_id) THEN

            v_converted := cur_lines.linetotalamt;

          ELSE

            v_converted := C_Currency_Round(C_Currency_Convert(cur_lines.linetotalamt, cur_lines.c_currency_id, v_currency_id, cur_lines.dateordered, null, cur_lines.ad_client_id, cur_lines.ad_org_id), v_currency_id, null);

          END IF;

          IF (v_converted IS NULL) THEN

            RAISE_APPLICATION_ERROR(-20000, '@NoConversionRateHeader@');

          END IF;

          v_resultstr := 'Subtract amount to committed value';
          UPDATE SFB_BUDGET_CERT_LINE 
          SET committed_value = committed_value - cur_lines.linetotalamt, budget_committed_value = budget_committed_value - v_converted
          WHERE sfb_budget_cert_line_id = cur_lines.sfb_budget_cert_line_id;

        END IF;

      END LOOP;

      UPDATE C_ORDER SET em_sfb_isbudgeted = 'N' WHERE c_order_id = p_record_id;

    END IF;
  
  END IF;

EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('SFB_BUDGET_CHECK exception: '|| v_ResultStr);
  RAISE;
END SFB_ORDER_BUDGET_CHECK
]]></body>
    </function>
  </database>
