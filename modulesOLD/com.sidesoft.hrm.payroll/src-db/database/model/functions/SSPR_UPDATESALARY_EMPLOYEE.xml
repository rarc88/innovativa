<?xml version="1.0"?>
  <database name="FUNCTION SSPR_UPDATESALARY_EMPLOYEE">
    <function name="SSPR_UPDATESALARY_EMPLOYEE" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_Result NUMBER:=0; -- OBTG:NUMBER
  v_AD_User_ID VARCHAR2(32);
  v_AD_Org_ID VARCHAR2(32);
  v_AD_Client_ID VARCHAR2(32);
  v_EvolutionSalaryID  VARCHAR2(32);

TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  
   v_Line NUMBER:=0; -- OBTG:NUMBER


   v_C_BpartnerID VARCHAR(32); -- OBTG:VARCHAR2
   v_MSG VARCHAR(60); -- OBTG:VARCHAR2
   v_DateContract DATE;
   v_DateEvolutionSalary DATE;
   v_EvolutionSalaryImport NUMBER(12,5):=0; -- OBTG:NUMBER
   v_Count NUMBER:=0; -- OBTG:NUMBER


  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
   BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_USER_ID,
        i.AD_ORG_ID,
        i.AD_CLIENT_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;
      v_AD_Org_ID:=Cur_Parameter.AD_Org_ID;
      v_AD_Client_ID:=Cur_Parameter.AD_Client_ID;
     END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    v_ResultStr:='CheckRestriction';

    SELECT COALESCE((SELECT C_BPARTNER_ID AS CONTRATO 
    FROM SSPR_CONTRACT SP
    WHERE SP.SSPR_CONTRACT_ID = v_Record_ID
    AND SP.STATUSLIQUIDATION = 'N'
    AND SP.ISACTIVE = 'Y'),NULL)
    INTO v_C_BpartnerID
    from dual;



    SELECT COALESCE((SELECT STARTDATE AS CONTRATO 
    FROM SSPR_CONTRACT SP
    WHERE SP.SSPR_CONTRACT_ID = v_Record_ID
    AND SP.STATUSLIQUIDATION = 'N'
    AND SP.ISACTIVE = 'Y'),NULL)
    INTO v_DateContract
    from dual;


    SELECT COALESCE((SELECT count(*) AS CONTRATO 
    FROM sfpr_evolution_salary  ses
    WHERE ses.SSPR_CONTRACT_ID = v_Record_ID and
    status_es='A'),0)
    into v_Count
    from dual;

    IF (v_Count>=2) THEN

	v_Message:='@Sspr_ErrorExpireEvolutionSalary@';
 AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0,v_Message) ;
	RETURN;		    
	
    END IF;
    

    IF (v_Count>0)  THEN
    
	    SELECT COALESCE((SELECT max(STARTDATE) AS CONTRATO 
	    FROM sfpr_evolution_salary  ses
	    WHERE ses.SSPR_CONTRACT_ID = v_Record_ID and
	    status_es='A'
	    ),NULL)
	    INTO v_DateEvolutionSalary
	    from dual;
	    

	    IF (v_DateEvolutionSalary>=v_DateContract) THEN

		SELECT COALESCE((SELECT amount AS CONTRATO 
		FROM sfpr_evolution_salary  ses
		WHERE ses.SSPR_CONTRACT_ID = v_Record_ID and
		status_es='A'
		and startdate = v_DateEvolutionSalary
		),0)
		INTO v_EvolutionSalaryImport
		from dual;

		SELECT COALESCE((SELECT sfpr_evolution_salary_ID AS CONTRATO 
		FROM sfpr_evolution_salary  ses
		WHERE ses.SSPR_CONTRACT_ID = v_Record_ID and
		status_es='A'
		and startdate = v_DateEvolutionSalary
		),'')
		INTO v_EvolutionSalaryID
		from dual;
        
		update c_bpartner set em_sspr_currentsalary = v_EvolutionSalaryImport where c_bpartner_id = v_C_BpartnerID;
		v_Line:=1;
		update sfpr_evolution_salary set status_es='U' where sfpr_evolution_salary_ID =  v_EvolutionSalaryID;

	    ELSE

		v_Message:='@Sspr_ValidateUpdateSalary@';
	 AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0,v_Message) ;
		RETURN;		    
		
	    END IF;

    ELSE
    
	v_Message:='@Sspr_ValidateLineEvolutionSalary@';
 AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0,v_Message) ;
	RETURN;	    

    END IF;

   
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
   ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END SSPR_UPDATESALARY_EMPLOYEE
]]></body>
    </function>
  </database>
