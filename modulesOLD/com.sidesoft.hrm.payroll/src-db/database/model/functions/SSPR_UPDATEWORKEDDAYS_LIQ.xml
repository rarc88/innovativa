<?xml version="1.0"?>
  <database name="FUNCTION SSPR_UPDATEWORKEDDAYS_LIQ">
    <function name="SSPR_UPDATEWORKEDDAYS_LIQ" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_period_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_conceptin_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_conceptout_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_user_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
CUR_BPARTNER RECORD; 
CUR_LEAVE RECORD;
CUR_LEAVE2 RECORD;
Cur_Parameter RECORD;
Cur_payrollemp RECORD;

V_CLIENT_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2-- 
V_ORG_ID CHARACTER VARYING(32); 		--OBTG:VARCHAR2--
V_USER_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2--
V_ENTRY_DATE DATE;
V_LOW_DATE DATE;
V_PERIOD_ID CHARACTER VARYING(32); 		--OBTG:VARCHAR2--
V_CONCEPTIN_ID CHARACTER VARYING(32); 		--OBTG:VARCHAR2--
V_CONCEPTOUT_ID CHARACTER VARYING(32); 		--OBTG:VARCHAR2--
V_BPARTNER_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2-- 
V_LEAVE_ID CHARACTER VARYING(32);		--OBTG:VARCHAR2-- 
V_STARTDATE DATE;
V_ENDDATE DATE;

V_PERIOD2_ID CHARACTER VARYING(32); 		--OBTG:VARCHAR2--
V_NODAYS NUMBER;				--OBTG:NUMBER--
V_COUNT NUMBER;				--OBTG:NUMBER--
V_DAYS NUMBER;					--OBTG:NUMBER--
V_DAYSNO NUMBER;				--OBTG:NUMBER--
V_ACUMD  NUMBER;				--OBTG:NUMBER--
V_AUX_C  NUMBER;				--OBTG:NUMBER--
V_SDATE DATE;
V_EDATE DATE;
v_tmp CHARACTER VARYING(400);                   --OBTG:VARCHAR2--
v1 CHARACTER VARYING(10);                       --OBTG:VARCHAR2--
v2 CHARACTER VARYING(10);                       --OBTG:VARCHAR2--
v3 CHARACTER VARYING(300);                      --OBTG:VARCHAR2--

v_Payroll_ID VARCHAR2(32);                      
v_ResultStr VARCHAR2(2000) := ''; 	       
v_isliquidation VARCHAR2(32) := 'N';    	       
v_c_bpartner_id_liquidation VARCHAR2(32);           
v_enddate_contract DATE;
v_days_contract NUMBER;
v_n_insertions NUMBER;
v_Message VARCHAR2(2000):='';
v_daysmonth NUMBER; --OBTG:NUMBER--
v_StartPeriod DATE;
v_EndPeriod DATE;
v_daysliquidation NUMBER; --OBTG:NUMBER--
v_enddate_liquidation DATE;
v_dayseentry NUMBER; --OBTG:NUMBER--
v_EM_SSPR_Entrydate DATE;


BEGIN

 --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY


V_PERIOD_ID:= p_period_id ; 
V_CONCEPTIN_ID:= p_conceptin_id; 
V_CONCEPTOUT_ID:= p_conceptout_id; 
V_CLIENT_ID:= p_client_id;
V_ORG_ID:= p_org_id;
V_USER_ID:= p_user_id;

    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;
    
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID, 
        i.AD_Client_ID,
        i.AD_Org_ID                    
      FROM AD_PInstance i      
      WHERE i.AD_PInstance_ID = PInstance_ID      
      )
    LOOP

      v_Payroll_ID := Cur_Parameter.Record_ID;
      
    END LOOP; 
    -- Get Parameter

    --OBTENGO EL TIPO DE NOMINA Y EMPLEADOsueldo dias
    SELECT isliquidation
    INTO v_isliquidation
    FROM sspr_payroll
    WHERE sspr_payroll_id = v_Payroll_ID;

    --OBTENGO EL PERIODO 
    SELECT startdate, enddate
    INTO v_StartPeriod,v_EndPeriod
    FROM C_period
    WHERE C_period_ID = V_PERIOD_ID;

    --CÁLCULO DE NUMERO DE DIAS DEL MES
    v_daysmonth := to_number(to_char(v_EndPeriod,'dd'));

    For Cur_payrollemp In(select c_bpartner_id
			    from sspr_payroll_emp
			    where sspr_payroll_id = v_Payroll_ID
    )
    Loop

	v_c_bpartner_id_liquidation := Cur_payrollemp.c_bpartner_id;

   
   SELECT enddate
   INTO v_enddate_liquidation
   FROM sspr_contract
   WHERE c_bpartner_id = v_c_bpartner_id_liquidation
   and startdate = (select max(startdate) from sspr_contract where c_bpartner_id = v_c_bpartner_id_liquidation);

   If (v_enddate_liquidation is null) then
	RAISE_APPLICATION_ERROR(-20000,'@Error: End date contract is null@');
   else 

    --CALCULO DE NUMERO DE DIAS LABORADOS LIQUIDACION
    select coalesce((select EM_SSPR_Entrydate
    from c_bpartner
    where c_bpartner_id = v_c_bpartner_id_liquidation),null)
    into v_EM_SSPR_Entrydate
    from dual ;
		v_dayseentry := 0;
	If(v_EM_SSPR_Entrydate >= v_StartPeriod and v_EM_SSPR_Entrydate <= v_enddate_liquidation)Then
		v_dayseentry := to_number(to_char(v_EM_SSPR_Entrydate,'dd'));
		v_daysliquidation := to_number(to_char(v_enddate_liquidation,'dd')) - v_dayseentry + 1;
	Else
		v_daysliquidation := to_number(to_char(v_enddate_liquidation,'dd'));
	End If;
	
    
  end if;  
  
    
	IF(v_isliquidation = 'Y') THEN
	

		IF (v_isliquidation = 'Y' AND v_c_bpartner_id_liquidation IS NOT NULL) THEN
			FOR CUR_BPARTNER IN
			(

			SELECT EM_SSPR_Entrydate AS ENTRYDATE,C_BPARTNER_ID FROM C_BPARTNER
			WHERE ISEMPLOYEE = 'Y' AND ISACTIVE = 'Y' 
			AND EM_SSPR_Status='L'
			AND C_BPARTNER_ID = v_c_bpartner_id_liquidation
			)
			LOOP


				DELETE FROM SSPR_CONCEPT_AMOUNT 
				WHERE C_PERIOD_ID = V_PERIOD_ID 
				AND SSPR_CONCEPT_ID = V_CONCEPTOUT_ID
				AND C_BPARTNER_ID = CUR_BPARTNER.C_BPARTNER_ID;

				V_COUNT:=0;	
				V_AUX_C:= 0;

				V_BPARTNER_ID:= CUR_BPARTNER.C_BPARTNER_ID;

				SELECT COALESCE((SELECT COUNT(*) 
				FROM  SSPR_LEAVE_EMP 
				WHERE C_BPARTNER_ID = V_BPARTNER_ID),0)
				INTO V_COUNT
				FROM DUAL;

				IF V_COUNT = 0 THEN

					INSERT INTO SSPR_CONCEPT_AMOUNT
					(SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY,UPDATED,UPDATEDBY
					,SSPR_CONCEPT_ID, C_BPARTNER_ID, C_PERIOD_ID, AMOUNT, ISMODIFIED, EM_SFPR_SURROGATE_DETAIL_ID
					,EM_SFPR_RVE_DETAIL_ID,EM_SFPR_DESCRIPTION)
					VALUES
					(GET_UUID(),V_CLIENT_ID,V_ORG_ID,'Y',now(),V_USER_ID,now(),V_USER_ID
					,V_CONCEPTOUT_ID,V_BPARTNER_ID, V_PERIOD_ID, v_daysliquidation,'N',NULL,NULL,NULL);
					
					
				ELSE
				
				V_COUNT:=0;
				
					SELECT COALESCE((SELECT COUNT(*) 
					FROM  SSPR_LEAVE_EMP 
					WHERE C_BPARTNER_ID = V_BPARTNER_ID AND ISDISCOUNTLABORDAY = 'N'),0)
					INTO V_COUNT
					FROM DUAL;

					IF V_COUNT = 0 THEN

						INSERT INTO SSPR_CONCEPT_AMOUNT
						(SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY,UPDATED,UPDATEDBY
						,SSPR_CONCEPT_ID, C_BPARTNER_ID, C_PERIOD_ID, AMOUNT, ISMODIFIED, EM_SFPR_SURROGATE_DETAIL_ID
						,EM_SFPR_RVE_DETAIL_ID,EM_SFPR_DESCRIPTION)
						VALUES
						(GET_UUID(),V_CLIENT_ID,V_ORG_ID,'Y',now(),V_USER_ID,now(),V_USER_ID
						,V_CONCEPTOUT_ID,V_BPARTNER_ID, V_PERIOD_ID, v_daysliquidation,'N',NULL,NULL,NULL);
						
						--commit;
					ELSE
						V_ACUMD:=0;
						FOR CUR_LEAVE2 IN 
						(
							SELECT STARDATE,ENDDATE,SSPR_LEAVE_EMP_ID
							FROM SSPR_LEAVE_EMP 
							WHERE C_BPARTNER_ID = V_BPARTNER_ID
							AND ((STARDATE BETWEEN V_STARTDATE AND V_ENDDATE)
							AND (ENDDATE BETWEEN V_STARTDATE AND V_ENDDATE))
							AND ISDISCOUNTLABORDAY = 'Y'
						)
						LOOP
							V_LEAVE_ID:= CUR_LEAVE2.SSPR_LEAVE_EMP_ID;
							
							FOR CUR_LEAVE IN 
							(
								SELECT STARDATE,ENDDATE 
								FROM SSPR_LEAVE_EMP 
								WHERE C_BPARTNER_ID = V_BPARTNER_ID
								AND ((STARDATE BETWEEN V_STARTDATE AND V_ENDDATE)
								AND (ENDDATE BETWEEN V_STARTDATE AND V_ENDDATE))
								AND ISDISCOUNTLABORDAY = 'Y'
								AND SSPR_LEAVE_EMP_ID = V_LEAVE_ID
							)
							LOOP

							V_SDATE:= CUR_LEAVE.STARDATE;
							V_EDATE:= CUR_LEAVE.ENDDATE;

							SELECT C_PERIOD_ID
							INTO  V_PERIOD2_ID
							FROM C_PERIOD 
							WHERE (V_SDATE BETWEEN STARTDATE AND ENDDATE)
							AND (V_EDATE BETWEEN STARTDATE AND ENDDATE);

							IF V_PERIOD_ID = V_PERIOD2_ID THEN

								V_NODAYS :=  TO_NUMBER((V_EDATE - V_SDATE))+1;  
								V_ACUMD:= V_ACUMD + V_NODAYS;

							END IF;
							
							END LOOP;

						END LOOP;

						--OBTENGO LA FECHA DE CADUCIDAD DEL CONTRATO
						--SELECT enddate 
						--INTO v_enddate_contract
						--FROM sspr_contract
						--WHERE c_bpartner_id = V_BPARTNER_ID
						--AND isactive = 'Y';
								
						v_days_contract := to_number(to_char(v_enddate_liquidation,'dd')) - v_dayseentry;

						IF(v_days_contract > 0 AND v_days_contract IS NOT NULL) THEN
						
							V_DAYSNO := v_days_contract - V_ACUMD;

							IF V_DAYSNO>0 THEN

								INSERT INTO SSPR_CONCEPT_AMOUNT
								(SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY,UPDATED,UPDATEDBY
								,SSPR_CONCEPT_ID, C_BPARTNER_ID, C_PERIOD_ID, AMOUNT, ISMODIFIED, EM_SFPR_SURROGATE_DETAIL_ID
								,EM_SFPR_RVE_DETAIL_ID,EM_SFPR_DESCRIPTION)
								VALUES
								(GET_UUID(),V_CLIENT_ID,V_ORG_ID,'Y',now(),V_USER_ID,now(),V_USER_ID
								,V_CONCEPTOUT_ID,V_BPARTNER_ID, V_PERIOD_ID, V_DAYSNO,'N',NULL,NULL,NULL);
								--commit;
							END IF;
							V_ACUMD:=0;
						ELSE
							RAISE_APPLICATION_ERROR(-20000,'@Error: End date this contract is null@');
						END IF;
					END IF;
				END IF;
			END LOOP;
		END IF; -- CLOSE ENDIF IS PAYROLL = 'Y
	END IF; 

    End Loop; -- Cur_payrollemp
    
	 v_Message := '@RowsInserted@: ' || v_n_insertions || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
    
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;
    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SSPR_UPDATEWORKEDDAYS_LIQ
]]></body>
    </function>
  </database>
