<?xml version="1.0"?>
  <database name="FUNCTION SSPP_PAYMENTS_CONFIRM">
    <function name="SSPP_PAYMENTS_CONFIRM" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;  
  
  v_Sspp_Payments_ID VARCHAR2(32);
  
  v_ResultStr VARCHAR2(2000) := '';
  
  BEGIN

 --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  
  
BEGIN

 -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID, 
        i.AD_Client_ID,
        i.AD_Org_ID                    
      FROM AD_PInstance i      
      WHERE i.AD_PInstance_ID = PInstance_ID      
      )
    LOOP
      v_Sspp_Payments_ID := Cur_Parameter.Record_ID;      
    END LOOP;
    
    
    
    UPDATE SSPP_PAYMENTS set STATUS='SE' where SSPP_PAYMENTS_ID=v_Sspp_Payments_ID;
    
    
   
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ');
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, ' ');
    RETURN;
    
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;

    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SSPP_PAYMENTS_CONFIRM
]]></body>
    </function>
  </database>
