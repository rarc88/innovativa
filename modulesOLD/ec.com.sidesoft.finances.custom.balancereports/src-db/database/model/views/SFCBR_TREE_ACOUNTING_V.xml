<?xml version="1.0"?>
  <database name="VIEW SFCBR_TREE_ACOUNTING_V">
    <view name="SFCBR_TREE_ACOUNTING_V"><![CDATA[SELECT CASE COALESCE(to_char(p6.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p5.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p4.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END ELSE COALESCE(to_char(p2.value), to_char('0')) END ELSE COALESCE(to_char(p3.value), to_char('0')) END ELSE COALESCE(to_char(p4.value), to_char('0')) END ELSE COALESCE(to_char(p5.value), to_char('0')) END ELSE COALESCE(to_char(p6.value), to_char('0')) END AS p6, CASE COALESCE(to_char(p6.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p5.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p4.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.name), to_char('0')) ELSE COALESCE(to_char(p1.name), to_char('0')) END ELSE COALESCE(to_char(p2.name), to_char('0')) END ELSE COALESCE(to_char(p3.name), to_char('0')) END ELSE COALESCE(to_char(p4.name), to_char('0')) END ELSE COALESCE(to_char(p5.name), to_char('0')) END ELSE COALESCE(to_char(p6.name), to_char('0')) END AS p6name, CASE COALESCE(to_char(p5.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p4.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END ELSE COALESCE(to_char(p2.value), to_char('0')) END ELSE COALESCE(to_char(p3.value), to_char('0')) END ELSE COALESCE(to_char(p4.value), to_char('0')) END ELSE COALESCE(to_char(p5.value), to_char('0')) END AS p5, CASE COALESCE(to_char(p5.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p4.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.name), to_char('0')) ELSE COALESCE(to_char(p1.name), to_char('0')) END ELSE COALESCE(to_char(p2.name), to_char('0')) END ELSE COALESCE(to_char(p3.name), to_char('0')) END ELSE COALESCE(to_char(p4.name), to_char('0')) END ELSE COALESCE(to_char(p5.name), to_char('0')) END AS p5name, CASE COALESCE(to_char(p4.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END ELSE COALESCE(to_char(p2.value), to_char('0')) END ELSE COALESCE(to_char(p3.value), to_char('0')) END ELSE COALESCE(to_char(p4.value), to_char('0')) END AS p4, CASE COALESCE(to_char(p4.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.name), to_char('0')) ELSE COALESCE(to_char(p1.name), to_char('0')) END ELSE COALESCE(to_char(p2.name), to_char('0')) END ELSE COALESCE(to_char(p3.name), to_char('0')) END ELSE COALESCE(to_char(p4.name), to_char('0')) END AS p4name, CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END ELSE COALESCE(to_char(p2.value), to_char('0')) END ELSE COALESCE(to_char(p3.value), to_char('0')) END AS p3, CASE COALESCE(to_char(p3.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.name), to_char('0')) ELSE COALESCE(to_char(p1.name), to_char('0')) END ELSE COALESCE(to_char(p2.name), to_char('0')) END ELSE COALESCE(to_char(p3.name), to_char('0')) END AS p3name, CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END ELSE COALESCE(to_char(p2.value), to_char('0')) END AS p2, CASE COALESCE(to_char(p2.value), to_char('0')) WHEN '0' THEN CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.name), to_char('0')) ELSE COALESCE(to_char(p1.name), to_char('0')) END ELSE COALESCE(to_char(p2.name), to_char('0')) END AS p2name, CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END AS p1, CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.name), to_char('0')) ELSE COALESCE(to_char(p1.name), to_char('0')) END AS p1name, cta.c_elementvalue_id AS id FROM (SELECT c_elementvalue.c_elementvalue_id, c_elementvalue.value, c_elementvalue.name FROM c_elementvalue WHERE c_elementvalue.elementlevel = 'S' AND c_elementvalue.isactive = 'Y') cta LEFT JOIN (SELECT ad_treenode.parent_id, ad_treenode.node_id, c_elementvalue.value, c_elementvalue.name FROM ad_treenode, c_elementvalue WHERE ad_treenode.node_id = c_elementvalue.c_elementvalue_id AND ad_treenode.ad_tree_id = (((SELECT ad_tree.ad_tree_id FROM ad_tree WHERE ad_tree.treetype = 'EV' AND ad_tree.isactive = 'Y' AND (ad_tree.ad_client_id IN (SELECT ad_client.ad_client_id FROM ad_client WHERE ad_client.ad_client_id <> '0'))))) AND ad_treenode.isactive = 'Y') p1 ON cta.c_elementvalue_id = p1.node_id LEFT JOIN (SELECT ad_treenode.parent_id, ad_treenode.node_id, c_elementvalue.value, c_elementvalue.name FROM ad_treenode, c_elementvalue WHERE ad_treenode.node_id = c_elementvalue.c_elementvalue_id AND ad_treenode.ad_tree_id = (((SELECT ad_tree.ad_tree_id FROM ad_tree WHERE ad_tree.treetype = 'EV' AND ad_tree.isactive = 'Y' AND (ad_tree.ad_client_id IN (SELECT ad_client.ad_client_id FROM ad_client WHERE ad_client.ad_client_id <> '0'))))) AND ad_treenode.isactive = 'Y') p2 ON p1.parent_id = p2.node_id LEFT JOIN (SELECT ad_treenode.parent_id, ad_treenode.node_id, c_elementvalue.value, c_elementvalue.name FROM ad_treenode, c_elementvalue WHERE ad_treenode.node_id = c_elementvalue.c_elementvalue_id AND ad_treenode.ad_tree_id = (((SELECT ad_tree.ad_tree_id FROM ad_tree WHERE ad_tree.treetype = 'EV' AND ad_tree.isactive = 'Y' AND (ad_tree.ad_client_id IN (SELECT ad_client.ad_client_id FROM ad_client WHERE ad_client.ad_client_id <> '0'))))) AND ad_treenode.isactive = 'Y') p3 ON p2.parent_id = p3.node_id LEFT JOIN (SELECT ad_treenode.parent_id, ad_treenode.node_id, c_elementvalue.value, c_elementvalue.name FROM ad_treenode, c_elementvalue WHERE ad_treenode.node_id = c_elementvalue.c_elementvalue_id AND ad_treenode.ad_tree_id = (((SELECT ad_tree.ad_tree_id FROM ad_tree WHERE ad_tree.treetype = 'EV' AND ad_tree.isactive = 'Y' AND (ad_tree.ad_client_id IN (SELECT ad_client.ad_client_id FROM ad_client WHERE ad_client.ad_client_id <> '0'))))) AND ad_treenode.isactive = 'Y') p4 ON p3.parent_id = p4.node_id LEFT JOIN (SELECT ad_treenode.parent_id, ad_treenode.node_id, c_elementvalue.value, c_elementvalue.name FROM ad_treenode, c_elementvalue WHERE ad_treenode.node_id = c_elementvalue.c_elementvalue_id AND ad_treenode.ad_tree_id = (((SELECT ad_tree.ad_tree_id FROM ad_tree WHERE ad_tree.treetype = 'EV' AND ad_tree.isactive = 'Y' AND (ad_tree.ad_client_id IN (SELECT ad_client.ad_client_id FROM ad_client WHERE ad_client.ad_client_id <> '0'))))) AND ad_treenode.isactive = 'Y') p5 ON p4.parent_id = p5.node_id LEFT JOIN (SELECT ad_treenode.parent_id, ad_treenode.node_id, c_elementvalue.value, c_elementvalue.name FROM ad_treenode, c_elementvalue WHERE ad_treenode.node_id = c_elementvalue.c_elementvalue_id AND ad_treenode.ad_tree_id = (((SELECT ad_tree.ad_tree_id FROM ad_tree WHERE ad_tree.treetype = 'EV' AND ad_tree.isactive = 'Y' AND (ad_tree.ad_client_id IN (SELECT ad_client.ad_client_id FROM ad_client WHERE ad_client.ad_client_id <> '0'))))) AND ad_treenode.isactive = 'Y') p6 ON p5.parent_id = p6.node_id ORDER BY CASE COALESCE(to_char(p1.value), to_char('0')) WHEN '0' THEN COALESCE(to_char(cta.value), to_char('0')) ELSE COALESCE(to_char(p1.value), to_char('0')) END]]></view>
  </database>
