/*
 ************************************************************************************
 * Copyright (C) 2014 Openbravo S.L.U.
 * Licensed under the Openbravo Commercial License version 1.0
 * You may obtain a copy of the License at http://www.openbravo.com/legal/obcl.html
 * or in the legal folder of this module distribution.
 ************************************************************************************
 */

package org.openbravo.mobile.core;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.openbravo.base.HttpBaseUtils;
import org.openbravo.client.kernel.Component;
import org.openbravo.client.kernel.ComponentProvider;
import org.openbravo.client.kernel.KernelConstants;
import org.openbravo.client.kernel.KernelServlet;
import org.openbravo.client.kernel.KernelUtils;
import org.openbravo.dal.service.OBDal;
import org.openbravo.model.ad.module.Module;

/**
 * Contains kernelutils overridden utility methods used by mobile core
 * 
 * @author ral
 * @author mtaal
 */
public class MobileCoreKernelUtils extends KernelUtils {
  private static String DISCOUNTS_MOD_ID = "B0801CBD73C74727AA4E27E8B2C206F6";
  private static String MOBILECORE_MOD_ID = "08943B85ADF64E708797A753E5B6AAEE";

  /**
   * Creates a parameters object which can be used as the parameters for a {@link Component} as
   * passed in the {@link ComponentProvider#getComponent(String, Map)}.
   * 
   * Should be the same as the {@link KernelServlet} getParameters method.
   */
  @SuppressWarnings("rawtypes")
  public static Map<String, Object> getParameterMap(ServletContext servletContext,
      HttpServletRequest request) {
    final Map<String, Object> parameterMap = new HashMap<String, Object>();
    for (Enumeration keys = request.getParameterNames(); keys.hasMoreElements();) {
      final String key = (String) keys.nextElement();
      parameterMap.put(key, request.getParameter(key));
    }

    if (!parameterMap.containsKey(KernelConstants.CONTEXT_URL)) {
      parameterMap.put(KernelConstants.CONTEXT_URL, HttpBaseUtils.getLocalAddress(request));
    }

    if (!parameterMap.containsKey(KernelConstants.SERVLET_CONTEXT)) {
      parameterMap.put(KernelConstants.SERVLET_CONTEXT, servletContext);
    }

    if (!parameterMap.containsKey(KernelConstants.SKIN_PARAMETER)) {
      parameterMap.put(KernelConstants.SKIN_PARAMETER, KernelConstants.SKIN_DEFAULT);
    }

    return parameterMap;
  }

  /***
   * get the currentLevel for the module. the currentLevel is used to sort the different javascript
   * files into the final javascript file generated by the staticResourceComponent class
   */
  @Override
  protected int computeLowLevelCode(Module module, List<Module> modules) {
    // Hack for discounts to be dependent of webpos
    // a. the dependency cannot be enforced in the backend because the module is shared with the ERP
    // and then it will force the ERP to install Mobile.core
    // b. the dependency cannot be added to the dependency list of the module
    // see issue https://issues.openbravo.com/view.php?id=27751
    // Note: doesn't do the if in case the module is already in the modules list
    // this is a dependency cycle handled by the super implementation
    if (module.getId().equals(DISCOUNTS_MOD_ID) && !modules.contains(module)) {
      Module core = OBDal.getInstance().get(Module.class, MOBILECORE_MOD_ID);
      return 1 + computeLowLevelCode(core, new ArrayList<Module>());
    }
    return super.computeLowLevelCode(module, modules);
  }
}
