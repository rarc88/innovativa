<?xml version="1.0"?>
  <database name="FUNCTION SSPR_CHANGE_STATUS">
    <function name="SSPR_CHANGE_STATUS" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_Parameter RECORD;  
  v_status VARCHAR(32);   -- ALMACENA EL ESTADO ATADO A LA RAZON DE LA OT
  v_ResultStr VARCHAR2(2000):='';
  v_StatusDocumento_P VARCHAR(60);--OBTG:VARCHAR2--
  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32) ;
  v_Record_ID  VARCHAR2(32);
  v_Message VARCHAR2(2000):='';  
BEGIN
  --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  
  BEGIN --BODY

   FOR Cur_Parameter IN
      (SELECT i.Record_ID,
      p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        p.AD_Client_ID,
        p.AD_Org_ID,
        p.CreatedBy   
      FROM AD_PInstance i 
      LEFT JOIN AD_PInstance_Para p
           ON i.AD_PInstance_ID = p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID = PInstance_ID
      ORDER BY p.SeqNo       
      )
    LOOP

	    IF (Cur_Parameter.ParameterName = 'statusdoc') THEN
		v_StatusDocumento_P := Cur_Parameter.P_String;      
		v_Record_ID := Cur_Parameter.Record_ID;	
		v_Client_ID := Cur_Parameter.AD_Client_ID;
		v_Org_ID := Cur_Parameter.AD_Org_ID;
		v_User_ID := Cur_Parameter.CreatedBy;
            ELSE  
		DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
	    END IF;       
    END LOOP; -- End Get Parameter
  
   
    /*Datos Basicos para la inserccion de cabeceras*/
    SELECT status
    into v_status
    FROM sspr_loans A
    WHERE A.sspr_loans_id = v_Record_ID;
    
	

	IF (v_status = 'dr' AND (v_StatusDocumento_P = 'cl' or v_StatusDocumento_P = 'ad' ))  THEN
		UPDATE sspr_loans SET status= v_StatusDocumento_P , Updated = now(), UpdatedBy=v_User_ID WHERE sspr_loans_id = v_Record_ID;
	elsIF v_status = v_StatusDocumento_P THEN
		RAISE_APPLICATION_ERROR(-20000,'@El prestamo ya se encuentra en estado Seleccionado@');
	elsIF (v_status = 'dr' AND v_StatusDocumento_P = 'ap') THEN
		RAISE_APPLICATION_ERROR(-20000,'@Debe aplicarse primero el prestamo@');
	--elsIF (v_status = 'ap' AND v_StatusDocumento_P = 'ap') THEN
		
	elsIf (v_status = 'ad' AND (v_StatusDocumento_P = 'ap' or v_StatusDocumento_P = 'cl')) THEN
		UPDATE sspr_loans SET status= v_StatusDocumento_P , Updated = now(), UpdatedBy=v_User_ID WHERE sspr_loans_id = v_Record_ID;
	elsIf (v_status = 'ap' AND v_StatusDocumento_P = 'cl') THEN
		UPDATE sspr_loans SET status= v_StatusDocumento_P , Updated = now(), UpdatedBy=v_User_ID WHERE sspr_loans_id = v_Record_ID;
	END IF;
	
   
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
    
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;
    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SSPR_CHANGE_STATUS
]]></body>
    </function>
  </database>
