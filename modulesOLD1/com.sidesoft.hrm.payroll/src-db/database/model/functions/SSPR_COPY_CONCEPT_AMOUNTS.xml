<?xml version="1.0"?>
  <database name="FUNCTION SSPR_COPY_CONCEPT_AMOUNTS">
    <function name="SSPR_COPY_CONCEPT_AMOUNTS" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_Parameter RECORD;
  Cur_Period RECORD;
  Cur_Employee RECORD;
  Cur_Concept RECORD;

  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32) ;
  
  v_ResultStr VARCHAR2(2000) := '';  
  v_StartPeriod_ID VARCHAR2(32);
  v_EndPeriod_ID VARCHAR2(32);
  v_BPartner_ID VARCHAR2(32);  
  v_SSconcept_ID VARCHAR2(32);  

  v_StartPeriod_StartDate DATE;
  v_StartPeriod_EndDate DATE;
  v_EndPeriod_StartDate DATE;
  v_EndPeriod_EndDate DATE;

  v_Period_ID VARCHAR2(32); 
  v_PRollTemplate_ID VARCHAR2(32);  
  v_n_insertions NUMBER;
  v_Message VARCHAR2(2000):='';

BEGIN
  --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY

    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;    
    
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        p.AD_Client_ID,
        p.AD_Org_ID,
        p.CreatedBy        
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
           ON i.AD_PInstance_ID = p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID = PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP      	  
	
      IF (Cur_Parameter.ParameterName = 'StartPeriod') THEN
        v_StartPeriod_ID := Cur_Parameter.P_String;      
          
        v_Client_ID := Cur_Parameter.AD_Client_ID;
        v_Org_ID := Cur_Parameter.AD_Org_ID;
        v_User_ID := Cur_Parameter.CreatedBy;
      ELSIF (Cur_Parameter.ParameterName = 'EndPeriod') THEN
        v_EndPeriod_ID := Cur_Parameter.P_String;
      ELSIF (Cur_Parameter.ParameterName = 'C_BPartner_ID') THEN
        v_BPartner_ID := Cur_Parameter.P_String;      
ELSIF (Cur_Parameter.ParameterName = 'SSPR_Concept_ID') THEN
v_SSconcept_ID := Cur_Parameter.P_String;    
      ELSE  
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;     
      
    END LOOP; -- Get Parameter

    SELECT startdate, enddate
    INTO v_StartPeriod_StartDate, v_StartPeriod_EndDate
    FROM C_Period
    WHERE C_Period_ID = v_StartPeriod_ID;

    
    SELECT startdate, enddate
    INTO v_EndPeriod_StartDate, v_EndPeriod_EndDate
    FROM C_Period
    WHERE C_Period_ID = v_EndPeriod_ID;

    IF (v_StartPeriod_StartDate > v_EndPeriod_StartDate) THEN
    
      RAISE_APPLICATION_ERROR(-20000, '@SSPR_EndStartPeriod@');
      
    END IF;
  
    IF (v_BPartner_ID IS NOT NULL and v_SSconcept_ID IS NULL) THEN

      --Copy Concepts by employee
      FOR Cur_Period IN 
      (SELECT a.sspr_concept_amount_id, a.ad_client_id, a.ad_org_id, a.isactive, a.created,a.createdby, a.updated, a.updatedby, a.sspr_concept_id, a.c_bpartner_id,a.c_period_id, a.amount
      FROM sspr_concept_amount a left join sspr_concept b on a.sspr_concept_id=b.sspr_concept_id
      WHERE a.c_period_id=v_StartPeriod_ID and a.c_bpartner_id=v_BPartner_ID and b.concepttype='D'
      )
      LOOP

        Insert into sspr_concept_amount (SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY
		,UPDATED,UPDATEDBY,SSPR_CONCEPT_ID,C_BPARTNER_ID,C_PERIOD_ID,AMOUNT,ISMODIFIED)  values(get_uuid(), Cur_Period.ad_client_id, Cur_Period.ad_org_id, Cur_Period.isactive, Cur_Period.created,Cur_Period.createdby, Cur_Period.updated, Cur_Period.updatedby, Cur_Period.sspr_concept_id, Cur_Period.c_bpartner_id,v_EndPeriod_ID, Cur_Period.amount,'N');            
        v_n_insertions := v_n_insertions+1;          
       END LOOP;

ELSIF (v_BPartner_ID IS NOT NULL and v_SSconcept_ID IS NOT NULL) THEN

      --Copy Concepts by employee
      FOR Cur_Period IN 
      (SELECT a.sspr_concept_amount_id, a.ad_client_id, a.ad_org_id, a.isactive, a.created,a.createdby, a.updated, a.updatedby, a.sspr_concept_id, a.c_bpartner_id,a.c_period_id, a.amount
      FROM sspr_concept_amount a left join sspr_concept b on a.sspr_concept_id=b.sspr_concept_id
      WHERE a.c_period_id=v_StartPeriod_ID and a.c_bpartner_id=v_BPartner_ID and b.concepttype='D' and b.sspr_concept_id=v_SSconcept_ID
      )
      LOOP

      
      

        Insert into sspr_concept_amount (SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY
		,UPDATED,UPDATEDBY,SSPR_CONCEPT_ID,C_BPARTNER_ID,C_PERIOD_ID,AMOUNT,ISMODIFIED) 
		values(get_uuid(), Cur_Period.ad_client_id, Cur_Period.ad_org_id, Cur_Period.isactive, Cur_Period.created,Cur_Period.createdby, 
		Cur_Period.updated, Cur_Period.updatedby, Cur_Period.sspr_concept_id, Cur_Period.c_bpartner_id,v_EndPeriod_ID, Cur_Period.amount,'N');            
                 v_n_insertions := v_n_insertions+1; 
       END LOOP;

      ELSIF (v_BPartner_ID IS NULL and v_SSconcept_ID IS NOT NULL) THEN --mODIFICADO EMPLEADOS ACTIVOS
		--raise exception '%', v_org_id ||'-'||v_client_id||'-'||v_StartPeriod_ID||'-'||v_SSconcept_ID;
      --Copy Concepts by employee
      FOR Cur_Period IN 
	      (SELECT a.sspr_concept_amount_id, a.ad_client_id, a.ad_org_id, a.isactive, a.created,a.createdby,
	       a.updated, a.updatedby, a.sspr_concept_id, a.c_bpartner_id,a.c_period_id, a.amount
	      FROM sspr_concept_amount a left join sspr_concept b on a.sspr_concept_id=b.sspr_concept_id
	      left join c_bpartner c on a.c_bpartner_id = c.c_bpartner_id  
	      WHERE a.c_period_id=v_StartPeriod_ID and b.concepttype='D' 
	      and b.sspr_concept_id=v_SSconcept_ID 
	      and c.em_sspr_status ='A'
	      and c.isemployee='Y'
	      )
      LOOP
		Insert into sspr_concept_amount (SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY
		,UPDATED,UPDATEDBY,SSPR_CONCEPT_ID,C_BPARTNER_ID,C_PERIOD_ID,AMOUNT,ISMODIFIED) values(get_uuid(), Cur_Period.ad_client_id, Cur_Period.ad_org_id, Cur_Period.isactive, Cur_Period.created,Cur_Period.createdby,
		 Cur_Period.updated, Cur_Period.updatedby, Cur_Period.sspr_concept_id,  Cur_Period.c_bpartner_id,v_EndPeriod_ID, Cur_Period.amount,'N');            
               v_n_insertions := v_n_insertions+1;  
       END LOOP;

      ELSIF (v_BPartner_ID IS NULL and v_SSconcept_ID IS  NULL) THEN --en el caso de que el empleado no sea null
	--raise exception '%', v_org_id ||'-'||v_client_id||'-'||v_StartPeriod_ID||'-test'||v_EndPeriod_ID||'test';
      --Copy Concepts by employee
      FOR Cur_Period IN 
	      (SELECT a.sspr_concept_amount_id, a.ad_client_id, a.ad_org_id, a.isactive, a.created,a.createdby, a.updated, a.updatedby, 
	      a.sspr_concept_id, a.c_bpartner_id,a.c_period_id, a.amount
	      FROM sspr_concept_amount a 
	      left join sspr_concept b on a.sspr_concept_id=b.sspr_concept_id
	      left join c_bpartner c on a.c_bpartner_id = c.c_bpartner_id  
	      WHERE a.c_period_id=v_StartPeriod_ID and b.concepttype='D' 
	      --and b.sspr_concept_id = v_SSconcept_ID 
	       and c.em_sspr_status ='A'
	       and c.isemployee='Y'
	      )
      LOOP
		Insert into sspr_concept_amount (SSPR_CONCEPT_AMOUNT_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,CREATED,CREATEDBY
		,UPDATED,UPDATEDBY,SSPR_CONCEPT_ID,C_BPARTNER_ID,C_PERIOD_ID,AMOUNT,ISMODIFIED) 
		values(get_uuid(), Cur_Period.ad_client_id, Cur_Period.ad_org_id,
		Cur_Period.isactive, Cur_Period.created,Cur_Period.createdby, Cur_Period.updated, Cur_Period.updatedby, 
		Cur_Period.sspr_concept_id, Cur_Period.c_bpartner_id,v_EndPeriod_ID, Cur_Period.amount,'N');
             v_n_insertions := v_n_insertions+1;   
       END LOOP;
         
    END IF;      
    
    v_Message := '@RowsInserted@: ' || v_n_insertions || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;
    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SSPR_COPY_CONCEPT_AMOUNTS
]]></body>
    </function>
  </database>
