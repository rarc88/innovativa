<?xml version="1.0"?>
  <database name="FUNCTION SSPR_LEAVE_PAID">
    <function name="SSPR_LEAVE_PAID" type="NULL">
      <parameter name="p_period_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_conceptin_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_conceptout_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_user_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_sspr_payroll_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
  Cur_leave RECORD;
  Cur_sspr_leave_group RECORD;
  Cur_vacations RECORD;

  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32) ;
  
  v_ResultStr VARCHAR2(2000) := '';
  v_StartPeriod DATE; --OBTG:VARCHAR2--
  v_EndPeriod DATE; --OBTG:VARCHAR2--
  v_BPartner_ID VARCHAR2(32);
  v_SSconcept_ID VARCHAR2(32);

  v_Period_ID VARCHAR2(32);
  v_n_insertions NUMBER;
  v_Message VARCHAR2(2000):='';

  v_SSconceptCompany_ID VARCHAR2(32);
  V_Concept_FR VARCHAR2(32);
  v_salary NUMBER;
  v_sspr_payroll_id VARCHAR2(32);
  v_dayleave NUMBER;

  v_dayswork NUMBER;
  v_salarydayslabo NUMBER;
  v_salarydaysleav NUMBER;
  v_salarytotal NUMBER;
  v_daysmonth NUMBER;
  v_value NUMBER;

  BEGIN --BODY
    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;    
 
	--Variables
	v_Period_ID := p_period_id;      
	v_Client_ID := p_client_id;
	v_Org_ID := p_org_id;
	v_User_ID := p_user_id; 
	v_SSconcept_ID := p_conceptin_id;
	v_SSconceptCompany_ID := p_conceptout_id;
	v_sspr_payroll_id := p_sspr_payroll_id;
	        	
	--Obtengo el periodo
	SELECT startdate, enddate
	INTO v_StartPeriod,v_EndPeriod
	FROM C_period
	WHERE C_period_ID = v_Period_ID;

	--Obtengo los dias del mes
	select coalesce((select case when daysmonth = 'TD' then 30
	else to_number(to_char(v_EndPeriod,'dd')) 
	end as daysmonth
	from sspr_hours_work),0)
	into v_dayswork
	from dual;

	If(v_dayswork = 0)Then
		RAISE_APPLICATION_ERROR(-20000,'@sspr_general_configuration@');
	End If;
	
	--ELimina los registros de la tabla temporal
	delete from sspr_leave_group;
	
	For Cur_leave In(
		select a.c_bpartner_id, c.em_sspr_currentsalary, a.stardate, a.enddate
		,b.percentage_company, a.sspr_leave_emp_id,
		sspr_return_month(a.stardate,a.enddate,to_number(to_char(v_EndPeriod,'mm')),to_number(to_char(v_EndPeriod,'yyyy')),v_dayswork) as dayleave,
		0 as amountleave,
		a.ad_client_id,a.ad_org_id,a.isactive, a.created, a.createdby, a.updated, a.updatedby
		from sspr_leave_emp a
		left join sspr_leave_category b on b.sspr_leave_category_id = a.sspr_leave_category_id
		left join c_bpartner c on c.c_bpartner_id = a.c_bpartner_id
		where a.status_approve = 'ap'
		and a.add_to_vacancies = 'Y' and a.paid_vacations = 'Y'
		and ((v_StartPeriod between a.stardate and a.enddate or v_EndPeriod between a.stardate and a.enddate) or
		 (a.stardate between v_StartPeriod and v_EndPeriod or a.enddate between v_StartPeriod and v_EndPeriod))
	)
	Loop

		v_dayleave := Cur_leave.dayleave;

		If(v_dayleave > 0) Then
			
			For Cur_vacations In(

				select round(sum(dayvalue * earneddays_tot),2)/ round(sum(earneddays_tot),2) as dayvalue, sum(nodaysvacations)  as nodaysvacations ,status
				from (
					select  c.status,c.c_bpartner_id,
						c.startdate,(c.startdate + INTERVAL '1' year) - 1 as fechavalidacion
						,d.entrydate, d.end_date,
						sum(d.dayvalue * d.earneddays_tot) / sum(d.earneddays_tot) as dayvalue, coalesce(sum(e.nodays),0) as nodaysvacations, d.earneddays_tot
						
					from (select  b.dayvalue , b.earneddays_tot, a.nodays, a.startdate, a.enddate, b.c_bpartner_id
						,case when a.enddate < (a.startdate + INTERVAL '1' year) - 1 then 'N' else 'Y' end as status
						from sspr_leave_emp_vac a
						left join sspr_vacations b on b.sspr_vacations_id = a.sspr_vacations_id
						where a.sspr_leave_emp_id = Cur_leave.sspr_leave_emp_id
						and b.startingbalance = 'Y'
						and completedays = 'Y' and uploadedscript = 'N'
						group by a.startdate, a.enddate, b.dayvalue, b.earneddays_tot, a.nodays,  b.c_bpartner_id) c
					left join sspr_vacations d on d.entrydate >= c.startdate and d.end_date <= (c.startdate + INTERVAL '1' year) - 1 and d.c_bpartner_id = c.c_bpartner_id 
					left join sspr_leave_emp_vac e on e.sspr_vacations_id = d.sspr_vacations_id  and e.sspr_leave_emp_id = Cur_leave.sspr_leave_emp_id 
					where c.status = 'N'
					group by c.status, c.startdate, d.entrydate, d.end_date, c.c_bpartner_id, d.earneddays_tot)
				temp_sspr_leave_emp
				group by status
				
				union all
				select dayvalue, nodaysvacations, status
				from (select  round((b.dayvalue * b.earneddays_tot),2) / round(b.earneddays_tot,2) as dayvalue, a.nodays as nodaysvacations
					,case when a.enddate < (a.startdate + INTERVAL '1' year) - 1 then 'N' else 'Y' end as status
					from sspr_leave_emp_vac a
					left join sspr_vacations b on b.sspr_vacations_id = a.sspr_vacations_id
					where a.sspr_leave_emp_id = Cur_leave.sspr_leave_emp_id    
					and b.startingbalance = 'Y'
					group by a.startdate, a.enddate, b.dayvalue, b.earneddays_tot, a.nodays ) sspr_leave_emp_vac
				where status = 'Y'
				
				union all
				select  round((b.dayvalue * b.earneddays_tot),2) / round(b.earneddays_tot,2) as dayvalue, a.nodays as nodaysvacations, 'I' as status
				from sspr_leave_emp_vac a
				left join sspr_vacations b on b.sspr_vacations_id = a.sspr_vacations_id
				where a.sspr_leave_emp_id = Cur_leave.sspr_leave_emp_id 
				and b.startingbalance = 'N'
			)
			Loop
			
								
						insert into sspr_leave_group(sspr_leave_group_id, ad_client_id,ad_org_id, isactive, created,createdby,
						     updated, updatedby,c_bpartner_id, currentsalary, stardate, enddate, 
						     percentage_company,sspr_leave_emp_id, dayleave,amountleave)
						values(get_uuid(), Cur_leave.ad_client_id, Cur_leave.ad_org_id,Cur_leave.isactive, Cur_leave.created,
							Cur_leave.createdby,Cur_leave.updated, Cur_leave.updatedby,
							Cur_leave.c_bpartner_id, Cur_leave.em_sspr_currentsalary, Cur_leave.stardate, Cur_leave.enddate, Cur_leave.percentage_company,
							Cur_leave.sspr_leave_emp_id, Cur_vacations.nodaysvacations, Cur_vacations.nodaysvacations * Cur_vacations.dayvalue);

			End Loop;
		End If;

	End Loop;


	For Cur_sspr_leave_group In(
	select a.c_bpartner_id, sum(a.dayleave) as dayleave, sum(a.amountleave) as amountleave, b.name
	from sspr_leave_group a
	left join c_bpartner b on b.c_bpartner_id = a.c_bpartner_id
	where a.amountleave > 0
	group by a.c_bpartner_id, b.name
	)
	Loop
		v_salarytotal := 0;
		v_value := 0;
		
		DELETE FROM SSPR_Concept_Amount 
		WHERE SSPR_Concept_ID = v_SSconceptCompany_ID 
		and C_Period_ID = v_Period_ID 
		and C_BPARTNER_ID = Cur_sspr_leave_group.c_bpartner_id;

		update sspr_payroll_ticket_concept
		set amount =  Cur_sspr_leave_group.amountleave
		where sspr_payroll_ticket_concept_id = (select c.sspr_payroll_ticket_concept_id
							from sspr_payroll a
							left join sspr_payroll_ticket b on b.sspr_payroll_id = a.sspr_payroll_id
							left join sspr_payroll_ticket_concept c on c.sspr_payroll_ticket_id = b.sspr_payroll_ticket_id
							where a.sspr_payroll_id = v_sspr_payroll_id
							and c.sspr_concept_id = v_SSconceptCompany_ID
							and b.c_bpartner_id = Cur_sspr_leave_group.c_bpartner_id);
		
	/*	v_value := SSPR_GET_BUSINESS_CONCEPT(v_SSconcept_ID, v_Period_ID, Cur_sspr_leave_group.c_bpartner_id);
		
		v_salarytotal := v_value -  Cur_sspr_leave_group.amountleave;
				
		--Actualiza los dias el nuevo sueldo
		update sspr_payroll_ticket_concept
		set amount =  v_salarytotal
		where sspr_payroll_ticket_concept_id = (select c.sspr_payroll_ticket_concept_id
							from sspr_payroll a
							left join sspr_payroll_ticket b on b.sspr_payroll_id = a.sspr_payroll_id
							left join sspr_payroll_ticket_concept c on c.sspr_payroll_ticket_id = b.sspr_payroll_ticket_id
							where a.sspr_payroll_id = v_sspr_payroll_id
							and c.sspr_concept_id = v_SSconcept_ID
							and b.c_bpartner_id = Cur_sspr_leave_group.c_bpartner_id);*/
	End Loop;

    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
  				
RETURN;
END SSPR_LEAVE_PAID
]]></body>
    </function>
  </database>
