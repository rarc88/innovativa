<?xml version="1.0" encoding="UTF-8"?><ob:Openbravo xmlns:ob="http://www.openbravo.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <sswh_rptc_sql id="1566F03FDCE94BA1BB254883244B824D" identifier="Detalle Compras">
    <id>1566F03FDCE94BA1BB254883244B824D</id>
    <active>true</active>
    <creationDate transient="true">2019-05-16T17:27:55.164Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-20T16:13:25.87Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Detalle Compras</commercialName>
    <sqlscript>
  insert into sswh_rptc_purchasedet(sswh_rptc_purchasedet_id,
autori_retencion,
autorizacion,
autorizacion_nc,
base_iva_cero,
base_iva_doce,
base_no_iva,
codigo_compra,
cod_sustento,
convenio_trib,
documento_creditnote,
establecimiento,
establecimiento_nc,
establecimiento_ret,
fecha_emision,
fecha_emision_ret,
fecha_registro,
monto_ice,
monto_iva,
norma_legal,
numero_ident,
pago_local,
pais_pago,
parte_relacionada,
poreference,
posted,
punto_emision,
punto_emision_nc,
punto_emision_ret,
referencecreditnote,
ref_retencion,
ret_iva_100,
ret_iva_30,
ret_iva_50,
ret_iva_70,
ret_iva_20,
ret_iva_10,
secuencia,
secuencia_nc,
secuencia_ret,
tipo_comprobante,
tipo_identificador,
tipo_proveedor,
typedoc,
base_excenta,
fiscalregime,
fiscalname,
tipo_regimen,
pais_pago_general,
pais_pago_paraiso,
deno_pago_regfis,
c_invoice_id,
ad_org_id,
ad_client_id,
isactive,
created,
createdby,
updated,
updatedby,
process
)
 SELECT 
    get_uuid() as id,
    sswh_purchasedetail_nats.autori_retencion,
    sswh_purchasedetail_nats.autorizacion,
    sswh_purchasedetail_nats.autorizacion_nc,
    sswh_purchasedetail_nats.base_iva_cero,
    sswh_purchasedetail_nats.base_iva_doce,
    sswh_purchasedetail_nats.base_no_iva,
    sswh_purchasedetail_nats.codigo_compra,
    sswh_purchasedetail_nats.cod_sustento,
    sswh_purchasedetail_nats.convenio_trib,
    sswh_purchasedetail_nats.documento_creditnote,
    sswh_purchasedetail_nats.establecimiento,
    sswh_purchasedetail_nats.establecimiento_nc,
    sswh_purchasedetail_nats.establecimiento_ret,
    to_date(sswh_purchasedetail_nats.fecha_emision, 'dd/MM/yyyy'::text) AS fecha_emision,
    to_date(sswh_purchasedetail_nats.fecha_emision_ret, 'dd/MM/yyyy'::text) AS fecha_emision_ret,
    to_date(sswh_purchasedetail_nats.fecha_registro, 'dd/MM/yyyy'::text) AS fecha_registro,
    sswh_purchasedetail_nats.monto_ice,
    sswh_purchasedetail_nats.monto_iva,
    sswh_purchasedetail_nats.norma_legal,
    sswh_purchasedetail_nats.numero_ident,
    sswh_purchasedetail_nats.pago_local,
    sswh_purchasedetail_nats.pais_pago,
    sswh_purchasedetail_nats.parte_relacionada,
    sswh_purchasedetail_nats.poreference,
    sswh_purchasedetail_nats.posted,
    sswh_purchasedetail_nats.punto_emision,
    sswh_purchasedetail_nats.punto_emision_nc,
    sswh_purchasedetail_nats.punto_emision_ret,
    sswh_purchasedetail_nats.referencecreditnote,
    sswh_purchasedetail_nats.ref_retencion,
    sswh_purchasedetail_nats.ret_iva_100,
    sswh_purchasedetail_nats.ret_iva_30,
    sswh_purchasedetail_nats.ret_iva_50,
    sswh_purchasedetail_nats.ret_iva_70,
    sswh_purchasedetail_nats.ret_iva_20,
    sswh_purchasedetail_nats.ret_iva_10,
    sswh_purchasedetail_nats.secuencia,
    sswh_purchasedetail_nats.secuencia_nc,
    sswh_purchasedetail_nats.secuencia_ret,
    sswh_purchasedetail_nats.tipo_comprobante,
    sswh_purchasedetail_nats.tipo_identificador,
    sswh_purchasedetail_nats.tipo_proveedor,
    sswh_purchasedetail_nats.typedoc,
    sswh_purchasedetail_nats.base_excenta,
    sswh_purchasedetail_nats.fiscalregime,
    sswh_purchasedetail_nats.fiscalname,
    sswh_purchasedetail_nats.tipo_regimen,
    sswh_purchasedetail_nats.pais_pago_general,
    sswh_purchasedetail_nats.pais_pago_paraiso,
    sswh_purchasedetail_nats.deno_pago_regfis,
    sswh_purchasedetail_nats.c_invoice_id,
    to_char(sswh_purchasedetail_nats.ad_org_id) AS ad_org_id,
    to_char('0'::text) AS ad_client_id,
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,
    to_char('0'::text) AS updatedby,
':p' as process
   FROM sswh_purchasedetail_nats
  WHERE sswh_purchasedetail_nats.posted::text = 'Y'::text
  and to_date(sswh_purchasedetail_nats.fecha_registro, 'dd/MM/yyyy') between to_date(':sd') and to_date(':edd')</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="2A80E94BEBAB4ECCAE9EE0A979052110" identifier="Ventas Reembolso">
    <id>2A80E94BEBAB4ECCAE9EE0A979052110</id>
    <active>true</active>
    <creationDate transient="true">2019-05-18T17:03:43.464Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-20T16:16:19.316Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Ventas Reembolso</commercialName>
    <sqlscript>insert into sswh_rptc_salesrefund 
 SELECT 
    get_uuid() AS sswh_rptc_salesrefund_id,
    to_char('0'::text) AS ad_client_id,
    to_char(ri.ad_org_id) AS ad_org_id,
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,
    to_char('0'::text) AS updatedby,
 ci.documentno AS codigo_compra,
    sl.value AS tipo_comp_reemb,
        CASE ri.taxidtype
            WHEN 'R'::text THEN '01'::text
            WHEN 'D'::text THEN 'O2'::text
            WHEN 'P'::text THEN '03'::text
            ELSE NULL::text
        END AS tipo_identificador,
    ri.taxidruc AS identificador_proveedor,
    ri.stablishment AS establecimiento,
    ri.shell AS punto_emision,
    ri.poreference AS secuencial,
    ri.dateemission AS fecha_emision,
    ri.withholdingauthorization AS w_authorization,
    COALESCE(ri.taxbaseamt, 0::numeric) AS base_imp_grabada,
    COALESCE(ri.untaxed_basis, 0::numeric) AS base_imp_grab_reem,
    COALESCE(ri.taxbaserefund, 0::numeric) AS base_no_grab_iva,
    ri.taxice AS monto_ice,
    ri.taxamt AS monto_ret_iva,
    ci.dateacct,
    ri.exemptbase AS base_exenta,
    ri.c_invoice_id,
   ':p' as process 
   FROM ssre_refundinvoice ri
     LEFT JOIN c_invoice ci ON ci.c_invoice_id::text = ri.c_invoice_id::text
     LEFT JOIN sswh_livelihoodt sl ON sl.sswh_livelihoodt_id::text = ri.sswh_livelihoodt_id::text
  WHERE ci.docstatus::text = 'CO'
and dateacct between (':sd') and (':edd')
and (ri.ad_org_id = :og1 OR :og1 is null)  </sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="2FC5238FA7E343FB9422797FE71AB42D" identifier="Detalle ventas">
    <id>2FC5238FA7E343FB9422797FE71AB42D</id>
    <active>true</active>
    <creationDate transient="true">2019-05-16T16:30:52.177Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-20T16:13:52.303Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Detalle ventas</commercialName>
    <sqlscript>insert into  sswh_rptc_salesdet 
select 
    get_uuid() AS sswh_rptc_salesdet_id,
    to_char('0') as ad_client_id,
    null ad_org_id,
    to_char('Y') AS isactive,
    now() AS created,
    to_char('0') AS createdby,
    now() AS updated,
    to_char('0') AS updatedby,
tipo_identificador, identif_cliente, cod_tipo_comprobante, sum(count) AS count, 
 sum(base_no_iva) AS base_no_iva, sum(base_iva_cero) AS base_iva_cero, sum(base_iva_doce) AS base_iva_doce, 
 sum(monto_iva) AS monto_iva, sum(monto_ret_iva) AS monto_ret_iva, 
 sum(monto_ret_renta) AS monto_ret_renta, null as c_period_id,
  posted, parte_relacionada, sum(montoice) AS montoice, tipo_contrib as tipo_cliente, deno_cli, tipo_em
  ,process
from
  (  SELECT 
    sswh_salesinvoice_nats.tipo_identificador,
    sswh_salesinvoice_nats.identif_cliente,
    sswh_salesinvoice_nats.cod_tipo_comprobante,
    sum(sswh_salesinvoice_nats.count) AS count,
    sum(sswh_salesinvoice_nats.base_no_iva) AS base_no_iva,
    sum(sswh_salesinvoice_nats.base_iva_cero) AS base_iva_cero,
    sum(sswh_salesinvoice_nats.base_iva_doce) AS base_iva_doce,
    sum(sswh_salesinvoice_nats.monto_iva) AS monto_iva,
    sum(sswh_salesinvoice_nats.monto_ret_iva) + sum(sswh_salesinvoice_nats.ws_retencion_iva) AS monto_ret_iva,
    sum(sswh_salesinvoice_nats.monto_ret_renta) + sum(sswh_salesinvoice_nats.ws_retencion_renta) AS monto_ret_renta,
    --null as c_period_id,
    sswh_salesinvoice_nats.posted,
    sswh_salesinvoice_nats.parte_relacionada,
    sum(sswh_salesinvoice_nats.montoice) AS montoice,
    sswh_salesinvoice_nats.tipo_contrib,
    sswh_salesinvoice_nats.deno_cli,
    sswh_salesinvoice_nats.tipo_em,
   to_char(':p') as process
   FROM sswh_salesinvoice_nats
  WHERE sswh_salesinvoice_nats.posted= 'Y' 
  and sswh_salesinvoice_nats.dateacct between ('2019-04-01') and ('2019-04-30') 
  AND NOT (sswh_salesinvoice_nats.c_invoice_id IN ( SELECT rep_at.invoice_id
           FROM ( SELECT ci.c_invoice_id AS invoice_id
                   FROM c_invoice ci
                     JOIN c_invoiceline cil ON cil.c_invoice_id= ci.c_invoice_id
                     JOIN c_orderline colv ON colv.c_orderline_id= cil.c_orderline_id
                     JOIN m_inoutline milv ON milv.m_inoutline_id= colv.m_inoutline_id
                     JOIN c_invoiceline cilf ON cilf.c_orderline_id= milv.c_orderline_id
                     JOIN c_invoice cif ON cif.c_invoice_id= cilf.c_invoice_id
                UNION ALL
                 SELECT cif.c_invoice_id
                   FROM c_invoice ci
                     JOIN c_invoiceline cil ON cil.c_invoice_id= ci.c_invoice_id
                     JOIN c_orderline colv ON colv.c_orderline_id= cil.c_orderline_id
                     JOIN m_inoutline milv ON milv.m_inoutline_id= colv.m_inoutline_id
                     JOIN c_invoiceline cilf ON cilf.c_orderline_id= milv.c_orderline_id
                     JOIN c_invoice cif ON cif.c_invoice_id= cilf.c_invoice_id) rep_at
          WHERE rep_at.invoice_id= sswh_salesinvoice_nats.c_invoice_id))
  GROUP BY sswh_salesinvoice_nats.tipo_identificador, sswh_salesinvoice_nats.identif_cliente, sswh_salesinvoice_nats.cod_tipo_comprobante, sswh_salesinvoice_nats.posted, sswh_salesinvoice_nats.parte_relacionada, sswh_salesinvoice_nats.ad_org_id, sswh_salesinvoice_nats.tipo_contrib, sswh_salesinvoice_nats.deno_cli, sswh_salesinvoice_nats.tipo_em
  ORDER BY sswh_salesinvoice_nats.identif_cliente 
) sswh_salesdet 
group by tipo_identificador, identif_cliente, cod_tipo_comprobante, c_period_id,
  posted,  isactive, parte_relacionada, tipo_contrib, deno_cli, tipo_em   ,process 
 order by 1</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="38B821D7548B433EB0C5F14A800B7438" identifier="Ventas por Establecimiento">
    <id>38B821D7548B433EB0C5F14A800B7438</id>
    <active>true</active>
    <creationDate transient="true">2019-05-18T19:03:20.962Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-18T19:16:49.349Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Ventas por Establecimiento</commercialName>
    <sqlscript>insert into sswh_rptc_salesbystab
 SELECT 
    get_uuid() AS sswh_rptc_salesbystab_id,
    to_char('0'::text) AS ad_client_id,
    to_char(rep_by_st.ad_org_id) AS ad_org_id,    
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,
    to_char('0'::text) AS updatedby,
    rep_by_st.establecimiento,
    sum(rep_by_st.valor) AS valor,
    to_date(to_char(rep_by_st.dateacct, 'dd/MM/yyyy'::text)) AS dateacct,
    COALESCE(sum(rep_by_st.compe), 0::numeric) AS compensacion,
    rep_by_st.documentno,
    ':p' as process
   FROM ( SELECT x.establecimiento,
            sum(x.total) AS valor,
            x.dateinvoiced,
            x.dateacct,
            x.posted,
            x.ad_org_id,
            sum(x.compen) AS compe,
            x.documentno
           FROM ( SELECT substr(h.prefix::text, 1, 3) AS establecimiento,
                    sum(a.totallines) AS total,
                    a.dateinvoiced,
                    a.dateacct,
                    a.posted,
                    a.ad_org_id,
                    comp.compensated_amount AS compen,
                        CASE sswh_document_ei(g.c_doctype_id)
                            WHEN 'Y'::bpchar THEN 'E'::text
                            ELSE 'F'::text
                        END AS tipo_em,
                    a.documentno
                   FROM c_invoice a
                     LEFT JOIN c_doctype g ON a.c_doctype_id::text = g.c_doctype_id::text
                     LEFT JOIN ad_sequence h ON g.docnosequence_id::text = h.ad_sequence_id::text
                     LEFT JOIN ( SELECT sia.c_invoice_id,
                            sia.afectedzone_code AS comp_type,
                            sia.monto_iva * COALESCE(sia.afectedzone_percent, 100::numeric) / 100::numeric AS compensated_amount
                           FROM sswh_salesinvoice_nats sia
                          WHERE sia.afectedzone = 'Y'::bpchar AND sia.afectedzone_code::text = '01'::text) comp ON comp.c_invoice_id::text = a.c_invoice_id::text
                  WHERE a.issotrx = 'Y'::bpchar AND a.processed = 'Y'::bpchar AND a.docstatus::text &lt;&gt; 'VO'::text AND g.em_sswh_implementautoriza = 'Y'::bpchar AND g.isreversal = 'N'::bpchar AND g.docbasetype::text = 'ARI'::text
                  GROUP BY a.c_doctype_id, g.name, h.prefix, a.dateinvoiced, a.dateacct, a.posted, a.ad_org_id, comp.compensated_amount, g.c_doctype_id, a.documentno
                UNION ALL
                 SELECT nc.substr,
                    nc.total *
                        CASE
                            WHEN nc.total &gt; 0::numeric THEN (-1)
                            ELSE 1
                        END::numeric,
                    nc.dateinvoiced,
                    nc.dateacct,
                    nc.posted,
                    nc.ad_org_id,
                    nc.compen,
                    nc.tipo_em,
                    nc.documentno
                   FROM ( SELECT substr(h.prefix::text, 1, 3) AS substr,
                            sum(a.totallines) AS total,
                            a.dateinvoiced,
                            a.dateacct,
                            a.posted,
                            a.ad_org_id,
                            0 AS compen,
                                CASE sswh_document_ei(g.c_doctype_id)
                                    WHEN 'Y'::bpchar THEN 'E'::text
                                    ELSE 'F'::text
                                END AS tipo_em,
                            a.documentno
                           FROM c_invoice a
                             LEFT JOIN c_doctype g ON a.c_doctype_id::text = g.c_doctype_id::text
                             LEFT JOIN ad_sequence h ON g.docnosequence_id::text = h.ad_sequence_id::text
                          WHERE a.issotrx = 'Y'::bpchar AND a.processed = 'Y'::bpchar AND a.docstatus::text &lt;&gt; 'VO'::text
                           AND g.em_sswh_implementautoriza = 'Y'::bpchar AND (g.isreversal = 'Y'::bpchar OR (g.docbasetype::text = ANY (ARRAY['ARC'::character varying, 'ARI_RM'::character varying]::text[])))
                          GROUP BY a.c_doctype_id, g.name, h.prefix, a.dateinvoiced, a.dateacct, a.posted, a.ad_org_id, g.c_doctype_id, a.documentno) nc) x
          WHERE tipo_em = 'F'::text 
          AND x.posted::text = 'Y'::text
          GROUP BY x.establecimiento, x.dateinvoiced, x.dateacct, x.posted, x.ad_org_id, x.documentno
          ORDER BY x.ad_org_id) rep_by_st
          where (dateacct between to_date(':sd') and to_date(':edd'))
and  (rep_by_st.ad_org_id = :og1 OR :og1 is null)
  GROUP BY rep_by_st.establecimiento, rep_by_st.dateacct, rep_by_st.ad_org_id, rep_by_st.documentno
  ORDER BY rep_by_st.documentno</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="65886003DB4645D3B20AE3858624999F" identifier="Información Organización">
    <id>65886003DB4645D3B20AE3858624999F</id>
    <active>true</active>
    <creationDate transient="true">2019-05-16T14:56:54.893Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-17T15:16:56.921Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Información Organización</commercialName>
    <sqlscript>insert into sswh_rptc_orginform
 SELECT 
    get_uuid() as sswh_rptc_orginform_id,
    to_char('0'::text) AS ad_client_id,
    a.ad_org_id AS ad_org_id ,
    a.created,
    to_char('0'::text) AS createdby,
    a.updated,
    to_char('0'::text) AS updatedby,
    a.isactive,
    a.social_name,
    b.taxid AS identif,
    c.em_sswh_taxidtype,
    ':p' as process
   FROM ad_org a
     LEFT JOIN ad_orginfo b ON a.ad_org_id::text = b.ad_org_id::text
     LEFT JOIN c_bpartner c ON c.c_bpartner_id::text = b.c_bpartner_id::text
where (a.ad_org_id =  :og1 OR  :og1 is null)</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="88095B86EE3C4FC488DD1EC82C3AB09C" identifier="Ventas Formas de Pago">
    <id>88095B86EE3C4FC488DD1EC82C3AB09C</id>
    <active>true</active>
    <creationDate transient="true">2019-05-20T10:59:27.722Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-20T17:07:02.203Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Ventas Formas de Pago</commercialName>
    <sqlscript>INSERT INTO sswh_rptc_salespayform
SELECT  
get_uuid() as sswh_rptc_salespayform_id,
    to_char('0'::text) AS ad_client_id,
    ad_org_id,
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,
    to_char('0'::text) AS updatedby,
formofpayment.em_sswh_codeats AS form_of_payment   
,':p' as process
,identif_cliente
FROM (       
SELECT pm.em_sswh_codeats,a.ad_org_id ,  
                        CASE c.em_sswh_taxidtype  
                            WHEN 'C' THEN to_char('9999999999999')  
                            ELSE to_char(c.taxid)  
                        END AS identif_cliente 
FROM c_invoice a   
LEFT JOIN c_bpartner c ON a.c_bpartner_id = c.c_bpartner_id  
LEFT JOIN c_invoicetax e ON a.c_invoice_id = e.c_invoice_id  
LEFT JOIN c_tax f ON e.c_tax_id = f.c_tax_id  
LEFT JOIN c_doctype g ON a.c_doctype_id = g.c_doctype_id  
LEFT JOIN sswh_taxpayer tp ON c.em_sswh_taxpayer_id = tp.sswh_taxpayer_id 
JOIN fin_payment_schedule ps ON ps.c_invoice_id = a.c_invoice_id  
LEFT JOIN ssfi_fin_payment_detail_v pdv ON ps.fin_payment_schedule_id = pdv.fin_payment_sched_inv_id  
JOIN fin_paymentmethod pm ON pm.fin_paymentmethod_id = COALESCE(pdv.fin_paymentmethod_id, ps.fin_paymentmethod_id)  
WHERE a.issotrx = 'Y' AND a.processed = 'Y' AND a.docstatus &lt;&gt; 'VO' AND g.em_sswh_implementautoriza = 'Y' 
AND g.isreversal = 'N' AND g.docbasetype = 'ARI' AND (g.em_sswh_doctype = 'I' OR g.em_sswh_doctype = 'C')  
AND A.POSTED ='Y'
and a.dateacct between to_date(':sd') and to_date(':edd')
AND (a.ad_org_id = :og1  or :og1 is null
)  
UNION ALL
 
SELECT
pm.em_sswh_codeats  ,a.ad_org_id,  
                        CASE c.em_sswh_taxidtype  
                            WHEN 'C' THEN to_char('9999999999999')  
                            ELSE to_char(c.taxid)  
                        END AS identif_cliente 
FROM c_invoice a   
LEFT JOIN c_bpartner c ON a.c_bpartner_id = c.c_bpartner_id  
LEFT JOIN c_invoicetax e ON a.c_invoice_id = e.c_invoice_id  
LEFT JOIN c_tax f ON e.c_tax_id = f.c_tax_id  
LEFT JOIN c_doctype g ON a.c_doctype_id = g.c_doctype_id  
LEFT JOIN sswh_taxpayer tp ON c.em_sswh_taxpayer_id = tp.sswh_taxpayer_id  
JOIN fin_payment_schedule ps ON ps.c_invoice_id = a.c_invoice_id  
LEFT JOIN ssfi_fin_payment_detail_v pdv ON ps.fin_payment_schedule_id = pdv.fin_payment_sched_inv_id  
JOIN fin_paymentmethod pm ON pm.fin_paymentmethod_id = COALESCE(pdv.fin_paymentmethod_id, ps.fin_paymentmethod_id)  
WHERE a.issotrx = 'Y' AND a.processed = 'Y' AND a.docstatus &lt;&gt; 'VO' AND g.em_sswh_implementautoriza = 'Y' AND g.isreversal = 'N' AND g.docbasetype = 'ARI' AND (g.em_sswh_doctype = 'I' OR g.em_sswh_doctype = 'C')  
AND ps.outstandingamt&gt;0        
AND A.POSTED ='Y'
and a.dateacct between to_date(':sd') and to_date(':edd')
AND (a.ad_org_id = :og1  or :og1 is null
) 
) formofpayment   
where em_sswh_codeats is not null 
group by em_sswh_codeats, ad_org_id,identif_cliente </sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="9D5ED93B5EAC4636904E403EFC841DF5" identifier="Ventas por Establecimiento - Organización">
    <id>9D5ED93B5EAC4636904E403EFC841DF5</id>
    <active>true</active>
    <creationDate transient="true">2019-05-16T16:58:43.878Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-20T16:15:49.201Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Ventas por Establecimiento - Organización</commercialName>
    <sqlscript>insert into sswh_rptc_salesbystaborg
   select 
   get_uuid() as sswh_rptc_salesbystaborg_id,
    to_char('0'::text) AS ad_client_id,
    ad_org_id as ad_org_id,
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,
    to_char('0'::text) AS updatedby,
    establecimiento
    ,sum(valor) as valor,
    coalesce(sum(compensacion),0) as compensacion,
    ':p' as process
    from sswh_rptc_salesbystab 
    where 
    (dateacct between to_date(':sd') and to_date(':edd')) and 
    (ad_org_id = :og1 or :og1 is null
    )   
    group by establecimiento</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="ACC768F9BE6B4169B89B05A96D1C7D52" identifier="Retención en Compras">
    <id>ACC768F9BE6B4169B89B05A96D1C7D52</id>
    <active>true</active>
    <creationDate transient="true">2019-05-16T14:24:40.228Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-16T15:01:01.521Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Retención en Compras</commercialName>
    <sqlscript>insert into sswh_rptc_purchasewith
 SELECT 
    get_uuid() AS sswh_rptc_purchasewith_id,
    to_char('0'::text) AS ad_client_id,
    to_char(sswh_withholdingpurchase_nats.ad_org_id) AS ad_org_id,
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,    
    to_char('0'::text) AS updatedby,
    sswh_withholdingpurchase_nats.documentno,
    sswh_withholdingpurchase_nats.document,
    sswh_withholdingpurchase_nats.name,
    sswh_withholdingpurchase_nats.codigo_ret,
    sswh_withholdingpurchase_nats.base_imp,
    sswh_withholdingpurchase_nats.porcen_ret,
    sswh_withholdingpurchase_nats.valor_ret,
    sswh_withholdingpurchase_nats.dateinvoiced,
    sswh_withholdingpurchase_nats.c_bpartner_id,
    sswh_withholdingpurchase_nats.ref_retencion,
    sswh_withholdingpurchase_nats.posted,
    sswh_withholdingpurchase_nats.dateacct,
    ':p' as process 
   FROM sswh_withholdingpurchase_nats
  WHERE sswh_withholdingpurchase_nats.posted= 'Y'
 and dateacct between to_date(':sd') and to_date(':edd')
and (ad_org_id = :og1 OR :og1 is null)</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
  <sswh_rptc_sql id="CF155C098C7A4580BFCBE4922A7C5661" identifier="Compras - Formas de Pago">
    <id>CF155C098C7A4580BFCBE4922A7C5661</id>
    <active>true</active>
    <creationDate transient="true">2019-05-17T14:55:05.87Z</creationDate>
    <createdBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <updated transient="true">2019-05-20T16:13:30.881Z</updated>
    <updatedBy transient="true" id="100" entity-name="ADUser" identifier="Openbravo - "/>
    <commercialName>Compras - Formas de Pago</commercialName>
    <sqlscript>insert into sswh_rptc_purchasepaym 
 SELECT 
    get_uuid() AS sswh_rptc_purchasepaym_id,
    to_char('0'::text) AS ad_client_id,
    to_char(sswh_purchase_formpayment_nats.ad_org_id) AS ad_org_id,
    to_char('Y'::text) AS isactive,
    now() AS created,
    to_char('0'::text) AS createdby,
    now() AS updated,
    to_char('0'::text) AS updatedby,
    sswh_purchase_formpayment_nats.documentno,
    sswh_purchase_formpayment_nats.forma_pago,
    sswh_purchase_formpayment_nats.dateacct,
    sswh_purchase_formpayment_nats.dateinvoiced,
    ':p' as process
   FROM sswh_purchase_formpayment_nats
  WHERE sswh_purchase_formpayment_nats.posted::text = 'Y'
  and dateacct between to_date(':sd') and to_date(':edd') 
and (ad_org_id = :og1 or :og1 is null)  
  ORDER BY sswh_purchase_formpayment_nats.documentno</sqlscript>
    <description xsi:nil="true"/>
  </sswh_rptc_sql>
</ob:Openbravo>
