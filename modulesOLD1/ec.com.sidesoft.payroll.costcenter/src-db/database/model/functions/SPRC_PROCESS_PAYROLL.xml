<?xml version="1.0"?>
  <database name="FUNCTION SPRC_PROCESS_PAYROLL">
    <function name="SPRC_PROCESS_PAYROLL" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_Parameter RECORD;  
  Cur_Employee RECORD;
  Cur_Concept RECORD;
  Cur_Validar0 RECORD;
  CUR_PROCESSPAYROOLL RECORD;
  Cur_payroll_emp RECORD;
  Cur_ValPayroll RECORD;

  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32) ;
  
  v_ResultStr VARCHAR2(2000) := '';
  v_Payroll_ID VARCHAR2(32);
  v_Processed VARCHAR2(60);
  v_Ticket_ID VARCHAR2(32); 
  v_Period_ID VARCHAR2(32);   
  v_Concept_ID VARCHAR2(32);
  V_TERCERO VARCHAR2(60);
  v_payroll_type VARCHAR2(32);   
  
  v_n_insertions NUMBER;
  v_Message VARCHAR2(2000):='';

--  --valornull_exception  Exception;
  v_amount NUMBER;
  V_AMOUNT_CONCEP NUMBER;
  
  v_value NUMBER;

  v_isliquidation CHARACTER(1);       --OBTG:VARCHAR2--
  v_c_partner_id_payroll VARCHAR2(32);

  v_count_payroll NUMBER;
  v_count_payroll_provision NUMBER;
  v_result AD_PINSTANCE.RESULT%TYPE;
  v_errormsg VARCHAR2(2000):='';
  v_valueconcept NUMBER;
  v_concepttypepayroll VARCHAR2(60);
  v_count_concpetwd NUMBER;
  v_pinstance_vac_id VARCHAR2(2000):='';
  v_count_afterpayroll NUMBER;
  v_end_date DATE;
  v_enddate_period DATE;
  v_ispayroll CHARACTER(1); --OBTG:VARCHAR2--
  v_PeriodDate DATE;
  v_nomodule NUMBER;
  v_executefunction VARCHAR2(2000):='';
  
    v_workerDays NUMBER;
    v_workerDays2 NUMBER;
    v_resultWorkerDays NUMBER;
    v_workingDays NUMBER;
    

BEGIN
  --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY


    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;
    
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID, 
        i.AD_Client_ID,
        i.AD_Org_ID                    
      FROM AD_PInstance i      
      WHERE i.AD_PInstance_ID = PInstance_ID      
      )
    LOOP

      v_Payroll_ID := Cur_Parameter.Record_ID;	  
     /* v_Client_ID := Cur_Parameter.AD_Client_ID;
      v_Org_ID := Cur_Parameter.AD_Org_ID;
      v_User_ID := Cur_Parameter.AD_User_ID;  */   
      
    END LOOP; -- Get Parameter


    
    
    --OBTENGO DATOS GENERALES 
    SELECT AD_CLIENT_ID INTO v_Client_ID FROM SSPR_Payroll   WHERE SSPR_Payroll_ID = v_Payroll_ID;
    SELECT AD_ORG_ID INTO v_Org_ID FROM SSPR_Payroll   WHERE SSPR_Payroll_ID = v_Payroll_ID;
    SELECT CREATEDBY INTO v_User_ID FROM SSPR_Payroll   WHERE SSPR_Payroll_ID = v_Payroll_ID;
    
    --OBTENGO DATOS DE LA NOMINA - PERIODO, ESTADO
    SELECT C_Period_ID, Processed INTO v_Period_ID, v_Processed
    FROM SSPR_Payroll
    WHERE SSPR_Payroll_ID = v_Payroll_ID;

    --- ELIMINAR RASTROS DEL FONDO DE RESERVA IESS
    DELETE FROM SSPR_CONCEPT_AMOUNT
    WHERE SSPR_CONCEPT_ID IN
    (SELECT DISTINCT EM_SSPR_CONCEPT_ID FROM C_BPARTNER WHERE EM_SSPR_RESERVEFUNDSIESS = 'Y'
    AND EM_SSPR_CONCEPT_ID IS NOT NULL) AND C_PERIOD_ID = v_Period_ID;

    --OBTENGO LIQUIDACION EMPLADO
     SELECT isliquidation, ispayroll 
     INTO v_isliquidation, v_ispayroll
     FROM sspr_payroll
     WHERE sspr_payroll_id = v_Payroll_ID;
    

    --VALIDA SI EXISTEN LIQUIDACIONES PROCESADAS

    select count(sspr_payroll_id_normal)
    into v_count_payroll
    from sspr_settlement
    where sspr_payroll_id_normal = v_Payroll_ID;

     select count(sspr_payroll_id_provision)
    into v_count_payroll_provision
    from sspr_settlement
    where sspr_payroll_id_provision = v_Payroll_ID;

    If(v_count_payroll > 0 or v_count_payroll_provision > 0) Then
	RAISE_APPLICATION_ERROR(-20000, '@sspr_payroll_liquidation@');
    End If;

    --VALIDA SI LA FECHA DE NOMINA ES MENOR A LA FECHA MAXIMA DE VACACIONES
    select enddate 
    into v_enddate_period
    from c_period where c_period_id = v_Period_ID;

    select max(end_date)
    into v_end_date
    from sspr_vacations;

    --VALIDA QUE NO TENGA NOMINAS FUTURAS
    select count(cp.enddate)
    into v_count_afterpayroll
    from sspr_payroll sp
    left join c_period cp on cp.c_period_id = sp.c_period_id
    where cp.enddate > v_enddate_period
    and sp.processed = 'Y';

    If(v_count_afterpayroll > 0)Then
	RAISE_APPLICATION_ERROR(-20000,'@Ya existen n√≥minas superiores a fecha de proceso@');
    End If;

    If(v_enddate_period < v_end_date)Then
	RAISE_APPLICATION_ERROR(-20000,'@Imposible desprocesar, vacacaciones calculadas a la fecha @' || v_end_date);
    End If;
	
    --VALIDACION DE DESPROCESO DE NOMINA

    IF (v_Processed = 'Y') THEN

        DELETE FROM SSPR_Payroll_Ticket_Concept WHERE SSPR_Payroll_Ticket_ID IN (

        SELECT SSPR_Payroll_Ticket_ID 
        FROM SSPR_Payroll_Ticket    
        WHERE SSPR_Payroll_ID = v_Payroll_ID);

        DELETE FROM SSPR_Payroll_Ticket WHERE SSPR_Payroll_ID = v_Payroll_ID;

        v_ResultStr:='UpdatingRecord';
        UPDATE SSPR_Payroll
        SET    Processed = 'N',
        Updated = now(),          
        UpdatedBy=tO_CHAR(v_User_ID)
        WHERE SSPR_Payroll_ID = v_Payroll_ID;

        SSPR_LOAD_CONCEPT_LOAN4(v_Period_ID,null,null,v_Client_ID,v_Org_ID,v_User_ID);

	
        IF (v_isliquidation='Y' AND  v_ispayroll='Y') THEN -- Revisa si es liquidacion para desprocesar los prestamos

		For Cur_ValPayroll IN(
			select c_bpartner_id 
			from sspr_payroll_emp 
			WHERE sspr_payroll_id = v_Payroll_ID
		)LOOP
		 SSPR_LOAD_CONCEPT_LOAN5(v_Period_ID,Cur_ValPayroll.c_bpartner_id,null,v_Client_ID,v_Org_ID,v_User_ID);
		END LOOP;
	END IF;


    ELSE

      IF (v_isliquidation = 'N') THEN
      
	      --/****** @NUEVO DESARROLLO@ ******/

	      --OBTENGO DATOS DE ORDEN DE PROCESO DE GENERACION DE NOMINA
	      FOR CUR_PROCESSPAYROOLL IN 
        (
          SELECT * FROM SSPR_PROCESS_PAYROLL WHERE ISACTIVE='Y' ORDER BY LINE
	      )
	      LOOP

	     --*** PROCESO DIAS LABORABLES - WD
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='WD') THEN 
              --RAISE NOTICE '%','*AQUI VA EL NUEVO DESARROLLO PARA DIAS LABORABLES' ;
              SSPR_UPDATE_WORKINGDAYS(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO DIAS LABORABLES - WD
            
              --*** PROCESO DIAS LABORADOS -WDD
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='WDD') THEN 
		--RAISE NO_DATA_FOUND ;
             --RAISE_APPLICATION_ERROR(-20000,'Charlie :' || v_Period_ID || ' - ' || CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID
             --|| ' - ' || CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID
            -- || ' - ' || v_Client_ID
           --  || ' - ' || v_Org_ID
          --   || ' - ' ||v_User_ID  
         --    || ' - p_inSTANCE ' || pinstance_id) ;

                    SSPR_UPDATEWORKEDDAYS(pinstance_id,v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
                    
                    select coalesce(to_number((SELECT PI.RESULT
                    FROM AD_PINSTANCE PI WHERE PI.ad_pinstance_id = pinstance_id)),to_number(1))
                    INTO v_result
                    from dual;
                    
                    select coalesce(to_Char((SELECT PI.ERRORMSG 
                    FROM AD_PINSTANCE PI WHERE PI.ad_pinstance_id = pinstance_id)),to_char(''))
                    INTO  v_errormsg
                    from dual;
                    
                    

                    If v_result = 0 then
                    RAISE_APPLICATION_ERROR(-20000, v_errormsg) ;
                    End if;



            END IF;--*** FIN PROCESO DIAS LABORADOS -WDD
        
           --*** PROCESO NOMINA - 
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='GP') THEN 
        
                --VALIDO ESTADO NOMINA
                v_count_concpetwd := 0;
                
                IF (v_Processed = 'N') THEN
        
                  FOR Cur_Employee IN
                  (SELECT CBP.C_BPartner_ID, P.SSPR_Period_ID,CBP.EM_SSPR_RESERVEFUNDSIESS,CBP.EM_SSPR_CONCEPT_ID
                  ,em_sspr_costcenter_id as c_costcenter_id, em_sspr_user1_id as user1_id, em_sspr_user2_id as user2_id
                  ,em_sspr_category_acct_id
                   FROM C_BPartner CBP 
                   LEFT JOIN SSPR_Period P ON CBP.C_BPartner_ID = P.C_BPartner_ID
                   WHERE IsEmployee = 'Y' AND CBP.Ad_Client_ID = v_Client_ID AND CBP.Ad_Org_ID = v_Org_ID
                   AND P.C_Period_ID = v_Period_ID 
                   AND CBP.EM_SSPR_Status='A'
                   AND CBP.em_sspr_create_payroll = 'Y'
                  )
                  LOOP
        
                      DBMS_OUTPUT.PUT_LINE( 'empleado: ' || Cur_Employee.c_bpartner_id);
        
                      --VALIDO QUE TENGA CONFIGURADO EL CONCEPTO PARA ENVIAR FONDOS DE RESRVA AL IESS
		      IF (Cur_Employee.EM_SSPR_RESERVEFUNDSIESS='Y' AND COALESCE(Cur_Employee.EM_SSPR_CONCEPT_ID,NULL) IS NULL) THEN 
			SELECT NAME INTO V_TERCERO FROM C_BPARTNER WHERE C_BPARTNER.C_BPARTNER_ID = Cur_Employee.C_BPARTNER_ID;
			ROLLBACK;
			RAISE_APPLICATION_ERROR(-20000, '@ERROR=EL EMPLEADO '||V_TERCERO||' NO TIENE CONFIGURADO CONCEPTO PARA FONDOS DE RESERVA-IESS@');
		      END IF;

                            
                      SELECT TO_CHAR(COALESCE((SELECT TO_CHAR(SSPR_Payroll_Ticket_ID)
                      FROM SSPR_Payroll_Ticket
                      WHERE SSPR_Payroll_ID = v_Payroll_ID 
                            AND C_BPartner_ID = Cur_Employee.C_BPartner_ID),'ND'))  INTO v_Ticket_ID FROM DUAL;


                      IF (v_Ticket_ID = TO_CHAR('ND') ) THEN
                      
			--VALIDO QUE NO EXISTAN MAS DE UN CONCEPTO CONFIGURADO COMO DIAS LABORADOS
			select count(*) 
			into v_count_concpetwd
			from sspr_concept c where c.concepttypepayroll = 'WD';

			If(v_count_concpetwd > 1)Then
				RAISE_APPLICATION_ERROR(-20000, '@ERROR= EXISTE CONFIGURADO MAS DE UN CONCEPTO PARA DIAS LABORADOS@');
			End If;
						
                        v_Ticket_ID := get_uuid(); 
                        
                        select 
                        coalesce(to_number((select amount
                        from sspr_concept_amount 
                        where sspr_concept_id = (select sspr_conceptout_id from SSPR_PROCESS_PAYROLL where processname = 'WDD')
                        and c_period_id = v_Period_ID
                        and c_bpartner_id = Cur_Employee.C_BPartner_ID)),to_number(0))
                        into v_workerDays
                        from dual;
                        
                        
                        select
                        coalesce(to_number((select amount
                        from sspr_concept_amount 
                        where sspr_concept_id = (select c.sspr_concept_id from sspr_concept c where c.concepttypepayroll = 'WD')
                        and c_period_id = v_Period_ID
                        and c_bpartner_id = Cur_Employee.C_BPartner_ID)),to_number(0))
                        into v_workerDays2
                        from dual;
                        
                        
                        if (v_workerDays=0) then
                        
                            v_resultWorkerDays:= v_workerDays2;
                        else 
                            v_resultWorkerDays:= v_workerDays;
                            
                        end if;
                        
                        
                        select 
                        coalesce(to_number((select amount
                        from sspr_concept_amount 
                        where sspr_concept_id = (select sspr_conceptout_id from SSPR_PROCESS_PAYROLL where processname = 'WD')
                        and c_period_id = v_Period_ID
                        and c_bpartner_id = Cur_Employee.C_BPartner_ID)),to_number(0))
                        into v_workingDays
                        from dual;
                        
                        
                        INSERT INTO SSPR_Payroll_Ticket
                        (SSPR_Payroll_Ticket_ID, AD_Client_ID, AD_Org_ID, IsActive,
                        Created, CreatedBy, Updated, UpdatedBy,
                        SSPR_Payroll_ID, C_BPartner_ID, totalincome, totalexpense, totalnet,
                        workeddays, workingdays , em_sprc_costcenter_id, em_sprc_user1_id, em_sprc_user2_id,
                        em_sprc_cat_acct_id
                        )
                        VALUES
                        (v_Ticket_ID, v_Client_ID, v_Org_ID, 'Y',
                        now(), v_User_ID, now(), v_User_ID,
                        v_Payroll_ID, Cur_Employee.C_BPartner_ID, 0, 0, 0,
                        v_resultWorkerDays,
                        v_workingDays, Cur_Employee.c_costcenter_id, Cur_Employee.user1_id, Cur_Employee.user2_id
                        , Cur_Employee.em_sspr_category_acct_id
                        );
                        v_n_insertions := v_n_insertions + 1;
                
                      END IF;
                
        
                       --Insert concepts with amount.
                      
                      FOR Cur_Concept IN
                      (SELECT SSPR_Period_Concept.SSPR_Concept_ID, sspr_concept.isincomecalculated,
                       sspr_concept.iscumulative,sspr_concept.isprojected, sspr_concept.isiess
                       FROM SSPR_Period_Concept
                       left join sspr_concept on sspr_concept.sspr_concept_id = sspr_period_concept.sspr_concept_id
                       WHERE SSPR_Period_Concept.SSPR_Period_ID = Cur_Employee.SSPR_Period_ID
                      )
                      LOOP



                        SELECT TO_CHAR(COALESCE((SELECT TO_CHAR(SSPR_Payroll_Ticket_Concept_ID)
                        FROM SSPR_Payroll_Ticket_Concept
                        WHERE SSPR_Payroll_Ticket_ID = v_Ticket_ID 
                        AND SSPR_Concept_ID = Cur_Concept.SSPR_Concept_ID),'ND'))  INTO v_Concept_ID FROM DUAL;
                
                              
                        IF (v_Concept_ID = TO_CHAR('ND') ) THEN
                
                          v_Concept_ID := get_uuid(); 
                    
                          v_value:= SSPR_GET_BUSINESS_CONCEPT(Cur_Concept.SSPR_Concept_ID, v_Period_ID, Cur_Employee.C_BPartner_ID);
                          
                          --RAISE_APPLICATION_ERROR(-20000, 'new v_value' || v_value);

                          --HORAS EXTRAS
                          v_valueconcept := 0;

                          select coalesce(to_char((select concepttypepayroll 
                          
                          from sspr_concept 
                          where sspr_concept_id = Cur_Concept.SSPR_Concept_ID))
                          ,to_char(''))
                          into v_concepttypepayroll
                          from dual;

                          If(v_concepttypepayroll = 'XT')Then

				  select coalesce((select coalesce(amount,0)
				  from sspr_concept_amount
				  where c_bpartner_id = Cur_Employee.C_BPartner_ID
				  and sspr_concept_id = (select conceptformulates
							from sspr_concept
							where sspr_concept_id = Cur_Concept.SSPR_Concept_ID)
				  and c_period_id = v_Period_ID),0)
				  into v_valueconcept
				  from dual;
			  End If;
                       
                           
                          IF (COALESCE(TO_NUMBER(v_value),0) = 0) THEN
				v_value:=0;
                          END IF;
                          
                          --RAISE_APPLICATION_ERROR(-20000, ' 2 NO HAY TIPO DE DOCUMENTO PARA GENERAR EL ASIENTO '||Cur_Concept.SSPR_Concept_ID||' '|| v_Period_ID||' '|| Cur_Employee.C_BPartner_ID);
                             
                          INSERT INTO SSPR_Payroll_Ticket_Concept
                          (SSPR_Payroll_Ticket_Concept_ID, AD_Client_ID, AD_Org_ID, IsActive,
                          Created, CreatedBy, Updated, UpdatedBy,
                          SSPR_Payroll_Ticket_ID, SSPR_Concept_ID,
                          Amount,isincomecalculated, iscumulative, isprojected, isiess,valueconcept 
                          )
                          VALUES
                          (v_Concept_ID, v_Client_ID, v_Org_ID, 'Y',
                          now(), v_User_ID, now(), v_User_ID,
                          v_Ticket_ID, Cur_Concept.SSPR_Concept_ID,
                          v_value, Cur_Concept.isincomecalculated, Cur_Concept.iscumulative,
                          Cur_Concept.isprojected, Cur_Concept.isiess,v_valueconcept
                          );   
                            
                          --SSPR_GET_BUSINESS_CONCEPT(Cur_Concept.SSPR_Concept_ID, v_Period_ID, Cur_Employee.C_BPartner_ID)
                          -- RAISE_APPLICATION_ERROR(-20000, 'new ' || v_Concept_ID);
                
                        END IF;
                
                      END LOOP;
        
                  END LOOP;
                  
        
                  v_ResultStr:='UpdatingRecord';
                  
                  UPDATE SSPR_Payroll
                  SET    Processed = 'Y',
                   Updated = now(),          
                   UpdatedBy=TO_CHAR(v_User_ID)
                  WHERE SSPR_Payroll_ID = v_Payroll_ID;
                  
              ---ACTUALIZA A 0 EL CONCEPTO FONDO DE RESERVA SI EL EMPLEADOS TRABAJA < 1 A√ëO
              --EXECUTE IMMEDIATE 'SELECT SSPR_VALIDARESERVFOUND(' || v_Period_ID || ') FROM DUAL';
                  SSPR_VALIDARESERVFOUND(v_Period_ID);

                END IF;
                
            END IF;--*** FIN PROCESO NOMINA -
        
          
            
            --*** PROCESO ACTUALIZAR SUELDO - US
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='US') THEN 
              -- RAISE NOTICE '%','*AQUI VA EL NUEVO DESARROLLO PARA ACTUALIZAR SUELDO' ;
              SSPR_UPDATE_SALARY(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO ACTUALIZAR SUELDO - US

	    --*** PROCESO ACTUALIZA SUELDO SUBSIDIADO - SB
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME = 'SS')THEN
            SSPR_SALARY_LEAVE(V_PERIOD_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,V_CLIENT_ID,V_ORG_ID,V_USER_ID,V_PAYROLL_ID);
            END IF;
            
            --*** PROCESO FONDOS DE RESERVA - RF
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='RF') THEN 
              SSPR_GENERATE_RESERVEFOUNDS2(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO FONDOS DE RESERVA - RF
            
            --*** PROCESO CALCULAR SUBRROGATE - LS
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='LS') THEN 
              SFPR_SURROGATE_CALCULATE2(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO CALCULAR SUBRROGATE - LS
            
            --*** PROCESO CREAR CONCEPTO SUBRROGATE - CS
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='CS') THEN 
              SFPR_CREATE_CONCEPT_SURROGATE2(v_Period_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO CREAR CONCEPTO SUBRROGATE - CS
            
            --*** PROCESO CALCULAR RVE - LRVE
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='LRVE') THEN 
              SFPR_RVE_CALCULATE2(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO CALCULAR RVE - LRVE
        
            --*** PROCESO CREAR RVE - CRVE
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='CRVE') THEN 
              SFPR_CREATE_CONCEPT_RVE2(v_Period_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO CREAR RVE - CRVE
            
            --*** PROCESO PRESTAMOS - LL
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='LL') THEN 
              --RAISE NO_DATA_FOUND ;          
              SSPR_LOAD_CONCEPT_LOAN2(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO PRESTAMOS - LL
                   
            --*** PROCESO IMPUESTO A LA RENTA - IT 
            select ispayroll
	    into v_payroll_type
	    from sspr_payroll
	    where SSPR_Payroll_ID = v_Payroll_ID;
	    
           IF (CUR_PROCESSPAYROOLL.PROCESSNAME='IT' and  v_payroll_type = 'Y') THEN 
              --PROCESO CARGAR ACUMULABLES
              SSPR_ACUMULATIVECONCEPTS(v_Payroll_ID); 
              
              --PROCESO GENERAR IMPUESTO A LA RENTA
              SSPR_INCOMETOTALS(NULL);
            END IF;--*** FIN PROCESO IMPUESTO A LA RENTA - IT 

            --*** PROCESO TIPO DE CONTRIBUCION - CT
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='CT') THEN 
              --PROCESO GENERAR IMPUESTO A LA RENTA
               SFPR_UPDATECONTRIBUTIONIESS2(v_Period_ID,v_Client_ID,v_Org_ID,v_User_ID);      
            END IF;--*** FIN PROCESO TIPO DE CONTRIBUCION - CT

            --*** PROCESO VACACIONES TOMADAS - LT
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME = 'LT')THEN
            SSPR_LEAVE_TAKEN(V_PERIOD_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,V_CLIENT_ID,V_ORG_ID,V_USER_ID,V_PAYROLL_ID);
            END IF;

            --***PROCESO DIAS ADICIONALES
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME = 'AD')THEN
            SSPR_UPDATE_ADDITIONAL_DAYS(v_Period_ID, CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID, CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID, v_Client_ID, v_Org_ID, v_User_ID);
            END IF;

            --***PROCESO VACACIONES PAGADAS
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME = 'PL')THEN
            SSPR_LEAVE_PAID(V_PERIOD_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,V_CLIENT_ID,V_ORG_ID,V_USER_ID,V_PAYROLL_ID);
            END IF;

	     --***PROCESO PROCESAR VACACIONES
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME = 'VA')THEN
              --Crea instancia para vacacaiones
              v_pinstance_vac_id := get_uuid();
              
              
              select enddate 
              into v_PeriodDate
              from c_period where c_period_id = v_Period_ID;
      
              insert into AD_PINSTANCE( ad_pinstance_id, ad_process_id,record_id, isprocessing, created, ad_user_id, updated, 
                                        result, errormsg,ad_client_id, ad_org_id,createdby,updatedby,isactive)
              values(v_pinstance_vac_id,'4757D51B289F4EE8AD0CE8A77E2187DC',0,'N',now(),v_User_ID,now(),1,'@Insert@: Instance vacations',V_CLIENT_ID, V_ORG_ID, v_User_ID,v_User_ID,'Y');
              SSPR_PINSTANCE_PARA_INSERT(v_pinstance_vac_id, '1', 'p_now', NULL, NULL,0,0,coalesce(v_PeriodDate,null),NULL,v_Org_ID,v_Client_ID,v_User_ID);
  
              SSPR_CALCULATEVACATION(v_pinstance_vac_id);
              
              select 
                coalesce(
                  to_number((
                    SELECT PI.RESULT
                    FROM AD_PINSTANCE PI WHERE PI.ad_pinstance_id = v_pinstance_vac_id
                  )),to_number(1)
                ),
                coalesce(
                  to_Char((
                    SELECT PI.ERRORMSG 
                    FROM AD_PINSTANCE PI WHERE PI.ad_pinstance_id = v_pinstance_vac_id
                  )),to_char('')
                )
              INTO v_result, v_errormsg
              from dual;

              If v_result = 0 then
                RAISE_APPLICATION_ERROR(-20000, v_errormsg) ;
              End if;
             
            END IF;

            --*** PROCESO DECIMO TERCERO - TT
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='TT') THEN 
              SSPR_THIRTEENTH(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO DECIMO TERCERO - TT

            --*** PROCESO DECIMO CUARTO - FT
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='FT') THEN 
              SSPR_FOURTEENTH(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
            END IF;--*** FIN PROCESO DECIMO CUARTO - FT
		
	     --*** PROCESO BONO DE CUMPLIMIENTO
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='BC') THEN 
              SSPR_BONO_COMPLIANCE(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Null);
            END IF;

            --*** PROCESO MOVILIZACION
            IF (CUR_PROCESSPAYROOLL.PROCESSNAME='MV') THEN 
              SSPR_MOBILIZATION(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Null);
            END IF; 

	         -- PROCESO CARGAR NOVEDADES
      	    If (CUR_PROCESSPAYROOLL.PROCESSNAME='EV') THEN 
      		    select coalesce((select count(*) as contar 
      				    from ad_module 
      				    where javapackage = 'ec.com.sidesoft.payroll.events'),0)
      		    into v_nomodule
      		    from dual;
      		    If(v_nomodule > 0) Then
      			   v_executefunction := 'SELECT  SPEV_EVENTS('''|| v_Period_ID ||''',Null,Null,''' || v_Client_ID || ''',''' || v_Org_ID || ''',''' || v_User_ID || ''',Null) FROM DUAL';
      			   EXECUTE IMMEDIATE v_executefunction; 
      		    End If; 
      	    END IF;

	  END LOOP;
	      --/********************** @FIN NUEVO DESARROLLO-(FERNANDA IGUAMBA)@ ******/
    
    ELSE
      
        IF(v_isliquidation = 'Y') THEN

        	For Cur_payroll_emp In(
        		select c_bpartner_id
        		from sspr_payroll_emp
        		where sspr_payroll_id = v_Payroll_ID
        	)
        	Loop

        	    --OBTENGO DATOS DE ORDEN DE PROCESO DE GENERACION DE NOMINA          
                    FOR CUR_PROCESSPAYROOLL IN 
                    (
                        SELECT * FROM SSPR_PROCESS_PAYROLL WHERE ISACTIVE='Y' ORDER BY LINE
                    )
                    LOOP

                     --*** PROCESO DIAS LABORABLES - WD
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='WD') THEN 
                      --RAISE NOTICE '%','*AQUI VA EL NUEVO DESARROLLO PARA DIAS LABORABLES' ;
                      SSPR_UPDATE_WORKINGDAYS_LIQ(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID,Cur_payroll_emp.c_bpartner_id);
                    END IF;--*** FIN PROCESO DIAS LABORABLES - WD
                    
                    --*** PROCESO DIAS LABORADOS -WDD
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='WDD') THEN 
                      --RAISE NO_DATA_FOUND ;
                      SSPR_UPDATEWORKEDDAYS_LIQ(pinstance_id,v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
                    END IF;--*** FIN PROCESO DIAS LABORADOS -WDD
                        
                    --*** PROCESO NOMINA - 
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='GP') THEN 
                
                        --VALIDO ESTADO NOMINA
                        IF (v_Processed = 'N') THEN
                
                          FOR Cur_Employee IN
                          (SELECT CBP.C_BPartner_ID, P.SSPR_Period_ID,CBP.EM_SSPR_RESERVEFUNDSIESS,CBP.EM_SSPR_CONCEPT_ID
                          ,em_sspr_costcenter_id as c_costcenter_id, em_sspr_user1_id as user1_id, em_sspr_user2_id as user2_id
                          ,em_sspr_category_acct_id
                           FROM C_BPartner CBP 
                           LEFT JOIN SSPR_Period P ON CBP.C_BPartner_ID = P.C_BPartner_ID
                           WHERE IsEmployee = 'Y' AND CBP.Ad_Client_ID = v_Client_ID AND CBP.Ad_Org_ID = v_Org_ID
                           AND P.C_Period_ID = v_Period_ID 
                           AND CBP.ISACTIVE = 'Y'
                           AND CBP.EM_SSPR_Status='L'
                           AND CBP.em_sspr_create_payroll = 'Y'
                           AND CBP.c_bpartner_id = Cur_payroll_emp.c_bpartner_id
                          )
                          LOOP
                              
                            DBMS_OUTPUT.PUT_LINE( 'empleado: ' || Cur_Employee.c_bpartner_id);
                
                            --VALIDO QUE TENGA CONFIGURADO EL CONCEPTO PARA ENVIAR FONDOS DE RESRVA AL IESS
                            IF (Cur_Employee.EM_SSPR_RESERVEFUNDSIESS='Y' AND COALESCE(Cur_Employee.EM_SSPR_CONCEPT_ID,NULL) IS NULL) THEN 
                              SELECT NAME INTO V_TERCERO FROM C_BPARTNER WHERE C_BPARTNER.C_BPARTNER_ID = Cur_Employee.C_BPARTNER_ID;
                              ROLLBACK;
                              RAISE_APPLICATION_ERROR(-20000, '@ERROR=EL EMPLEADO '||V_TERCERO||' NO TIENE CONFIGURADO CONCEPTO PARA FONDOS DE RESERVA-IESS@');
                            END IF;
                                
                            SELECT TO_CHAR(COALESCE((SELECT TO_CHAR(SSPR_Payroll_Ticket_ID)
                            FROM SSPR_Payroll_Ticket
                            WHERE SSPR_Payroll_ID = v_Payroll_ID 
                                  AND C_BPartner_ID = Cur_Employee.C_BPartner_ID),'ND'))  INTO v_Ticket_ID FROM DUAL;
                                 
                            IF (v_Ticket_ID = TO_CHAR('ND') ) THEN




                                select 
                                coalesce(to_number((select amount
                                from sspr_concept_amount 
                                where sspr_concept_id = (select sspr_conceptout_id from SSPR_PROCESS_PAYROLL where processname = 'WDD')
                                and c_period_id = v_Period_ID
                                and c_bpartner_id = Cur_Employee.C_BPartner_ID)),to_number(0))
                                into v_workerDays
                                from dual;
                                
                                
                               
                                
                                select 
                                coalesce(to_number((select amount
                                from sspr_concept_amount 
                                where sspr_concept_id = (select sspr_conceptout_id from SSPR_PROCESS_PAYROLL where processname = 'WD')
                                and c_period_id = v_Period_ID
                                and c_bpartner_id = Cur_Employee.C_BPartner_ID)),to_number(0))
                                into v_workingDays
                                from dual;
                                
                                
                              v_Ticket_ID := get_uuid();
                              
                              INSERT INTO SSPR_Payroll_Ticket
                              (SSPR_Payroll_Ticket_ID, AD_Client_ID, AD_Org_ID, IsActive,
                              Created, CreatedBy, Updated, UpdatedBy,
                              SSPR_Payroll_ID, C_BPartner_ID, totalincome, totalexpense, totalnet,
                              workeddays, workingdays, em_sprc_costcenter_id, em_sprc_user1_id, em_sprc_user2_id, em_sprc_cat_acct_id
                              )
                              VALUES
                              (v_Ticket_ID, v_Client_ID, v_Org_ID, 'Y',
                              now(), v_User_ID, now(), v_User_ID,
                              v_Payroll_ID, Cur_Employee.C_BPartner_ID, 0, 0, 0,
                    		      v_workerDays,	v_workingDays, Cur_Employee.c_costcenter_id, Cur_Employee.user1_id, Cur_Employee.user2_id
                    		      , Cur_Employee.em_sspr_category_acct_id
                              );
                      
                              v_n_insertions := v_n_insertions + 1;
                      
                            END IF;

                            FOR Cur_Concept IN
                              (SELECT SSPR_Concept_ID
                               FROM SSPR_Period_Concept
                               WHERE SSPR_Period_ID = Cur_Employee.SSPR_Period_ID
                              )
                            LOOP

                              SELECT TO_CHAR(COALESCE((SELECT TO_CHAR(SSPR_Payroll_Ticket_Concept_ID)
                              FROM SSPR_Payroll_Ticket_Concept
                              WHERE SSPR_Payroll_Ticket_ID = v_Ticket_ID 
                              AND SSPR_Concept_ID = Cur_Concept.SSPR_Concept_ID),'ND'))  INTO v_Concept_ID FROM DUAL;
                      
                                    
                              IF (v_Concept_ID = TO_CHAR('ND') ) THEN
                      
                                  v_Concept_ID := get_uuid(); 
                            
                                  v_value:= SSPR_GET_BUSINESS_CONCEPT(Cur_Concept.SSPR_Concept_ID, v_Period_ID, Cur_Employee.C_BPartner_ID);

                                  --HORAS EXTRAS
                                  v_valueconcept := 0;

                                  select concepttypepayroll 
                                  into v_concepttypepayroll
                                  from sspr_concept 
                                  where sspr_concept_id = Cur_Concept.SSPR_Concept_ID;
                                  
                                  If(v_concepttypepayroll = 'XT')Then
                                  
                          				  select coalesce((select coalesce(amount,0)
                          				  from sspr_concept_amount
                          				  where c_bpartner_id = Cur_Employee.C_BPartner_ID
                          				  and sspr_concept_id = (select conceptformulates
                          							from sspr_concept
                          							where sspr_concept_id = Cur_Concept.SSPR_Concept_ID)
                          				  and c_period_id = v_Period_ID),0)
                          				  into v_valueconcept
                          				  from dual;
                          			  End If;
                                                            
                                  IF (COALESCE(TO_NUMBER(v_value),0) = 0) THEN
                                    
                                    v_value:=0;
                                 
                                  END IF;
                                     
                                  INSERT INTO SSPR_Payroll_Ticket_Concept
                                  (SSPR_Payroll_Ticket_Concept_ID, AD_Client_ID, AD_Org_ID, IsActive,
                                  Created, CreatedBy, Updated, UpdatedBy,
                                  SSPR_Payroll_Ticket_ID, SSPR_Concept_ID,
                                  Amount, valueconcept
                                  )
                                  VALUES
                                  (v_Concept_ID, v_Client_ID, v_Org_ID, 'Y',
                                  now(), v_User_ID, now(), v_User_ID,
                                  v_Ticket_ID, Cur_Concept.SSPR_Concept_ID,
                                  v_value, v_valueconcept
                                  );   
                        
                              END IF;
                      
                            END LOOP;
                
                          END LOOP;
                
                          v_ResultStr:='UpdatingRecord';
                          
                          UPDATE SSPR_Payroll
                          SET    Processed = 'Y',
                           Updated = now(),          
                           UpdatedBy=TO_CHAR(v_User_ID)
                          WHERE SSPR_Payroll_ID = v_Payroll_ID;
                          
                          ---ACTUALIZA A 0 EL CONCEPTO FONDO DE RESERVA SI EL EMPLEADOS TRABAJA < 1 A√ëO
                          --EXECUTE IMMEDIATE 'SELECT SSPR_VALIDARESERVFOUND(' || v_Period_ID || ') FROM DUAL';
                          SSPR_VALIDARESERVFOUND_LIQ(v_Period_ID);
                
                        END IF;
                    END IF;--*** FIN PROCESO NOMINA 
                    
                    --*** PROCESO ACTUALIZAR SUELDO - US
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='US') THEN 
        		          --RAISE NOTICE '%','*AQUI VA EL NUEVO DESARROLLO PARA ACTUALIZAR SUELDO' ;
                      SSPR_UPDATE_SALARY_LIQ(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID,Cur_payroll_emp.c_bpartner_id);
                      
                    END IF;--*** FIN PROCESO ACTUALIZAR SUELDO - US
                    
                    --*** PROCESO FONDOS DE RESERVA - RF
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='RF') THEN 
                      SSPR_GENERATERESVFOUNDS2_LIQ(v_Payroll_ID,v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID,Cur_payroll_emp.c_bpartner_id);
                     -- SSPR_GENERATE_RESERVEFOUNDS2
                    END IF;--*** FIN PROCESO FONDOS DE RESERVA - RF
                    
                    --*** PROCESO CALCULAR SUBRROGATE - LS
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='LS') THEN 
                      SFPR_SURROGATE_CALCULATE2(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
                    END IF;--*** FIN PROCESO CALCULAR SUBRROGATE - LS
                    
                    --*** PROCESO CREAR CONCEPTO SUBRROGATE - CS
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='CS') THEN 
                      SFPR_CREATE_CONCEPT_SURROGATE2(v_Period_ID,v_Client_ID,v_Org_ID,v_User_ID);          
                    END IF;--*** FIN PROCESO CREAR CONCEPTO SUBRROGATE - CS
                    
                    --*** PROCESO CALCULAR RVE - LRVE
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='LRVE') THEN 
                      SFPR_RVE_CALCULATE2(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID);
                    END IF;--*** FIN PROCESO CALCULAR RVE - LRVE
                
                    --*** PROCESO CREAR RVE - CRVE
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='CRVE') THEN 
                      SFPR_CREATE_CONCEPT_RVE2(v_Period_ID,v_Client_ID,v_Org_ID,v_User_ID);
                    END IF;--*** FIN PROCESO CREAR RVE - CRVE
                    
                    --*** PROCESO PRESTAMOS - LL
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='LL') THEN 
                      --RAISE NO_DATA_FOUND ;          
                      SSPR_LOAD_CONCEPT_LOAN2_LIQ(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Cur_payroll_emp.c_bpartner_id);
                    END IF;--*** FIN PROCESO PRESTAMOS - LL
                           
                   --*** PROCESO IMPUESTO A LA RENTA - IT 
                    select ispayroll
                    into v_payroll_type
                    from sspr_payroll
                    where SSPR_Payroll_ID = v_Payroll_ID;

                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='IT' and  v_payroll_type = 'Y') THEN 

                      --ELIMINA EL CONCEPTO IR CREADO CON VALOR 0
                      DELETE FROM SSPR_PAYROLL_TICKET_CONCEPT
                      WHERE SSPR_CONCEPT_ID = CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID
                      AND SSPR_PAYROLL_TICKET_ID = (SELECT SSPR_PAYROLL_TICKET_ID
        					      FROM SSPR_PAYROLL_TICKET
        					      WHERE SSPR_PAYROLL_ID = v_Payroll_ID
        					      AND C_BPARTNER_ID = Cur_payroll_emp.c_bpartner_id);

                    END IF;--*** FIN PROCESO IMPUESTO A LA RENTA - IT 

                    --*** PROCESO TIPO DE CONTRIBUCION - CT
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='CT') THEN 
                       SFPR_UPDATECONTRIBIESS2_LIQ(v_Period_ID,v_Client_ID,v_Org_ID,v_User_ID);      
                    END IF;--*** FIN PROCESO TIPO DE CONTRIBUCION - CT

                     --*** PROCESO DECIMO TERCERO - TT
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='TT') THEN 
                      SSPR_THIRTEENTH_LIQ(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Cur_payroll_emp.c_bpartner_id);
                    END IF;--*** FIN PROCESO DECIMO TERCERO - TT

                    --*** PROCESO DECIMO CUARTO - FT
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='FT') THEN 
                      SSPR_FOURTEENTH_LIQ(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Cur_payroll_emp.c_bpartner_id);
                    END IF;--*** FIN PROCESO DECIMO CUARTO - FT

                       --***PROCESO PROCESAR VACACIONES
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME = 'VA')THEN
                      --Crea instancia para vacacaiones
                      v_pinstance_vac_id := get_uuid();
                      
                      select enddate 
                      into v_PeriodDate
                      from c_period where c_period_id = v_Period_ID;  
                      
                      insert into AD_PINSTANCE(ad_pinstance_id, ad_process_id,record_id, isprocessing, created, ad_user_id, updated, 
                      result, errormsg,ad_client_id, ad_org_id,createdby,updatedby,isactive)
                      values(v_pinstance_vac_id,'4757D51B289F4EE8AD0CE8A77E2187DC',0,'N',now(),v_User_ID,now(),1,'@Insert@: Instance vacations',V_CLIENT_ID, V_ORG_ID, v_User_ID,v_User_ID,'Y');
                      SSPR_PINSTANCE_PARA_INSERT(v_pinstance_vac_id, '1', 'p_now', NULL, NULL,0,0,coalesce(v_PeriodDate,null),NULL,v_Org_ID,v_Client_ID,v_User_ID);
          
                      SSPR_CALCULATEVACATION(v_pinstance_vac_id); 		        
                       
                      select 
                        coalesce(
                          to_number((
                            SELECT PI.RESULT
                            FROM AD_PINSTANCE PI WHERE PI.ad_pinstance_id = v_pinstance_vac_id
                          )),to_number(1)
                        ),
                        coalesce(
                          to_Char((
                            SELECT PI.ERRORMSG 
                            FROM AD_PINSTANCE PI WHERE PI.ad_pinstance_id = v_pinstance_vac_id
                          )),to_char('')
                        )
                      INTO v_result, v_errormsg
                      from dual;

                      If v_result = 0 then
                        RAISE_APPLICATION_ERROR(-20000, v_errormsg) ;
                      End if;

                   END IF;

                    --*** PROCESO BONO DE CUMPLIMIENTO
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='BC') THEN 
                      SSPR_BONO_COMPLIANCE(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Cur_payroll_emp.c_bpartner_id);
                    END IF;

                    --*** PROCESO MOVILIZACION
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='MV') THEN 
                      SSPR_MOBILIZATION(v_Period_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTIN_ID,CUR_PROCESSPAYROOLL.SSPR_CONCEPTOUT_ID,v_Client_ID,v_Org_ID,v_User_ID, Cur_payroll_emp.c_bpartner_id);
                    END IF; 

                    -- *********************************************************
                    -- INICIO PROCESO CARGAR NOVEDADES NOMINA DE LIQUIDACION
                    -- *********************************************************
                    IF (CUR_PROCESSPAYROOLL.PROCESSNAME='EV') THEN 
                        select coalesce((select count(*) as contar 
                            from ad_module 
                            where javapackage = 'ec.com.sidesoft.payroll.events'),0)
                        into v_nomodule
                        from dual;
                        IF(v_nomodule > 0) Then
                         v_executefunction := 'SELECT  SPEV_EVENTS_LIQUIDATION('''|| v_Period_ID ||''',Null,Null,''' || v_Client_ID || ''',''' || v_Org_ID || ''',''' || v_User_ID || ''',Null) FROM DUAL';
                         EXECUTE IMMEDIATE v_executefunction; 
                        END IF;
                    END IF;
                    -- *********************************************************
                    -- FIN PROCESO CARGAR NOVEDADES NOMINA DE LIQUIDACION
                    -- *********************************************************                              
                    
                  END LOOP;

                  END LOOP;
                        
                  END IF;
        	
              END IF;
	
    END IF;    

    v_Message := '@RowsInserted@: ' || v_n_insertions || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
    
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;

    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SPRC_PROCESS_PAYROLL
]]></body>
    </function>
  </database>
