
package ec.cusoft.facturaec.pruebas.recepcion;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.1-hudson-417-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "RecepcionComprobantesService", targetNamespace = "http://ec.gob.sri.ws.recepcion", wsdlLocation = "https://celcer.sri.gob.ec/comprobantes-electronicos-ws/RecepcionComprobantes?wsdl")
public class RecepcionComprobantesService
    extends Service
{

    private final static URL RECEPCIONCOMPROBANTESSERVICE_WSDL_LOCATION;
    private final static WebServiceException RECEPCIONCOMPROBANTESSERVICE_EXCEPTION;
    private final static QName RECEPCIONCOMPROBANTESSERVICE_QNAME = new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesService");

    
    private final static Logger logger = Logger.getLogger(ec.cusoft.facturaec.pruebas.recepcion.RecepcionComprobantesService.class.getName());

    static {
        URL url = null;
        WebServiceException e = null;        
        try {
            URL baseUrl;
            baseUrl = ec.cusoft.facturaec.pruebas.recepcion.RecepcionComprobantesService.class.getResource(".");
            url = new URL(baseUrl, "https://celcer.sri.gob.ec/comprobantes-electronicos-ws/RecepcionComprobantes?wsdl");
        } catch (MalformedURLException ex) {
            logger.warning("Failed to create URL for the wsdl Location: 'https://celcer.sri.gob.ec/comprobantes-electronicos-ws/RecepcionComprobantes?wsdl', retrying as a local file");
            logger.warning(ex.getMessage());
        }
        RECEPCIONCOMPROBANTESSERVICE_WSDL_LOCATION = url;
        RECEPCIONCOMPROBANTESSERVICE_EXCEPTION = e;
    }

    /*public RecepcionComprobantesService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RecepcionComprobantesService() {
        super(RECEPCIONCOMPROBANTESSERVICE_WSDL_LOCATION, new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesService"));
    }

    *//**
     * 
     * @return
     *     returns RecepcionComprobantes
     *//*
    @WebEndpoint(name = "RecepcionComprobantesPort")
    public RecepcionComprobantes getRecepcionComprobantesPort() {
        return super.getPort(new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesPort"), RecepcionComprobantes.class);
    }

    *//**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RecepcionComprobantes
     *//*
    @WebEndpoint(name = "RecepcionComprobantesPort")
    public RecepcionComprobantes getRecepcionComprobantesPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesPort"), RecepcionComprobantes.class, features);
    }

}
*/
    
    public RecepcionComprobantesService() {
        super(__getWsdlLocation(), RECEPCIONCOMPROBANTESSERVICE_QNAME);
    }

    
    /*public RecepcionComprobantesService(WebServiceFeature... features) {
        super(__getWsdlLocation(), RECEPCIONCOMPROBANTESSERVICE_QNAME, features);
    }*/

    public RecepcionComprobantesService(URL wsdlLocation) {
        super(wsdlLocation, RECEPCIONCOMPROBANTESSERVICE_QNAME);
    }

    
    /*public RecepcionComprobantesService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RECEPCIONCOMPROBANTESSERVICE_QNAME, features);
    }*/

    public RecepcionComprobantesService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }
    
    /*public RecepcionComprobantesService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }*/

    /**
     * 
     * @return
     *     returns RecepcionComprobantes
     */
    @WebEndpoint(name = "RecepcionComprobantesPort")
    public RecepcionComprobantes getRecepcionComprobantesPort() {
        return super.getPort(new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesPort"), RecepcionComprobantes.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RecepcionComprobantes
     */
    @WebEndpoint(name = "RecepcionComprobantesPort")
    public RecepcionComprobantes getRecepcionComprobantesPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesPort"), RecepcionComprobantes.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RECEPCIONCOMPROBANTESSERVICE_EXCEPTION!= null) {
            throw RECEPCIONCOMPROBANTESSERVICE_EXCEPTION;
        }
        return RECEPCIONCOMPROBANTESSERVICE_WSDL_LOCATION;
    }

}
