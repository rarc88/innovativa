<?xml version="1.0"?>
  <database name="FUNCTION M_INITIALIZE_STOCK_VALUATION">
    <function name="M_INITIALIZE_STOCK_VALUATION" type="NULL">
      <parameter name="p_client" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_product" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2014-2016 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  
  -- Parameter
  TYPE RECORD IS REF CURSOR;
  Cur_legal_entities      RECORD;
  Cur_products            RECORD;
  Cur_values              RECORD;
  
  -- Parameter Variables
  v_currency_ID           VARCHAR2(32);
  v_costprecission        NUMBER;

BEGIN

  FOR Cur_legal_entities IN (
      SELECT ad_org_id, warehouse_dimension
      FROM m_costing_rule cr
      WHERE isvalidated = 'Y'
        AND (datefrom IS NULL OR  datefrom <= now())
        AND (dateto IS NULL OR dateto >= now())
        AND ad_client_id = p_client
        AND (p_org IS NULL OR AD_ORG_ISINNATURALTREE(ad_org_id, p_org, p_client) ='Y')
    ) LOOP

    SELECT COALESCE(o.c_currency_id, c.c_currency_id), c_get_currency_precision(COALESCE(o.c_currency_id, c.c_currency_id), 'C')
      INTO v_currency_ID, v_costprecission
    FROM ad_org o
      JOIN ad_client c ON o.ad_client_id = c.ad_client_id
    WHERE o.ad_org_id = Cur_legal_entities.ad_org_id;

    FOR Cur_products IN (
        SELECT m_product_id
        FROM m_product
        WHERE (AD_ORG_ISINNATURALTREE(ad_org_id, p_org, p_client) ='Y' OR p_org IS NULL)
          AND ad_client_id = p_client
          AND isstocked = 'Y'
          AND producttype = 'I'
          AND (p_product IS NULL OR m_product_id = p_product)
      ) LOOP
      FOR Cur_values IN (
          SELECT SUM(a.qty) as stock, ROUND(SUM(sumcost), v_costprecission) as valuation, aux_warehouse_id as m_warehouse_id
          FROM (
            SELECT trx.m_product_id, w.m_warehouse_id AS aux_warehouse_id,
                CASE WHEN (LAG(trx.m_transaction_id, 1) OVER (ORDER BY trx.m_transaction_id) = trx.m_transaction_id) THEN 0 ELSE trx.movementqty END AS qty,
                c_currency_convert_precision(SUM (CASE WHEN trx.movementqty < 0 THEN -tc.cost ELSE tc.cost END), tc.c_currency_id, v_currency_id, tc.dateacct, NULL, p_client, Cur_legal_entities.ad_org_id, 'C') AS sumcost
            FROM m_transaction trx
              JOIN m_locator l ON (trx.m_locator_id=l.m_locator_id)
              LEFT JOIN m_warehouse w ON w.m_warehouse_id = CASE Cur_legal_entities.warehouse_dimension WHEN 'Y' THEN l.m_warehouse_id ELSE '-1' END
              LEFT JOIN m_transaction_cost tc ON (trx.m_transaction_id = tc.m_transaction_id)
            WHERE trx.m_product_id = cur_products.m_product_id
              AND trx.iscostcalculated = 'Y'
              AND AD_ORG_ISINNATURALTREE(trx.ad_org_id, Cur_legal_entities.ad_org_id, p_client) ='Y'
              AND trx.ad_client_id = p_client
            GROUP BY trx.m_transaction_id, trx.m_product_id, tc.c_currency_id, tc.dateacct, w.m_warehouse_id, trx.movementqty
            ) a
          GROUP BY aux_warehouse_id
        ) LOOP
        M_UPDATE_STOCK_VALUATION(p_client, Cur_legal_entities.ad_org_id, '0', Cur_values.m_warehouse_id, cur_products.m_product_id, Cur_values.stock,Cur_values.valuation); 
      END LOOP; -- Loop values
    END LOOP;  -- Loop products
  END LOOP; -- Loop legal entities

EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Error initializing Stock Valuation') ;
  DBMS_OUTPUT.PUT_LINE(SQLERRM) ;
  RAISE;
END M_INITIALIZE_STOCK_VALUATION
]]></body>
    </function>
  </database>
