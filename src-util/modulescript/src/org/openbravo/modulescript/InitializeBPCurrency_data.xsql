<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2014-2015 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->
<SqlClass name="InitializeBPCurrencyData" package="org.openbravo.modulescript">
 <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT '' AS BP_Currency_ID
      FROM DUAL
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="initializeCurrency" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
     <![CDATA[ 
        UPDATE C_Bpartner bp
 		SET BP_Currency_ID = (
 		                     SELECT C_Currency_ID
 		                     FROM M_Pricelist
 		                     WHERE M_Pricelist_ID=(case when bp.iscustomer='Y' and bp.m_pricelist_id is not null then bp.M_Pricelist_ID
 		                                                when bp.isvendor='Y' and bp.po_pricelist_id is not null then  bp.PO_Pricelist_ID
 		                                                end)
 		                     )
 		WHERE bp.BP_Currency_ID IS NULL
 		AND ((bp.IsCustomer = 'Y' and bp.m_pricelist_id is not null) OR 
 		     (bp.IsVendor = 'Y' and bp.po_pricelist_id is not null))
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="UpdateBpCurrency" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
     <![CDATA[
        UPDATE C_Bpartner bp
        SET BP_Currency_ID = (
            SELECT max(i.c_currency_id)
            FROM C_INVOICE i
            WHERE i.c_bpartner_id = bp.c_bpartner_id
            AND i.docstatus = 'CO'
            GROUP BY i.c_bpartner_id
            HAVING count(distinct i.c_currency_id) = 1 
        )
        WHERE bp.BP_Currency_ID IS NULL
        AND exists (
            SELECT 1 
            FROM c_invoice ie 
            WHERE ie.c_bpartner_id = bp.c_bpartner_id 
            AND ie.docstatus  = 'CO'
        )
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="isExecuted" type="preparedStatement" return="boolean">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT count(*) as exist
        FROM DUAL
        WHERE EXISTS (SELECT 1 FROM ad_preference
                      WHERE attribute = 'InitializeBPCurrency')
      ]]>
    </Sql>
  </SqlMethod>
   <SqlMethod name="createPreference" type="preparedStatement" return="rowcount">
      <SqlMethodComment></SqlMethodComment>
       <Sql> 
       <![CDATA[ 
           INSERT INTO ad_preference (
           ad_preference_id, ad_client_id, ad_org_id, isactive,
           createdby, created, updatedby, updated,attribute
           ) VALUES (
           get_uuid(), '0', '0', 'Y', '0', NOW(), '0', NOW(),'InitializeBPCurrency')
         ]]>
        </Sql>
   </SqlMethod>
   <SqlMethod name="isUpdated" type="preparedStatement" return="boolean">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT count(*) as exist
        FROM DUAL
        WHERE EXISTS (SELECT 1 FROM ad_preference
                      WHERE attribute = 'UpdateBPCurrency')
      ]]>
    </Sql>
  </SqlMethod>
   <SqlMethod name="createUpdatePreference" type="preparedStatement" return="rowcount">
      <SqlMethodComment></SqlMethodComment>
       <Sql> 
       <![CDATA[ 
           INSERT INTO ad_preference (
           ad_preference_id, ad_client_id, ad_org_id, isactive,
           createdby, created, updatedby, updated,attribute
           ) VALUES (
           get_uuid(), '0', '0', 'Y', '0', NOW(), '0', NOW(),'UpdateBPCurrency')
         ]]>
        </Sql>
   </SqlMethod>
   <SqlMethod name="isUpdatedFromInvoice" type="preparedStatement" return="boolean">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT count(*) as exist
        FROM DUAL
        WHERE EXISTS (SELECT 1 FROM ad_preference
                      WHERE attribute = 'isUpdatedFromInvoice')
      ]]>
    </Sql>
  </SqlMethod>
   <SqlMethod name="createUpdateFromInvoicePref" type="preparedStatement" return="rowcount">
      <SqlMethodComment></SqlMethodComment>
       <Sql>
       <![CDATA[
           INSERT INTO ad_preference (
           ad_preference_id, ad_client_id, ad_org_id, isactive,
           createdby, created, updatedby, updated,attribute
           ) VALUES (
           get_uuid(), '0', '0', 'Y', '0', NOW(), '0', NOW(),'isUpdatedFromInvoice')
         ]]>
        </Sql>
   </SqlMethod>
</SqlClass>