<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2014-2015 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->
<SqlClass name="UpdatePaymentPlanData" package="org.openbravo.modulescript">
   <SqlClassComment></SqlClassComment>
   <SqlMethod name="dummy" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT '' AS id, '' AS amount FROM DUAL
      ]]>
    </Sql>
    <Field name="rownum" value="count"/>
  </SqlMethod>
  <SqlMethod name="getWrongRecords" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT ps.fin_payment_schedule_id as id, sum(psd.amount + COALESCE(psd.writeoffamt, 0)) as amount
        FROM fin_payment_scheduledetail psd
        INNER JOIN fin_payment_schedule ps 
        ON (ps.fin_payment_schedule_id = psd.fin_payment_schedule_order 
        OR ps.fin_payment_schedule_id = psd.fin_payment_schedule_invoice)
        WHERE psd.isinvoicepaid = 'Y'
        AND psd.iscanceled = 'N' 
        AND psd.fin_payment_detail_id IS NOT NULL
        GROUP BY ps.fin_payment_schedule_id, ps.paidamt, ps.outstandingamt, ps.amount
        HAVING (ps.paidamt <> sum(psd.amount + COALESCE(psd.writeoffamt, 0))
        OR (ps.outstandingamt <> ps.amount - sum(psd.amount + COALESCE(psd.writeoffamt, 0))))
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="update" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE fin_payment_schedule 
        SET paidamt = to_number(?), outstandingamt = amount - to_number(?)
        WHERE fin_payment_schedule_id = ?
      ]]>
    </Sql>    
    <Parameter name="amount1"/>
    <Parameter name="amount2"/>
    <Parameter name="id"/>
  </SqlMethod>
  <SqlMethod name="isExecuted" type="preparedStatement" return="boolean">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT count(*) as exist
        FROM DUAL
        WHERE EXISTS (SELECT 1 FROM ad_preference
                      WHERE attribute = 'PaymentPlanUpdatedV4')
      ]]>
    </Sql>
  </SqlMethod>
   <SqlMethod name="createPreference" type="preparedStatement" return="rowcount">
      <SqlMethodComment></SqlMethodComment>
       <Sql> 
       <![CDATA[ 
           INSERT INTO ad_preference (
           ad_preference_id, ad_client_id, ad_org_id, isactive,
           createdby, created, updatedby, updated,attribute
           ) VALUES (
           get_uuid(), '0', '0', 'Y', '0', NOW(), '0', NOW(),'PaymentPlanUpdatedV4')
         ]]>
        </Sql>
   </SqlMethod>
</SqlClass>
